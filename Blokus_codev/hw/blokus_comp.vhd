-- ****************************************
-- DO NOT EDIT
-- This file was automatically generated by the Impulse C Compiler.
-- 
-- Impulse C is Copyright 2002-2009, Impulse Accelerated Technologies, Inc.
-- 
-- Stage Master is Copyright 2002-2009, Green Mountain Computing Systems, Inc.
-- 
-- All rights reserved.
-- 
-- ****************************************


-- TARGET: VHDL
    
library ieee;
use ieee.std_logic_1164.all;

package external_components_hw_blokus_comp_vhd is
end package;
library ieee;
use ieee.std_logic_1164.all;
library altera_mf;
use altera_mf.altera_mf_components.all;

entity make_move_func_piece_sizes_RAM is
  port (
    rst,clk : in std_ulogic;
    we : in std_ulogic;
    w_addr : in std_ulogic_vector(4 downto 0);
    r_addr : in std_ulogic_vector(4 downto 0);
    din : in std_ulogic_vector(7 downto 0);
    dout : out std_ulogic_vector(7 downto 0)
  );
end make_move_func_piece_sizes_RAM;

architecture sync of make_move_func_piece_sizes_RAM is
  signal q_b : std_logic_vector (7 downto 0);
  signal data_a : std_logic_vector (7 downto 0);
  signal address_a : std_logic_vector (4 downto 0);
  signal address_b : std_logic_vector (4 downto 0);
begin
	address_a <= std_logic_vector(w_addr);
	address_b <= std_logic_vector(r_addr);
	data_a <= std_logic_vector(din);
	i0 : altsyncram
	GENERIC MAP (
		operation_mode => "DUAL_PORT",
		width_a => 8,
		widthad_a => 5,
		numwords_a => 21,
		width_b => 8,
		widthad_b => 5,
		numwords_b => 21,
		lpm_type => "altsyncram",
		width_byteena_a => 1,
		outdata_reg_b => "UNREGISTERED",
		indata_aclr_a => "NONE",
		wrcontrol_aclr_a => "NONE",
		address_aclr_a => "NONE",
		address_reg_b => "CLOCK0",
		address_aclr_b => "NONE",
		outdata_aclr_b => "NONE",
		read_during_write_mode_mixed_ports => "DONT_CARE",
		ram_block_type => "AUTO",
		init_file => "make_move_func_piece_sizes_RAM.mif",
		intended_device_family => "Stratix"
	)
	PORT MAP (
		wren_a => we,
		clock0 => clk,
		address_a => address_a,
		address_b => address_b,
		data_a => data_a,
		q_b => q_b
	);
	dout <= std_ulogic_vector(q_b);
end sync;

library ieee;
use ieee.std_logic_1164.all;
library altera_mf;
use altera_mf.altera_mf_components.all;

entity make_move_func_piece_y_RAM is
  port (
    rst,clk : in std_ulogic;
    we : in std_ulogic;
    w_addr : in std_ulogic_vector(9 downto 0);
    r_addr : in std_ulogic_vector(9 downto 0);
    din : in std_ulogic_vector(7 downto 0);
    dout : out std_ulogic_vector(7 downto 0)
  );
end make_move_func_piece_y_RAM;

architecture sync of make_move_func_piece_y_RAM is
  signal q_b : std_logic_vector (7 downto 0);
  signal data_a : std_logic_vector (7 downto 0);
  signal address_a : std_logic_vector (9 downto 0);
  signal address_b : std_logic_vector (9 downto 0);
begin
	address_a <= std_logic_vector(w_addr);
	address_b <= std_logic_vector(r_addr);
	data_a <= std_logic_vector(din);
	i0 : altsyncram
	GENERIC MAP (
		operation_mode => "DUAL_PORT",
		width_a => 8,
		widthad_a => 10,
		numwords_a => 672,
		width_b => 8,
		widthad_b => 10,
		numwords_b => 672,
		lpm_type => "altsyncram",
		width_byteena_a => 1,
		outdata_reg_b => "UNREGISTERED",
		indata_aclr_a => "NONE",
		wrcontrol_aclr_a => "NONE",
		address_aclr_a => "NONE",
		address_reg_b => "CLOCK0",
		address_aclr_b => "NONE",
		outdata_aclr_b => "NONE",
		read_during_write_mode_mixed_ports => "DONT_CARE",
		ram_block_type => "AUTO",
		init_file => "make_move_func_piece_y_RAM.mif",
		intended_device_family => "Stratix"
	)
	PORT MAP (
		wren_a => we,
		clock0 => clk,
		address_a => address_a,
		address_b => address_b,
		data_a => data_a,
		q_b => q_b
	);
	dout <= std_ulogic_vector(q_b);
end sync;

library ieee;
use ieee.std_logic_1164.all;
library altera_mf;
use altera_mf.altera_mf_components.all;

entity make_move_func_piece_x_RAM is
  port (
    rst,clk : in std_ulogic;
    we : in std_ulogic;
    w_addr : in std_ulogic_vector(9 downto 0);
    r_addr : in std_ulogic_vector(9 downto 0);
    din : in std_ulogic_vector(7 downto 0);
    dout : out std_ulogic_vector(7 downto 0)
  );
end make_move_func_piece_x_RAM;

architecture sync of make_move_func_piece_x_RAM is
  signal q_b : std_logic_vector (7 downto 0);
  signal data_a : std_logic_vector (7 downto 0);
  signal address_a : std_logic_vector (9 downto 0);
  signal address_b : std_logic_vector (9 downto 0);
begin
	address_a <= std_logic_vector(w_addr);
	address_b <= std_logic_vector(r_addr);
	data_a <= std_logic_vector(din);
	i0 : altsyncram
	GENERIC MAP (
		operation_mode => "DUAL_PORT",
		width_a => 8,
		widthad_a => 10,
		numwords_a => 672,
		width_b => 8,
		widthad_b => 10,
		numwords_b => 672,
		lpm_type => "altsyncram",
		width_byteena_a => 1,
		outdata_reg_b => "UNREGISTERED",
		indata_aclr_a => "NONE",
		wrcontrol_aclr_a => "NONE",
		address_aclr_a => "NONE",
		address_reg_b => "CLOCK0",
		address_aclr_b => "NONE",
		outdata_aclr_b => "NONE",
		read_during_write_mode_mixed_ports => "DONT_CARE",
		ram_block_type => "AUTO",
		init_file => "make_move_func_piece_x_RAM.mif",
		intended_device_family => "Stratix"
	)
	PORT MAP (
		wren_a => we,
		clock0 => clk,
		address_a => address_a,
		address_b => address_b,
		data_a => data_a,
		q_b => q_b
	);
	dout <= std_ulogic_vector(q_b);
end sync;

library ieee;
use ieee.std_logic_1164.all;
library altera_mf;
use altera_mf.altera_mf_components.all;

entity make_move_func_board_RAM is
  port (
    rst,clk : in std_ulogic;
    we : in std_ulogic;
    addr : in std_ulogic_vector(9 downto 0);
    addr2 : in std_ulogic_vector(9 downto 0);
    din : in std_ulogic_vector(7 downto 0);
    we2 : in std_ulogic;
    din2 : in std_ulogic_vector(7 downto 0);
    dout : out std_ulogic_vector(7 downto 0);
    dout2 : out std_ulogic_vector(7 downto 0)
  );
end make_move_func_board_RAM;

architecture dualsync of make_move_func_board_RAM is
  signal q_a,q_b : std_logic_vector (7 downto 0);
  signal data_a,data_b : std_logic_vector (7 downto 0);
  signal address_a : std_logic_vector (9 downto 0);
  signal address_b : std_logic_vector (9 downto 0);
begin
	address_a <= std_logic_vector(addr);
	address_b <= std_logic_vector(addr2);
	data_a <= std_logic_vector(din);
	data_b <= std_logic_vector(din2);
	i0 : altsyncram
	GENERIC MAP (
		operation_mode => "BIDIR_DUAL_PORT",
		width_a => 8,
		widthad_a => 10,
		numwords_a => 1024,
		width_b => 8,
		widthad_b => 10,
		numwords_b => 1024,
		lpm_type => "altsyncram",
		width_byteena_a => 1,
		address_aclr_a => "NONE",
		address_aclr_b => "NONE",
		address_reg_b => "CLOCK0",
		indata_aclr_a => "NONE",
		indata_aclr_b => "NONE",
          indata_reg_b => "CLOCK0",
		outdata_aclr_a => "NONE",
		outdata_aclr_b => "NONE",
		outdata_reg_a => "UNREGISTERED",
		outdata_reg_b => "UNREGISTERED",
		wrcontrol_aclr_a => "NONE",
		wrcontrol_aclr_b => "NONE",
		wrcontrol_wraddress_reg_b => "CLOCK0",
		read_during_write_mode_mixed_ports => "DONT_CARE",
		ram_block_type => "AUTO",
		init_file => "UNUSED",
		intended_device_family => "Stratix"
	)
	PORT MAP (
		wren_a => we,
		clock0 => clk,
		wren_b => we2,
		address_a => address_a,
		address_b => address_b,
		data_a => data_a,
		data_b => data_b,
		q_a => q_a,
		q_b => q_b
	);
	dout <= std_ulogic_vector(q_a);
	dout2 <= std_ulogic_vector(q_b);
end dualsync;

library ieee;
use ieee.std_logic_1164.all;

use work.components.all;
    
entity make_move_func is
  port (signal reset : in std_ulogic;
    signal sclk : in std_ulogic;
    signal clk : in std_ulogic;
    signal p_input_stream_rdy : in std_ulogic;
    signal p_input_stream_en : inout std_ulogic;
    signal p_input_stream_eos : in std_ulogic;
    signal p_input_stream_data : in std_ulogic_vector (7 downto 0);
    signal p_output_stream_rdy : in std_ulogic;
    signal p_output_stream_en : inout std_ulogic;
    signal p_output_stream_eos : out std_ulogic;
    signal p_output_stream_data : out std_ulogic_vector (7 downto 0);
    signal p_stream1_move_output_rdy : in std_ulogic;
    signal p_stream1_move_output_en : inout std_ulogic;
    signal p_stream1_move_output_eos : out std_ulogic;
    signal p_stream1_move_output_data : out std_ulogic_vector (31 downto 0);
    signal p_stream1_move_input_rdy : in std_ulogic;
    signal p_stream1_move_input_en : inout std_ulogic;
    signal p_stream1_move_input_eos : in std_ulogic;
    signal p_stream1_move_input_data : in std_ulogic_vector (31 downto 0);
    signal p_stream2_move_output_rdy : in std_ulogic;
    signal p_stream2_move_output_en : inout std_ulogic;
    signal p_stream2_move_output_eos : out std_ulogic;
    signal p_stream2_move_output_data : out std_ulogic_vector (31 downto 0);
    signal p_stream2_move_input_rdy : in std_ulogic;
    signal p_stream2_move_input_en : inout std_ulogic;
    signal p_stream2_move_input_eos : in std_ulogic;
    signal p_stream2_move_input_data : in std_ulogic_vector (31 downto 0);
    signal p_timer_output_stream_rdy : in std_ulogic;
    signal p_timer_output_stream_en : inout std_ulogic;
    signal p_timer_output_stream_eos : out std_ulogic;
    signal p_timer_output_stream_data : out std_ulogic_vector (7 downto 0);
    signal p_timer_input_stream_rdy : in std_ulogic;
    signal p_timer_input_stream_en : inout std_ulogic;
    signal p_timer_input_stream_eos : in std_ulogic;
    signal p_timer_input_stream_data : in std_ulogic_vector (7 downto 0));
end make_move_func;

use work.external_components_hw_blokus_comp_vhd.all;
architecture rtl of make_move_func is
  function mkvec(b : in std_ulogic) return std_ulogic_vector is
    variable res : std_ulogic_vector(0 downto 0);
  begin
    res(0):=b;
    return(res);
  end;

  component make_move_func_piece_sizes_RAM is
    port (signal rst : in std_ulogic;
      signal clk : in std_ulogic;
      signal we : in std_ulogic;
      signal w_addr : in std_ulogic_vector (4 downto 0);
      signal r_addr : in std_ulogic_vector (4 downto 0);
      signal din : in std_ulogic_vector (7 downto 0);
      signal dout : out std_ulogic_vector (7 downto 0));
  end component;

  component make_move_func_piece_y_RAM is
    port (signal rst : in std_ulogic;
      signal clk : in std_ulogic;
      signal we : in std_ulogic;
      signal w_addr : in std_ulogic_vector (9 downto 0);
      signal r_addr : in std_ulogic_vector (9 downto 0);
      signal din : in std_ulogic_vector (7 downto 0);
      signal dout : out std_ulogic_vector (7 downto 0));
  end component;

  component make_move_func_piece_x_RAM is
    port (signal rst : in std_ulogic;
      signal clk : in std_ulogic;
      signal we : in std_ulogic;
      signal w_addr : in std_ulogic_vector (9 downto 0);
      signal r_addr : in std_ulogic_vector (9 downto 0);
      signal din : in std_ulogic_vector (7 downto 0);
      signal dout : out std_ulogic_vector (7 downto 0));
  end component;

  component make_move_func_board_RAM is
    port (signal rst : in std_ulogic;
      signal clk : in std_ulogic;
      signal we : in std_ulogic;
      signal addr : in std_ulogic_vector (9 downto 0);
      signal addr2 : in std_ulogic_vector (9 downto 0);
      signal din : in std_ulogic_vector (7 downto 0);
      signal we2 : in std_ulogic;
      signal din2 : in std_ulogic_vector (7 downto 0);
      signal dout : out std_ulogic_vector (7 downto 0);
      signal dout2 : out std_ulogic_vector (7 downto 0));
  end component;

  type stateType is (init, b0s0, b1s0, b2s0, b3s0, b4s0, b5s0, b6s0, b7s0, b8s0, b9s0, b10s0, b11s0, b11s1, b12s0, b12s1, b13s0, b14s0, b15s0, b16s0, b16s1, b17s0, b18s0, b19s0, b20s0, b20s1, b20s2, b21s0, b21s1, b22s0, b23s0, b24s0, b25s0, b25s1, b25s2, b25s3, b26s0, b27s0, b28s0, b29s0, b30s0, b31s0, b32s0, b33s0, b34s0, b35s0, b36s0, b37s0, b38s0, b39s0, b40s0, b41s0, b41s1, b42s0, b42s1, b42s2, b42s3, b42s4, b42s5, b42s6, b42s7, b42s8, b42s9, b42s10, b42s11, b42s12, b42s13, b42s14, b42s15, b43s0, b44s0, b44s1, b45s0, b45s1, b45s2, b45s3, b45s4, b46s0, b47s0, b48s0, b49s0, b50s0, b51s0, b52s0, b53s0, b54s0, b55s0, b56s0, b57s0, b58s0, b59s0, b60s0, b61s0, b62s0, b62s1, b63s0, b63s1, b63s2, b63s3, b63s4, b63s5, b63s6, b63s7, b63s8, b63s9, b63s10, b63s11, b63s12, b63s13, b63s14, b63s15, b64s0, b65s0, b65s1, b65s2, b65s3, b65s4, b66s0, b67s0, b68s0, b69s0, b70s0, b71s0, b72s0, b73s0, b74s0, b75s0, b76s0, b77s0, b78s0, b79s0, b80s0, b81s0, b82s0, b82s1, b83s0, b83s1, b83s2, b83s3, b83s4, b83s5, b83s6, b83s7, b83s8, b83s9, b83s10, b83s11, b83s12, b83s13, b83s14, b83s15, b84s0, b85s0, b86s0, b87s0, b88s0, b89s0, b90s0, b90s1, b91s0, b91s1, b92s0, b93s0, b94s0, b95s0, b95s1, b96s0, b97s0, b97s1, b98s0, b99s0, b100s0, b100s1, b101s0, b101s1, b102s0, b102s1, b103s0, b103s1, b104s0, b104s1, b105s0, b106s0, b107s0, b108s0, b109s0, b110s0, b111s0, b112s0, b113s0, b113s1, b114s0, b115s0, b115s1, b116s0, b117s0, b118s0, b119s0, b120s0, b121s0, b122s0, b123s0, b124s0, b125s0, b125s1, b125s2, b125s3, b126s0, b126s1, b127s0, b128s0, b128s1, b129s0, b129s1, b129s2, b129s3, b129s4, b129s5, b129s6, b129s7, b129s8, b129s9, b129s10, b129s11, b129s12, b129s13, b129s14, b129s15, b130s0, b131s0, b132s0, b133s0, b134s0, b135s0, b136s0, b137s0, b138s0, b139s0, b140s0, b141s0, b141s1, b142s0, b142s1, b143s0, b144s0, b145s0, b146s0, b146s1, b147s0, b148s0, finished);
  signal thisState : stateType;
  signal nextState : stateType;
  signal stateEn : std_ulogic;
  signal newState : std_ulogic;
  signal r_input_stream : std_ulogic_vector (7 downto 0);
  signal r_stream1_move_input : std_ulogic_vector (31 downto 0);
  signal r_stream2_move_input : std_ulogic_vector (31 downto 0);
  signal r_timer_input_stream : std_ulogic_vector (7 downto 0);
  signal r_piece_sizes : std_ulogic_vector (7 downto 0);
  signal ni496_piece_sizes : std_ulogic_vector (7 downto 0);
  signal ni1054_piece_sizes : std_ulogic_vector (7 downto 0);
  signal ni1580_piece_sizes : std_ulogic_vector (7 downto 0);
  signal ni2047_piece_sizes : std_ulogic_vector (7 downto 0);
  signal ni2750_piece_sizes : std_ulogic_vector (7 downto 0);
  signal p_piece_sizes_waddr : std_ulogic_vector (4 downto 0);
  signal p_piece_sizes_raddr : std_ulogic_vector (4 downto 0);
  signal p_piece_sizes_we : std_ulogic;
  signal p_piece_sizes_din : std_ulogic_vector (7 downto 0);
  signal p_piece_sizes_dout : std_ulogic_vector (7 downto 0);
  signal p_piece_sizes_imm2 : std_ulogic_vector (7 downto 0);
  signal p_piece_sizes_re2 : std_ulogic;
  signal r_piece_y : std_ulogic_vector (7 downto 0);
  signal ni823_piece_y : std_ulogic_vector (7 downto 0);
  signal ni1381_piece_y : std_ulogic_vector (7 downto 0);
  signal ni1907_piece_y : std_ulogic_vector (7 downto 0);
  signal ni2103_piece_y : std_ulogic_vector (7 downto 0);
  signal ni3077_piece_y : std_ulogic_vector (7 downto 0);
  signal p_piece_y_waddr : std_ulogic_vector (9 downto 0);
  signal p_piece_y_raddr : std_ulogic_vector (9 downto 0);
  signal p_piece_y_we : std_ulogic;
  signal p_piece_y_din : std_ulogic_vector (7 downto 0);
  signal p_piece_y_dout : std_ulogic_vector (7 downto 0);
  signal p_piece_y_imm2 : std_ulogic_vector (7 downto 0);
  signal p_piece_y_re2 : std_ulogic;
  signal r_piece_x : std_ulogic_vector (7 downto 0);
  signal ni837_piece_x : std_ulogic_vector (7 downto 0);
  signal ni1395_piece_x : std_ulogic_vector (7 downto 0);
  signal ni1921_piece_x : std_ulogic_vector (7 downto 0);
  signal ni2117_piece_x : std_ulogic_vector (7 downto 0);
  signal ni3091_piece_x : std_ulogic_vector (7 downto 0);
  signal p_piece_x_waddr : std_ulogic_vector (9 downto 0);
  signal p_piece_x_raddr : std_ulogic_vector (9 downto 0);
  signal p_piece_x_we : std_ulogic;
  signal p_piece_x_din : std_ulogic_vector (7 downto 0);
  signal p_piece_x_dout : std_ulogic_vector (7 downto 0);
  signal p_piece_x_imm2 : std_ulogic_vector (7 downto 0);
  signal p_piece_x_re2 : std_ulogic;
  signal r_board : std_ulogic_vector (7 downto 0);
  signal ni169_board : std_ulogic_vector (7 downto 0);
  signal ni185_board : std_ulogic_vector (7 downto 0);
  signal ni530_board : std_ulogic_vector (7 downto 0);
  signal ni563_board : std_ulogic_vector (7 downto 0);
  signal ni571_board : std_ulogic_vector (7 downto 0);
  signal ni578_board : std_ulogic_vector (7 downto 0);
  signal ni594_board : std_ulogic_vector (7 downto 0);
  signal ni628_board : std_ulogic_vector (7 downto 0);
  signal ni636_board : std_ulogic_vector (7 downto 0);
  signal ni643_board : std_ulogic_vector (7 downto 0);
  signal ni659_board : std_ulogic_vector (7 downto 0);
  signal ni693_board : std_ulogic_vector (7 downto 0);
  signal ni701_board : std_ulogic_vector (7 downto 0);
  signal ni708_board : std_ulogic_vector (7 downto 0);
  signal ni724_board : std_ulogic_vector (7 downto 0);
  signal ni758_board : std_ulogic_vector (7 downto 0);
  signal ni766_board : std_ulogic_vector (7 downto 0);
  signal ni773_board : std_ulogic_vector (7 downto 0);
  signal ni789_board : std_ulogic_vector (7 downto 0);
  signal ni1088_board : std_ulogic_vector (7 downto 0);
  signal ni1121_board : std_ulogic_vector (7 downto 0);
  signal ni1129_board : std_ulogic_vector (7 downto 0);
  signal ni1136_board : std_ulogic_vector (7 downto 0);
  signal ni1152_board : std_ulogic_vector (7 downto 0);
  signal ni1186_board : std_ulogic_vector (7 downto 0);
  signal ni1194_board : std_ulogic_vector (7 downto 0);
  signal ni1201_board : std_ulogic_vector (7 downto 0);
  signal ni1217_board : std_ulogic_vector (7 downto 0);
  signal ni1251_board : std_ulogic_vector (7 downto 0);
  signal ni1259_board : std_ulogic_vector (7 downto 0);
  signal ni1266_board : std_ulogic_vector (7 downto 0);
  signal ni1282_board : std_ulogic_vector (7 downto 0);
  signal ni1316_board : std_ulogic_vector (7 downto 0);
  signal ni1324_board : std_ulogic_vector (7 downto 0);
  signal ni1331_board : std_ulogic_vector (7 downto 0);
  signal ni1347_board : std_ulogic_vector (7 downto 0);
  signal ni1614_board : std_ulogic_vector (7 downto 0);
  signal ni1647_board : std_ulogic_vector (7 downto 0);
  signal ni1655_board : std_ulogic_vector (7 downto 0);
  signal ni1662_board : std_ulogic_vector (7 downto 0);
  signal ni1678_board : std_ulogic_vector (7 downto 0);
  signal ni1712_board : std_ulogic_vector (7 downto 0);
  signal ni1720_board : std_ulogic_vector (7 downto 0);
  signal ni1727_board : std_ulogic_vector (7 downto 0);
  signal ni1743_board : std_ulogic_vector (7 downto 0);
  signal ni1777_board : std_ulogic_vector (7 downto 0);
  signal ni1785_board : std_ulogic_vector (7 downto 0);
  signal ni1792_board : std_ulogic_vector (7 downto 0);
  signal ni1808_board : std_ulogic_vector (7 downto 0);
  signal ni1842_board : std_ulogic_vector (7 downto 0);
  signal ni1850_board : std_ulogic_vector (7 downto 0);
  signal ni1857_board : std_ulogic_vector (7 downto 0);
  signal ni1873_board : std_ulogic_vector (7 downto 0);
  signal ni2060_board : std_ulogic_vector (7 downto 0);
  signal ni2784_board : std_ulogic_vector (7 downto 0);
  signal ni2817_board : std_ulogic_vector (7 downto 0);
  signal ni2825_board : std_ulogic_vector (7 downto 0);
  signal ni2832_board : std_ulogic_vector (7 downto 0);
  signal ni2848_board : std_ulogic_vector (7 downto 0);
  signal ni2882_board : std_ulogic_vector (7 downto 0);
  signal ni2890_board : std_ulogic_vector (7 downto 0);
  signal ni2897_board : std_ulogic_vector (7 downto 0);
  signal ni2913_board : std_ulogic_vector (7 downto 0);
  signal ni2947_board : std_ulogic_vector (7 downto 0);
  signal ni2955_board : std_ulogic_vector (7 downto 0);
  signal ni2962_board : std_ulogic_vector (7 downto 0);
  signal ni2978_board : std_ulogic_vector (7 downto 0);
  signal ni3012_board : std_ulogic_vector (7 downto 0);
  signal ni3020_board : std_ulogic_vector (7 downto 0);
  signal ni3027_board : std_ulogic_vector (7 downto 0);
  signal ni3043_board : std_ulogic_vector (7 downto 0);
  signal ni3174_board : std_ulogic_vector (7 downto 0);
  signal ni3190_board : std_ulogic_vector (7 downto 0);
  signal p_board_addr : std_ulogic_vector (9 downto 0);
  signal p_board_addr2 : std_ulogic_vector (9 downto 0);
  signal p_board_we : std_ulogic;
  signal p_board_din : std_ulogic_vector (7 downto 0);
  signal p_board_dout : std_ulogic_vector (7 downto 0);
  signal p_board_imm : std_ulogic_vector (7 downto 0);
  signal p_board_re : std_ulogic;
  signal r2_board : std_ulogic_vector (7 downto 0);
  signal p_board_dout2 : std_ulogic_vector (7 downto 0);
  signal p_board_imm2 : std_ulogic_vector (7 downto 0);
  signal p_board_re2 : std_ulogic;
  signal r_avail_self : std_ulogic_vector (23 downto 0);
  signal ni3473_avail_self : std_ulogic_vector (23 downto 0);
  signal ni3524_avail_self : std_ulogic_vector (23 downto 0);
  signal ni3854_avail_self : std_ulogic_vector (23 downto 0);
  signal ni3929_avail_self : std_ulogic_vector (23 downto 0);
  signal r_avail_opp : std_ulogic_vector (23 downto 0);
  signal ni3474_avail_opp : std_ulogic_vector (23 downto 0);
  signal ni3612_avail_opp : std_ulogic_vector (23 downto 0);
  signal ni3692_avail_opp : std_ulogic_vector (23 downto 0);
  signal ni3930_avail_opp : std_ulogic_vector (23 downto 0);
  signal r_score_self : std_ulogic_vector (7 downto 0);
  signal ni3475_score_self : std_ulogic_vector (7 downto 0);
  signal ni3525_score_self : std_ulogic_vector (7 downto 0);
  signal ni3855_score_self : std_ulogic_vector (7 downto 0);
  signal ni3931_score_self : std_ulogic_vector (7 downto 0);
  signal r_score_opp : std_ulogic_vector (7 downto 0);
  signal ni3476_score_opp : std_ulogic_vector (7 downto 0);
  signal ni3613_score_opp : std_ulogic_vector (7 downto 0);
  signal ni3693_score_opp : std_ulogic_vector (7 downto 0);
  signal ni3932_score_opp : std_ulogic_vector (7 downto 0);
  signal r_input_code_0 : std_ulogic_vector (7 downto 0);
  signal ni3480_input_code_0 : std_ulogic_vector (7 downto 0);
  signal ni3483_input_code_0 : std_ulogic_vector (7 downto 0);
  signal ni3491_input_code_0 : std_ulogic_vector (7 downto 0);
  signal ni3585_input_code_0 : std_ulogic_vector (7 downto 0);
  signal ni3665_input_code_0 : std_ulogic_vector (7 downto 0);
  signal r_input_code_1 : std_ulogic_vector (7 downto 0);
  signal ni3586_input_code_1 : std_ulogic_vector (7 downto 0);
  signal ni3666_input_code_1 : std_ulogic_vector (7 downto 0);
  signal r_input_code_2 : std_ulogic_vector (7 downto 0);
  signal ni3587_input_code_2 : std_ulogic_vector (7 downto 0);
  signal ni3667_input_code_2 : std_ulogic_vector (7 downto 0);
  signal r_input_code_3 : std_ulogic_vector (7 downto 0);
  signal ni3588_input_code_3 : std_ulogic_vector (7 downto 0);
  signal ni3668_input_code_3 : std_ulogic_vector (7 downto 0);
  signal r_temp_code : std_ulogic_vector (7 downto 0);
  signal ni3477_temp_code : std_ulogic_vector (7 downto 0);
  signal ni3482_temp_code : std_ulogic_vector (7 downto 0);
  signal ni3484_temp_code : std_ulogic_vector (7 downto 0);
  signal r_response_code_0 : std_ulogic_vector (7 downto 0);
  signal ni3487_response_code_0 : std_ulogic_vector (7 downto 0);
  signal ni3493_response_code_0 : std_ulogic_vector (7 downto 0);
  signal ni3498_response_code_0 : std_ulogic_vector (7 downto 0);
  signal ni3830_response_code_0 : std_ulogic_vector (7 downto 0);
  signal ni3835_response_code_0 : std_ulogic_vector (7 downto 0);
  signal ni3838_response_code_0 : std_ulogic_vector (7 downto 0);
  signal r_response_code_1 : std_ulogic_vector (7 downto 0);
  signal ni3488_response_code_1 : std_ulogic_vector (7 downto 0);
  signal ni3494_response_code_1 : std_ulogic_vector (7 downto 0);
  signal ni3499_response_code_1 : std_ulogic_vector (7 downto 0);
  signal ni3831_response_code_1 : std_ulogic_vector (7 downto 0);
  signal ni3837_response_code_1 : std_ulogic_vector (7 downto 0);
  signal ni3839_response_code_1 : std_ulogic_vector (7 downto 0);
  signal r_response_code_2 : std_ulogic_vector (7 downto 0);
  signal ni3489_response_code_2 : std_ulogic_vector (7 downto 0);
  signal ni3495_response_code_2 : std_ulogic_vector (7 downto 0);
  signal ni3500_response_code_2 : std_ulogic_vector (7 downto 0);
  signal ni3832_response_code_2 : std_ulogic_vector (7 downto 0);
  signal ni3840_response_code_2 : std_ulogic_vector (7 downto 0);
  signal r_response_code_3 : std_ulogic_vector (7 downto 0);
  signal ni3496_response_code_3 : std_ulogic_vector (7 downto 0);
  signal ni3501_response_code_3 : std_ulogic_vector (7 downto 0);
  signal ni3833_response_code_3 : std_ulogic_vector (7 downto 0);
  signal ni3841_response_code_3 : std_ulogic_vector (7 downto 0);
  signal r_m_x : std_ulogic_vector (7 downto 0);
  signal ni3505_m_x : std_ulogic_vector (7 downto 0);
  signal ni3509_m_x : std_ulogic_vector (7 downto 0);
  signal ni3522_m_x : std_ulogic_vector (7 downto 0);
  signal ni3592_m_x : std_ulogic_vector (7 downto 0);
  signal ni3596_m_x : std_ulogic_vector (7 downto 0);
  signal ni3610_m_x : std_ulogic_vector (7 downto 0);
  signal ni3672_m_x : std_ulogic_vector (7 downto 0);
  signal ni3676_m_x : std_ulogic_vector (7 downto 0);
  signal ni3690_m_x : std_ulogic_vector (7 downto 0);
  signal ni3759_m_x : std_ulogic_vector (7 downto 0);
  signal ni3805_m_x : std_ulogic_vector (7 downto 0);
  signal r_m_y : std_ulogic_vector (7 downto 0);
  signal ni3513_m_y : std_ulogic_vector (7 downto 0);
  signal ni3517_m_y : std_ulogic_vector (7 downto 0);
  signal ni3521_m_y : std_ulogic_vector (7 downto 0);
  signal ni3600_m_y : std_ulogic_vector (7 downto 0);
  signal ni3604_m_y : std_ulogic_vector (7 downto 0);
  signal ni3609_m_y : std_ulogic_vector (7 downto 0);
  signal ni3680_m_y : std_ulogic_vector (7 downto 0);
  signal ni3684_m_y : std_ulogic_vector (7 downto 0);
  signal ni3689_m_y : std_ulogic_vector (7 downto 0);
  signal ni3757_m_y : std_ulogic_vector (7 downto 0);
  signal ni3807_m_y : std_ulogic_vector (7 downto 0);
  signal r_m_piece : std_ulogic_vector (7 downto 0);
  signal ni3518_m_piece : std_ulogic_vector (7 downto 0);
  signal ni3605_m_piece : std_ulogic_vector (7 downto 0);
  signal ni3685_m_piece : std_ulogic_vector (7 downto 0);
  signal ni3752_m_piece : std_ulogic_vector (7 downto 0);
  signal ni3811_m_piece : std_ulogic_vector (7 downto 0);
  signal r_m_rotate : std_ulogic_vector (7 downto 0);
  signal ni3519_m_rotate : std_ulogic_vector (7 downto 0);
  signal ni3606_m_rotate : std_ulogic_vector (7 downto 0);
  signal ni3686_m_rotate : std_ulogic_vector (7 downto 0);
  signal ni3755_m_rotate : std_ulogic_vector (7 downto 0);
  signal ni3809_m_rotate : std_ulogic_vector (7 downto 0);
  signal r_best_move_x : std_ulogic_vector (7 downto 0);
  signal ni3800_best_move_x : std_ulogic_vector (7 downto 0);
  signal ni3824_best_move_x : std_ulogic_vector (7 downto 0);
  signal ni3852_best_move_x : std_ulogic_vector (7 downto 0);
  signal r_best_move_y : std_ulogic_vector (7 downto 0);
  signal ni3801_best_move_y : std_ulogic_vector (7 downto 0);
  signal ni3825_best_move_y : std_ulogic_vector (7 downto 0);
  signal ni3851_best_move_y : std_ulogic_vector (7 downto 0);
  signal r_best_move_piece : std_ulogic_vector (7 downto 0);
  signal ni3802_best_move_piece : std_ulogic_vector (7 downto 0);
  signal ni3826_best_move_piece : std_ulogic_vector (7 downto 0);
  signal r_best_move_rotate : std_ulogic_vector (7 downto 0);
  signal ni3803_best_move_rotate : std_ulogic_vector (7 downto 0);
  signal ni3827_best_move_rotate : std_ulogic_vector (7 downto 0);
  signal r_x : std_ulogic_vector (7 downto 0);
  signal ni3455_x : std_ulogic_vector (7 downto 0);
  signal ni3469_x : std_ulogic_vector (7 downto 0);
  signal ni3531_x : std_ulogic_vector (7 downto 0);
  signal ni3541_x : std_ulogic_vector (7 downto 0);
  signal ni3551_x : std_ulogic_vector (7 downto 0);
  signal ni3561_x : std_ulogic_vector (7 downto 0);
  signal ni3619_x : std_ulogic_vector (7 downto 0);
  signal ni3629_x : std_ulogic_vector (7 downto 0);
  signal ni3639_x : std_ulogic_vector (7 downto 0);
  signal ni3649_x : std_ulogic_vector (7 downto 0);
  signal ni3699_x : std_ulogic_vector (7 downto 0);
  signal ni3709_x : std_ulogic_vector (7 downto 0);
  signal ni3719_x : std_ulogic_vector (7 downto 0);
  signal ni3729_x : std_ulogic_vector (7 downto 0);
  signal ni3861_x : std_ulogic_vector (7 downto 0);
  signal ni3871_x : std_ulogic_vector (7 downto 0);
  signal ni3881_x : std_ulogic_vector (7 downto 0);
  signal ni3891_x : std_ulogic_vector (7 downto 0);
  signal ni3911_x : std_ulogic_vector (7 downto 0);
  signal ni3925_x : std_ulogic_vector (7 downto 0);
  signal r_y : std_ulogic_vector (7 downto 0);
  signal ni3452_y : std_ulogic_vector (7 downto 0);
  signal ni3471_y : std_ulogic_vector (7 downto 0);
  signal ni3530_y : std_ulogic_vector (7 downto 0);
  signal ni3540_y : std_ulogic_vector (7 downto 0);
  signal ni3550_y : std_ulogic_vector (7 downto 0);
  signal ni3560_y : std_ulogic_vector (7 downto 0);
  signal ni3618_y : std_ulogic_vector (7 downto 0);
  signal ni3628_y : std_ulogic_vector (7 downto 0);
  signal ni3638_y : std_ulogic_vector (7 downto 0);
  signal ni3648_y : std_ulogic_vector (7 downto 0);
  signal ni3698_y : std_ulogic_vector (7 downto 0);
  signal ni3708_y : std_ulogic_vector (7 downto 0);
  signal ni3718_y : std_ulogic_vector (7 downto 0);
  signal ni3728_y : std_ulogic_vector (7 downto 0);
  signal ni3860_y : std_ulogic_vector (7 downto 0);
  signal ni3870_y : std_ulogic_vector (7 downto 0);
  signal ni3880_y : std_ulogic_vector (7 downto 0);
  signal ni3890_y : std_ulogic_vector (7 downto 0);
  signal ni3908_y : std_ulogic_vector (7 downto 0);
  signal ni3927_y : std_ulogic_vector (7 downto 0);
  signal r_z : std_ulogic_vector (7 downto 0);
  signal ni3579_z : std_ulogic_vector (7 downto 0);
  signal ni3583_z : std_ulogic_vector (7 downto 0);
  signal ni3843_z : std_ulogic_vector (7 downto 0);
  signal ni3847_z : std_ulogic_vector (7 downto 0);
  signal ni3934_z : std_ulogic_vector (7 downto 0);
  signal ni3938_z : std_ulogic_vector (7 downto 0);
  signal r_xoff : std_ulogic_vector (7 downto 0);
  signal ni3528_xoff : std_ulogic_vector (7 downto 0);
  signal ni3574_xoff : std_ulogic_vector (7 downto 0);
  signal ni3616_xoff : std_ulogic_vector (7 downto 0);
  signal ni3662_xoff : std_ulogic_vector (7 downto 0);
  signal ni3696_xoff : std_ulogic_vector (7 downto 0);
  signal ni3742_xoff : std_ulogic_vector (7 downto 0);
  signal ni3764_xoff : std_ulogic_vector (7 downto 0);
  signal ni3772_xoff : std_ulogic_vector (7 downto 0);
  signal ni3858_xoff : std_ulogic_vector (7 downto 0);
  signal ni3904_xoff : std_ulogic_vector (7 downto 0);
  signal r_yoff : std_ulogic_vector (7 downto 0);
  signal ni3527_yoff : std_ulogic_vector (7 downto 0);
  signal ni3572_yoff : std_ulogic_vector (7 downto 0);
  signal ni3615_yoff : std_ulogic_vector (7 downto 0);
  signal ni3660_yoff : std_ulogic_vector (7 downto 0);
  signal ni3695_yoff : std_ulogic_vector (7 downto 0);
  signal ni3740_yoff : std_ulogic_vector (7 downto 0);
  signal ni3763_yoff : std_ulogic_vector (7 downto 0);
  signal ni3770_yoff : std_ulogic_vector (7 downto 0);
  signal ni3857_yoff : std_ulogic_vector (7 downto 0);
  signal ni3902_yoff : std_ulogic_vector (7 downto 0);
  signal r_board_t : std_ulogic_vector (7 downto 0);
  signal ni3534_board_t : std_ulogic_vector (7 downto 0);
  signal ni3544_board_t : std_ulogic_vector (7 downto 0);
  signal ni3554_board_t : std_ulogic_vector (7 downto 0);
  signal ni3564_board_t : std_ulogic_vector (7 downto 0);
  signal ni3622_board_t : std_ulogic_vector (7 downto 0);
  signal ni3632_board_t : std_ulogic_vector (7 downto 0);
  signal ni3642_board_t : std_ulogic_vector (7 downto 0);
  signal ni3652_board_t : std_ulogic_vector (7 downto 0);
  signal ni3702_board_t : std_ulogic_vector (7 downto 0);
  signal ni3712_board_t : std_ulogic_vector (7 downto 0);
  signal ni3722_board_t : std_ulogic_vector (7 downto 0);
  signal ni3732_board_t : std_ulogic_vector (7 downto 0);
  signal ni3765_board_t : std_ulogic_vector (7 downto 0);
  signal ni3864_board_t : std_ulogic_vector (7 downto 0);
  signal ni3874_board_t : std_ulogic_vector (7 downto 0);
  signal ni3884_board_t : std_ulogic_vector (7 downto 0);
  signal ni3894_board_t : std_ulogic_vector (7 downto 0);
  signal r_size : std_ulogic_vector (7 downto 0);
  signal ni3523_size : std_ulogic_vector (7 downto 0);
  signal ni3526_size : std_ulogic_vector (7 downto 0);
  signal ni3570_size : std_ulogic_vector (7 downto 0);
  signal ni3611_size : std_ulogic_vector (7 downto 0);
  signal ni3614_size : std_ulogic_vector (7 downto 0);
  signal ni3658_size : std_ulogic_vector (7 downto 0);
  signal ni3691_size : std_ulogic_vector (7 downto 0);
  signal ni3694_size : std_ulogic_vector (7 downto 0);
  signal ni3738_size : std_ulogic_vector (7 downto 0);
  signal ni3762_size : std_ulogic_vector (7 downto 0);
  signal ni3769_size : std_ulogic_vector (7 downto 0);
  signal ni3853_size : std_ulogic_vector (7 downto 0);
  signal ni3856_size : std_ulogic_vector (7 downto 0);
  signal ni3900_size : std_ulogic_vector (7 downto 0);
  signal r_m_piece_min : std_ulogic_vector (7 downto 0);
  signal ni3746_m_piece_min : std_ulogic_vector (7 downto 0);
  signal ni3748_m_piece_min : std_ulogic_vector (7 downto 0);
  signal r_count : std_ulogic_vector (7 downto 0);
  signal ni3750_count : std_ulogic_vector (7 downto 0);
  signal ni3781_count : std_ulogic_vector (7 downto 0);
  signal ni3784_count : std_ulogic_vector (7 downto 0);
  signal ni3818_count : std_ulogic_vector (7 downto 0);
  signal ni3821_count : std_ulogic_vector (7 downto 0);
  signal r_timer_t : std_ulogic_vector (7 downto 0);
  signal ni3578_timer_t : std_ulogic_vector (7 downto 0);
  signal ni3582_timer_t : std_ulogic_vector (7 downto 0);
  signal ni3795_timer_t : std_ulogic_vector (7 downto 0);
  signal ni3797_timer_t : std_ulogic_vector (7 downto 0);
  signal ni3842_timer_t : std_ulogic_vector (7 downto 0);
  signal ni3846_timer_t : std_ulogic_vector (7 downto 0);
  signal ni3933_timer_t : std_ulogic_vector (7 downto 0);
  signal ni3937_timer_t : std_ulogic_vector (7 downto 0);
  signal r_next_stream : std_ulogic_vector (7 downto 0);
  signal ni3751_next_stream : std_ulogic_vector (7 downto 0);
  signal ni3782_next_stream : std_ulogic_vector (7 downto 0);
  signal ni3785_next_stream : std_ulogic_vector (7 downto 0);
  signal r_x1 : std_ulogic_vector (7 downto 0);
  signal ni3533_x1 : std_ulogic_vector (7 downto 0);
  signal ni3543_x1 : std_ulogic_vector (7 downto 0);
  signal ni3553_x1 : std_ulogic_vector (7 downto 0);
  signal ni3563_x1 : std_ulogic_vector (7 downto 0);
  signal ni3621_x1 : std_ulogic_vector (7 downto 0);
  signal ni3631_x1 : std_ulogic_vector (7 downto 0);
  signal ni3641_x1 : std_ulogic_vector (7 downto 0);
  signal ni3651_x1 : std_ulogic_vector (7 downto 0);
  signal ni3701_x1 : std_ulogic_vector (7 downto 0);
  signal ni3711_x1 : std_ulogic_vector (7 downto 0);
  signal ni3721_x1 : std_ulogic_vector (7 downto 0);
  signal ni3731_x1 : std_ulogic_vector (7 downto 0);
  signal ni3863_x1 : std_ulogic_vector (7 downto 0);
  signal ni3873_x1 : std_ulogic_vector (7 downto 0);
  signal ni3883_x1 : std_ulogic_vector (7 downto 0);
  signal ni3893_x1 : std_ulogic_vector (7 downto 0);
  signal r_y1 : std_ulogic_vector (7 downto 0);
  signal ni3532_y1 : std_ulogic_vector (7 downto 0);
  signal ni3542_y1 : std_ulogic_vector (7 downto 0);
  signal ni3552_y1 : std_ulogic_vector (7 downto 0);
  signal ni3562_y1 : std_ulogic_vector (7 downto 0);
  signal ni3620_y1 : std_ulogic_vector (7 downto 0);
  signal ni3630_y1 : std_ulogic_vector (7 downto 0);
  signal ni3640_y1 : std_ulogic_vector (7 downto 0);
  signal ni3650_y1 : std_ulogic_vector (7 downto 0);
  signal ni3700_y1 : std_ulogic_vector (7 downto 0);
  signal ni3710_y1 : std_ulogic_vector (7 downto 0);
  signal ni3720_y1 : std_ulogic_vector (7 downto 0);
  signal ni3730_y1 : std_ulogic_vector (7 downto 0);
  signal ni3862_y1 : std_ulogic_vector (7 downto 0);
  signal ni3872_y1 : std_ulogic_vector (7 downto 0);
  signal ni3882_y1 : std_ulogic_vector (7 downto 0);
  signal ni3892_y1 : std_ulogic_vector (7 downto 0);
  signal r_board_t1 : std_ulogic_vector (7 downto 0);
  signal ni3536_board_t1 : std_ulogic_vector (7 downto 0);
  signal ni3546_board_t1 : std_ulogic_vector (7 downto 0);
  signal ni3556_board_t1 : std_ulogic_vector (7 downto 0);
  signal ni3566_board_t1 : std_ulogic_vector (7 downto 0);
  signal ni3624_board_t1 : std_ulogic_vector (7 downto 0);
  signal ni3634_board_t1 : std_ulogic_vector (7 downto 0);
  signal ni3644_board_t1 : std_ulogic_vector (7 downto 0);
  signal ni3654_board_t1 : std_ulogic_vector (7 downto 0);
  signal ni3704_board_t1 : std_ulogic_vector (7 downto 0);
  signal ni3714_board_t1 : std_ulogic_vector (7 downto 0);
  signal ni3724_board_t1 : std_ulogic_vector (7 downto 0);
  signal ni3734_board_t1 : std_ulogic_vector (7 downto 0);
  signal ni3866_board_t1 : std_ulogic_vector (7 downto 0);
  signal ni3876_board_t1 : std_ulogic_vector (7 downto 0);
  signal ni3886_board_t1 : std_ulogic_vector (7 downto 0);
  signal ni3896_board_t1 : std_ulogic_vector (7 downto 0);
  signal r_moves_found : std_ulogic_vector (1 downto 0);
  signal ni3744_moves_found : std_ulogic_vector (1 downto 0);
  signal ni3776_moves_found : std_ulogic_vector (1 downto 0);
  signal r_move_valid : std_ulogic_vector (1 downto 0);
  signal ni3767_move_valid : std_ulogic_vector (1 downto 0);
  signal r_lib_check : std_ulogic_vector (1 downto 0);
  signal ni3761_lib_check : std_ulogic_vector (1 downto 0);
  signal ni3768_lib_check : std_ulogic_vector (1 downto 0);
  signal r_state : std_ulogic_vector (1 downto 0);
  signal ni3749_state : std_ulogic_vector (1 downto 0);
  signal ni3787_state : std_ulogic_vector (1 downto 0);
  signal r_avail : std_ulogic_vector (1 downto 0);
  signal ni3754_avail : std_ulogic_vector (1 downto 0);
  signal r_time_rem : std_ulogic_vector (1 downto 0);
  signal ni3577_time_rem : std_ulogic_vector (1 downto 0);
  signal ni3796_time_rem : std_ulogic_vector (1 downto 0);
  signal r_m : std_ulogic_vector (31 downto 0);
  signal ni3520_m : std_ulogic_vector (31 downto 0);
  signal ni3608_m : std_ulogic_vector (31 downto 0);
  signal ni3688_m : std_ulogic_vector (31 downto 0);
  signal ni3777_m : std_ulogic_vector (31 downto 0);
  signal ni3850_m : std_ulogic_vector (31 downto 0);
  signal ni3907_m : std_ulogic_vector (31 downto 0);
  signal r_m1 : std_ulogic_vector (31 downto 0);
  signal ni3778_m1 : std_ulogic_vector (31 downto 0);
  signal r_m_recv : std_ulogic_vector (31 downto 0);
  signal ni3791_m_recv : std_ulogic_vector (31 downto 0);
  signal ni3793_m_recv : std_ulogic_vector (31 downto 0);
  signal ni3817_m_recv : std_ulogic_vector (31 downto 0);
  signal ni3820_m_recv : std_ulogic_vector (31 downto 0);
  signal r_utility : std_ulogic_vector (15 downto 0);
  signal ni3798_utility : std_ulogic_vector (15 downto 0);
  signal ni3822_utility : std_ulogic_vector (15 downto 0);
  signal r_alpha : std_ulogic_vector (15 downto 0);
  signal ni3745_alpha : std_ulogic_vector (15 downto 0);
  signal ni3804_alpha : std_ulogic_vector (15 downto 0);
  signal ni3828_alpha : std_ulogic_vector (15 downto 0);
  signal r_suif_tmp : std_ulogic_vector (31 downto 0);
  signal ni3472_suif_tmp : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp0 : std_ulogic_vector (31 downto 0);
  signal ni3470_suif_tmp0 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp1 : std_ulogic_vector (31 downto 0);
  signal ni3462_suif_tmp1 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp00 : std_ulogic_vector (31 downto 0);
  signal ni3463_suif_tmp00 : std_ulogic_vector (31 downto 0);
  signal ni3464_suif_tmp00 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp10 : std_ulogic_vector (31 downto 0);
  signal ni3460_suif_tmp10 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp2 : std_ulogic_vector (31 downto 0);
  signal ni3461_suif_tmp2 : std_ulogic_vector (31 downto 0);
  signal ni3465_suif_tmp2 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp3 : std_ulogic_vector (31 downto 0);
  signal ni3458_suif_tmp3 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp4 : std_ulogic_vector (31 downto 0);
  signal ni3459_suif_tmp4 : std_ulogic_vector (31 downto 0);
  signal ni3466_suif_tmp4 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp5 : std_ulogic_vector (31 downto 0);
  signal ni3481_suif_tmp5 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp6 : std_ulogic_vector (31 downto 0);
  signal ni3486_suif_tmp6 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp7 : std_ulogic_vector (31 downto 0);
  signal ni3490_suif_tmp7 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp8 : std_ulogic_vector (31 downto 0);
  signal ni3492_suif_tmp8 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp9 : std_ulogic_vector (31 downto 0);
  signal ni3497_suif_tmp9 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp11 : std_ulogic_vector (31 downto 0);
  signal ni3571_suif_tmp11 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp12 : std_ulogic_vector (31 downto 0);
  signal ni3576_suif_tmp12 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp13 : std_ulogic_vector (31 downto 0);
  signal ni3584_suif_tmp13 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp14 : std_ulogic_vector (31 downto 0);
  signal ni3607_suif_tmp14 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp15 : std_ulogic_vector (31 downto 0);
  signal ni3659_suif_tmp15 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp16 : std_ulogic_vector (31 downto 0);
  signal ni3664_suif_tmp16 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp17 : std_ulogic_vector (31 downto 0);
  signal ni3687_suif_tmp17 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp18 : std_ulogic_vector (31 downto 0);
  signal ni3739_suif_tmp18 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp19 : std_ulogic_vector (31 downto 0);
  signal ni3747_suif_tmp19 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp20 : std_ulogic_vector (31 downto 0);
  signal ni3753_suif_tmp20 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp21 : std_ulogic_vector (31 downto 0);
  signal ni3812_suif_tmp21 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp22 : std_ulogic_vector (31 downto 0);
  signal ni3756_suif_tmp22 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp23 : std_ulogic_vector (31 downto 0);
  signal ni3810_suif_tmp23 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp24 : std_ulogic_vector (31 downto 0);
  signal ni3758_suif_tmp24 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp25 : std_ulogic_vector (31 downto 0);
  signal ni3808_suif_tmp25 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp26 : std_ulogic_vector (31 downto 0);
  signal ni3760_suif_tmp26 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp27 : std_ulogic_vector (31 downto 0);
  signal ni3806_suif_tmp27 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp28 : std_ulogic_vector (31 downto 0);
  signal ni3774_suif_tmp28 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp29 : std_ulogic_vector (31 downto 0);
  signal ni3775_suif_tmp29 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp30 : std_ulogic_vector (31 downto 0);
  signal ni3779_suif_tmp30 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp31 : std_ulogic_vector (31 downto 0);
  signal ni3780_suif_tmp31 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp32 : std_ulogic_vector (31 downto 0);
  signal ni3783_suif_tmp32 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp33 : std_ulogic_vector (31 downto 0);
  signal ni3786_suif_tmp33 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp34 : std_ulogic_vector (31 downto 0);
  signal ni3790_suif_tmp34 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp35 : std_ulogic_vector (31 downto 0);
  signal ni3792_suif_tmp35 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp36 : std_ulogic_vector (31 downto 0);
  signal ni3794_suif_tmp36 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp37 : std_ulogic_vector (31 downto 0);
  signal ni3799_suif_tmp37 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp38 : std_ulogic_vector (31 downto 0);
  signal ni3813_suif_tmp38 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp39 : std_ulogic_vector (31 downto 0);
  signal ni3816_suif_tmp39 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp40 : std_ulogic_vector (31 downto 0);
  signal ni3819_suif_tmp40 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp41 : std_ulogic_vector (31 downto 0);
  signal ni3823_suif_tmp41 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp42 : std_ulogic_vector (31 downto 0);
  signal ni3829_suif_tmp42 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp43 : std_ulogic_vector (31 downto 0);
  signal ni3834_suif_tmp43 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp44 : std_ulogic_vector (31 downto 0);
  signal ni3836_suif_tmp44 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp45 : std_ulogic_vector (31 downto 0);
  signal ni3848_suif_tmp45 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp46 : std_ulogic_vector (31 downto 0);
  signal ni3849_suif_tmp46 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp47 : std_ulogic_vector (31 downto 0);
  signal ni3901_suif_tmp47 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp48 : std_ulogic_vector (31 downto 0);
  signal ni3906_suif_tmp48 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp49 : std_ulogic_vector (31 downto 0);
  signal ni3928_suif_tmp49 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp50 : std_ulogic_vector (31 downto 0);
  signal ni3926_suif_tmp50 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp51 : std_ulogic_vector (31 downto 0);
  signal ni3939_suif_tmp51 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp_0 : std_ulogic_vector (31 downto 0);
  signal ni3485_suif_tmp_0 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp_1 : std_ulogic_vector (31 downto 0);
  signal ni3502_suif_tmp_1 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp0_0 : std_ulogic_vector (31 downto 0);
  signal ni3503_suif_tmp0_0 : std_ulogic_vector (31 downto 0);
  signal ni3504_suif_tmp0_0 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp1_0 : std_ulogic_vector (31 downto 0);
  signal ni3506_suif_tmp1_0 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp2_0 : std_ulogic_vector (31 downto 0);
  signal ni3507_suif_tmp2_0 : std_ulogic_vector (31 downto 0);
  signal ni3508_suif_tmp2_0 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp3_0 : std_ulogic_vector (31 downto 0);
  signal ni3510_suif_tmp3_0 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp4_0 : std_ulogic_vector (31 downto 0);
  signal ni3511_suif_tmp4_0 : std_ulogic_vector (31 downto 0);
  signal ni3512_suif_tmp4_0 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp52 : std_ulogic_vector (31 downto 0);
  signal ni3514_suif_tmp52 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp60 : std_ulogic_vector (31 downto 0);
  signal ni3515_suif_tmp60 : std_ulogic_vector (31 downto 0);
  signal ni3516_suif_tmp60 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp80 : std_ulogic_vector (31 downto 0);
  signal ni3589_suif_tmp80 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp90 : std_ulogic_vector (31 downto 0);
  signal ni3590_suif_tmp90 : std_ulogic_vector (31 downto 0);
  signal ni3591_suif_tmp90 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp100 : std_ulogic_vector (31 downto 0);
  signal ni3593_suif_tmp100 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp110 : std_ulogic_vector (31 downto 0);
  signal ni3594_suif_tmp110 : std_ulogic_vector (31 downto 0);
  signal ni3595_suif_tmp110 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp120 : std_ulogic_vector (31 downto 0);
  signal ni3597_suif_tmp120 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp130 : std_ulogic_vector (31 downto 0);
  signal ni3598_suif_tmp130 : std_ulogic_vector (31 downto 0);
  signal ni3599_suif_tmp130 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp140 : std_ulogic_vector (31 downto 0);
  signal ni3601_suif_tmp140 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp150 : std_ulogic_vector (31 downto 0);
  signal ni3602_suif_tmp150 : std_ulogic_vector (31 downto 0);
  signal ni3603_suif_tmp150 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp_2 : std_ulogic_vector (31 downto 0);
  signal ni3669_suif_tmp_2 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp0_1 : std_ulogic_vector (31 downto 0);
  signal ni3670_suif_tmp0_1 : std_ulogic_vector (31 downto 0);
  signal ni3671_suif_tmp0_1 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp1_1 : std_ulogic_vector (31 downto 0);
  signal ni3673_suif_tmp1_1 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp2_1 : std_ulogic_vector (31 downto 0);
  signal ni3674_suif_tmp2_1 : std_ulogic_vector (31 downto 0);
  signal ni3675_suif_tmp2_1 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp3_1 : std_ulogic_vector (31 downto 0);
  signal ni3677_suif_tmp3_1 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp4_1 : std_ulogic_vector (31 downto 0);
  signal ni3678_suif_tmp4_1 : std_ulogic_vector (31 downto 0);
  signal ni3679_suif_tmp4_1 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp5_0 : std_ulogic_vector (31 downto 0);
  signal ni3681_suif_tmp5_0 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp6_0 : std_ulogic_vector (31 downto 0);
  signal ni3682_suif_tmp6_0 : std_ulogic_vector (31 downto 0);
  signal ni3683_suif_tmp6_0 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp_3 : std_ulogic_vector (31 downto 0);
  signal ni3918_suif_tmp_3 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp0_2 : std_ulogic_vector (31 downto 0);
  signal ni3919_suif_tmp0_2 : std_ulogic_vector (31 downto 0);
  signal ni3920_suif_tmp0_2 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp1_2 : std_ulogic_vector (31 downto 0);
  signal ni3916_suif_tmp1_2 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp2_2 : std_ulogic_vector (31 downto 0);
  signal ni3917_suif_tmp2_2 : std_ulogic_vector (31 downto 0);
  signal ni3921_suif_tmp2_2 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp3_2 : std_ulogic_vector (31 downto 0);
  signal ni3914_suif_tmp3_2 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp4_2 : std_ulogic_vector (31 downto 0);
  signal ni3915_suif_tmp4_2 : std_ulogic_vector (31 downto 0);
  signal ni3922_suif_tmp4_2 : std_ulogic_vector (31 downto 0);
  signal r_switched : std_ulogic_vector (0 downto 0);
  signal ni6237963_switched : std_ulogic_vector (0 downto 0);
  signal r_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3467_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3468_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3529_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3535_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3539_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3545_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3549_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3555_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3559_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3565_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3569_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3573_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3617_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3623_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3627_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3633_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3637_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3643_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3647_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3653_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3657_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3661_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3697_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3703_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3707_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3713_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3717_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3723_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3727_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3733_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3737_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3741_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3766_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3859_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3865_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3869_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3875_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3879_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3885_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3889_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3895_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3899_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3903_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3923_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3924_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni6237613_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni3537_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni3547_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni3557_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni3567_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni3575_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni6237695_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni3625_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni3635_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni3645_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni3655_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni3663_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni6237777_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni3705_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni3715_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni3725_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni3735_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni3743_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni3771_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni6237877_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni3867_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni3877_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni3887_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni3897_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni3905_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni6237616_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni3538_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni3548_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni3558_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni3568_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni6237698_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni3626_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni3636_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni3646_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni3656_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni6237780_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni3706_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni3716_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni3726_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni3736_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni3773_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni6237880_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni3868_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni3878_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni3888_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni3898_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_3 : std_ulogic_vector (9 downto 0);
  signal ni6237617_r_e_g_3 : std_ulogic_vector (9 downto 0);
  signal ni6237699_r_e_g_3 : std_ulogic_vector (9 downto 0);
  signal ni6237781_r_e_g_3 : std_ulogic_vector (9 downto 0);
  signal ni6237881_r_e_g_3 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_4 : std_ulogic_vector (9 downto 0);
  signal ni6237620_r_e_g_4 : std_ulogic_vector (9 downto 0);
  signal ni6237702_r_e_g_4 : std_ulogic_vector (9 downto 0);
  signal ni6237784_r_e_g_4 : std_ulogic_vector (9 downto 0);
  signal ni6237884_r_e_g_4 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_5 : std_ulogic_vector (9 downto 0);
  signal ni6237621_r_e_g_5 : std_ulogic_vector (9 downto 0);
  signal ni6237703_r_e_g_5 : std_ulogic_vector (9 downto 0);
  signal ni6237785_r_e_g_5 : std_ulogic_vector (9 downto 0);
  signal ni6237885_r_e_g_5 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_6 : std_ulogic_vector (9 downto 0);
  signal ni6237624_r_e_g_6 : std_ulogic_vector (9 downto 0);
  signal ni6237706_r_e_g_6 : std_ulogic_vector (9 downto 0);
  signal ni6237788_r_e_g_6 : std_ulogic_vector (9 downto 0);
  signal ni6237888_r_e_g_6 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_7 : std_ulogic_vector (9 downto 0);
  signal ni6237625_r_e_g_7 : std_ulogic_vector (9 downto 0);
  signal ni6237707_r_e_g_7 : std_ulogic_vector (9 downto 0);
  signal ni6237789_r_e_g_7 : std_ulogic_vector (9 downto 0);
  signal ni6237889_r_e_g_7 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_8 : std_ulogic_vector (9 downto 0);
  signal ni6237628_r_e_g_8 : std_ulogic_vector (9 downto 0);
  signal ni6237710_r_e_g_8 : std_ulogic_vector (9 downto 0);
  signal ni6237792_r_e_g_8 : std_ulogic_vector (9 downto 0);
  signal ni6237892_r_e_g_8 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_9 : std_ulogic_vector (9 downto 0);
  signal ni6237629_r_e_g_9 : std_ulogic_vector (9 downto 0);
  signal ni6237711_r_e_g_9 : std_ulogic_vector (9 downto 0);
  signal ni6237793_r_e_g_9 : std_ulogic_vector (9 downto 0);
  signal ni6237893_r_e_g_9 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_10 : std_ulogic_vector (9 downto 0);
  signal ni6237632_r_e_g_10 : std_ulogic_vector (9 downto 0);
  signal ni6237714_r_e_g_10 : std_ulogic_vector (9 downto 0);
  signal ni6237796_r_e_g_10 : std_ulogic_vector (9 downto 0);
  signal ni6237896_r_e_g_10 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_11 : std_ulogic_vector (9 downto 0);
  signal ni6237633_r_e_g_11 : std_ulogic_vector (9 downto 0);
  signal ni6237715_r_e_g_11 : std_ulogic_vector (9 downto 0);
  signal ni6237797_r_e_g_11 : std_ulogic_vector (9 downto 0);
  signal ni6237897_r_e_g_11 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_12 : std_ulogic_vector (9 downto 0);
  signal ni6237636_r_e_g_12 : std_ulogic_vector (9 downto 0);
  signal ni6237718_r_e_g_12 : std_ulogic_vector (9 downto 0);
  signal ni6237800_r_e_g_12 : std_ulogic_vector (9 downto 0);
  signal ni6237900_r_e_g_12 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_13 : std_ulogic_vector (9 downto 0);
  signal ni6237637_r_e_g_13 : std_ulogic_vector (9 downto 0);
  signal ni6237719_r_e_g_13 : std_ulogic_vector (9 downto 0);
  signal ni6237801_r_e_g_13 : std_ulogic_vector (9 downto 0);
  signal ni6237901_r_e_g_13 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_14 : std_ulogic_vector (9 downto 0);
  signal ni6237640_r_e_g_14 : std_ulogic_vector (9 downto 0);
  signal ni6237722_r_e_g_14 : std_ulogic_vector (9 downto 0);
  signal ni6237804_r_e_g_14 : std_ulogic_vector (9 downto 0);
  signal ni6237904_r_e_g_14 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_15 : std_ulogic_vector (9 downto 0);
  signal ni6237641_r_e_g_15 : std_ulogic_vector (9 downto 0);
  signal ni6237723_r_e_g_15 : std_ulogic_vector (9 downto 0);
  signal ni6237805_r_e_g_15 : std_ulogic_vector (9 downto 0);
  signal ni6237905_r_e_g_15 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_16 : std_ulogic_vector (9 downto 0);
  signal ni6237644_r_e_g_16 : std_ulogic_vector (9 downto 0);
  signal ni6237726_r_e_g_16 : std_ulogic_vector (9 downto 0);
  signal ni6237808_r_e_g_16 : std_ulogic_vector (9 downto 0);
  signal ni6237908_r_e_g_16 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_17 : std_ulogic_vector (9 downto 0);
  signal ni6237645_r_e_g_17 : std_ulogic_vector (9 downto 0);
  signal ni6237727_r_e_g_17 : std_ulogic_vector (9 downto 0);
  signal ni6237809_r_e_g_17 : std_ulogic_vector (9 downto 0);
  signal ni6237909_r_e_g_17 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_18 : std_ulogic_vector (9 downto 0);
  signal ni6237648_r_e_g_18 : std_ulogic_vector (9 downto 0);
  signal ni6237730_r_e_g_18 : std_ulogic_vector (9 downto 0);
  signal ni6237812_r_e_g_18 : std_ulogic_vector (9 downto 0);
  signal ni6237912_r_e_g_18 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_19 : std_ulogic_vector (9 downto 0);
  signal ni6237649_r_e_g_19 : std_ulogic_vector (9 downto 0);
  signal ni6237731_r_e_g_19 : std_ulogic_vector (9 downto 0);
  signal ni6237813_r_e_g_19 : std_ulogic_vector (9 downto 0);
  signal ni6237913_r_e_g_19 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_20 : std_ulogic_vector (9 downto 0);
  signal ni6237652_r_e_g_20 : std_ulogic_vector (9 downto 0);
  signal ni6237734_r_e_g_20 : std_ulogic_vector (9 downto 0);
  signal ni6237816_r_e_g_20 : std_ulogic_vector (9 downto 0);
  signal ni6237916_r_e_g_20 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_21 : std_ulogic_vector (9 downto 0);
  signal ni6237653_r_e_g_21 : std_ulogic_vector (9 downto 0);
  signal ni6237735_r_e_g_21 : std_ulogic_vector (9 downto 0);
  signal ni6237817_r_e_g_21 : std_ulogic_vector (9 downto 0);
  signal ni6237917_r_e_g_21 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_22 : std_ulogic_vector (9 downto 0);
  signal ni6237656_r_e_g_22 : std_ulogic_vector (9 downto 0);
  signal ni6237738_r_e_g_22 : std_ulogic_vector (9 downto 0);
  signal ni6237820_r_e_g_22 : std_ulogic_vector (9 downto 0);
  signal ni6237920_r_e_g_22 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_23 : std_ulogic_vector (9 downto 0);
  signal ni6237657_r_e_g_23 : std_ulogic_vector (9 downto 0);
  signal ni6237739_r_e_g_23 : std_ulogic_vector (9 downto 0);
  signal ni6237821_r_e_g_23 : std_ulogic_vector (9 downto 0);
  signal ni6237921_r_e_g_23 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_24 : std_ulogic_vector (9 downto 0);
  signal ni6237660_r_e_g_24 : std_ulogic_vector (9 downto 0);
  signal ni6237742_r_e_g_24 : std_ulogic_vector (9 downto 0);
  signal ni6237824_r_e_g_24 : std_ulogic_vector (9 downto 0);
  signal ni6237924_r_e_g_24 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_25 : std_ulogic_vector (1 downto 0);
  signal ni2271_r_e_g_25 : std_ulogic_vector (1 downto 0);
  signal ni2296_r_e_g_25 : std_ulogic_vector (1 downto 0);
  signal ni2321_r_e_g_25 : std_ulogic_vector (1 downto 0);
  signal ni2487_r_e_g_25 : std_ulogic_vector (1 downto 0);
  signal ni2505_r_e_g_25 : std_ulogic_vector (1 downto 0);
  signal ti2750_piece_sizes : std_ulogic_vector (4 downto 0);
  signal ti2047_piece_sizes : std_ulogic_vector (4 downto 0);
  signal ti1580_piece_sizes : std_ulogic_vector (4 downto 0);
  signal ti1054_piece_sizes : std_ulogic_vector (4 downto 0);
  signal ti496_piece_sizes : std_ulogic_vector (4 downto 0);
  signal s_b16s0_en : std_ulogic;
  signal s_b20s0_en : std_ulogic;
  signal s_b20s1_en : std_ulogic;
  signal s_b20s2_en : std_ulogic;
  signal s_b21s0_en : std_ulogic;
  signal s_b25s0_en : std_ulogic;
  signal s_b25s1_en : std_ulogic;
  signal s_b25s2_en : std_ulogic;
  signal s_b25s3_en : std_ulogic;
  signal s_b41s0_en : std_ulogic;
  signal s_b43s0_en : std_ulogic;
  signal s_b45s0_en : std_ulogic;
  signal s_b45s1_en : std_ulogic;
  signal s_b45s2_en : std_ulogic;
  signal s_b45s3_en : std_ulogic;
  signal s_b62s0_en : std_ulogic;
  signal s_b65s0_en : std_ulogic;
  signal s_b65s1_en : std_ulogic;
  signal s_b65s2_en : std_ulogic;
  signal s_b65s3_en : std_ulogic;
  signal s_b82s0_en : std_ulogic;
  signal s_b95s0_en : std_ulogic;
  signal s_b95s1_en : std_ulogic;
  signal s_b97s0_en : std_ulogic;
  signal s_b97s1_en : std_ulogic;
  signal s_b101s0_en : std_ulogic;
  signal s_b101s1_en : std_ulogic;
  signal s_b103s0_en : std_ulogic;
  signal s_b103s1_en : std_ulogic;
  signal s_b105s0_en : std_ulogic;
  signal s_b125s0_en : std_ulogic;
  signal s_b125s1_en : std_ulogic;
  signal s_b125s2_en : std_ulogic;
  signal s_b125s3_en : std_ulogic;
  signal s_b128s0_en : std_ulogic;
  signal s_b130s0_en : std_ulogic;
  signal s_b145s0_en : std_ulogic;
begin
  process (clk,reset)
  begin
    if (reset='1') then
      thisState <= init;
    elsif (clk'event and clk='1') then
      if (stateEn = '1') then
        thisState <= nextState;
      end if;
    end if;
  end process;

  s_b16s0_en <= p_input_stream_rdy;
  s_b20s0_en <= p_output_stream_rdy;
  s_b20s1_en <= p_output_stream_rdy;
  s_b20s2_en <= p_output_stream_rdy;
  s_b21s0_en <= p_input_stream_rdy;
  s_b25s0_en <= p_output_stream_rdy;
  s_b25s1_en <= p_output_stream_rdy;
  s_b25s2_en <= p_output_stream_rdy;
  s_b25s3_en <= p_output_stream_rdy;
  s_b41s0_en <= p_stream1_move_output_rdy and p_stream2_move_output_rdy;
  s_b43s0_en <= p_timer_output_stream_rdy;
  s_b45s0_en <= p_input_stream_rdy;
  s_b45s1_en <= p_input_stream_rdy;
  s_b45s2_en <= p_input_stream_rdy;
  s_b45s3_en <= p_input_stream_rdy;
  s_b62s0_en <= p_stream1_move_output_rdy and p_stream2_move_output_rdy;
  s_b65s0_en <= p_input_stream_rdy;
  s_b65s1_en <= p_input_stream_rdy;
  s_b65s2_en <= p_input_stream_rdy;
  s_b65s3_en <= p_input_stream_rdy;
  s_b82s0_en <= p_stream1_move_output_rdy and p_stream2_move_output_rdy;
  s_b95s0_en <= p_stream1_move_output_rdy;
  s_b95s1_en <= p_stream1_move_output_rdy;
  s_b97s0_en <= p_stream2_move_output_rdy;
  s_b97s1_en <= p_stream2_move_output_rdy;
  s_b101s0_en <= p_stream1_move_output_rdy;
  s_b101s1_en <= p_stream1_move_output_rdy;
  s_b103s0_en <= p_stream2_move_output_rdy;
  s_b103s1_en <= p_stream2_move_output_rdy;
  s_b105s0_en <= p_timer_output_stream_rdy;
  s_b125s0_en <= p_output_stream_rdy;
  s_b125s1_en <= p_output_stream_rdy;
  s_b125s2_en <= p_output_stream_rdy;
  s_b125s3_en <= p_output_stream_rdy and p_timer_output_stream_rdy;
  s_b128s0_en <= p_stream1_move_output_rdy and p_stream2_move_output_rdy;
  s_b130s0_en <= p_stream1_move_output_rdy and p_stream2_move_output_rdy;
  s_b145s0_en <= p_timer_output_stream_rdy;
  stateEn <= 
    '0' when thisState = b16s0 and s_b16s0_en = '0' else
    '0' when thisState = b20s0 and s_b20s0_en = '0' else
    '0' when thisState = b20s1 and s_b20s1_en = '0' else
    '0' when thisState = b20s2 and s_b20s2_en = '0' else
    '0' when thisState = b21s0 and s_b21s0_en = '0' else
    '0' when thisState = b25s0 and s_b25s0_en = '0' else
    '0' when thisState = b25s1 and s_b25s1_en = '0' else
    '0' when thisState = b25s2 and s_b25s2_en = '0' else
    '0' when thisState = b25s3 and s_b25s3_en = '0' else
    '0' when thisState = b41s0 and s_b41s0_en = '0' else
    '0' when thisState = b43s0 and s_b43s0_en = '0' else
    '0' when thisState = b45s0 and s_b45s0_en = '0' else
    '0' when thisState = b45s1 and s_b45s1_en = '0' else
    '0' when thisState = b45s2 and s_b45s2_en = '0' else
    '0' when thisState = b45s3 and s_b45s3_en = '0' else
    '0' when thisState = b62s0 and s_b62s0_en = '0' else
    '0' when thisState = b65s0 and s_b65s0_en = '0' else
    '0' when thisState = b65s1 and s_b65s1_en = '0' else
    '0' when thisState = b65s2 and s_b65s2_en = '0' else
    '0' when thisState = b65s3 and s_b65s3_en = '0' else
    '0' when thisState = b82s0 and s_b82s0_en = '0' else
    '0' when thisState = b95s0 and s_b95s0_en = '0' else
    '0' when thisState = b95s1 and s_b95s1_en = '0' else
    '0' when thisState = b97s0 and s_b97s0_en = '0' else
    '0' when thisState = b97s1 and s_b97s1_en = '0' else
    '0' when thisState = b101s0 and s_b101s0_en = '0' else
    '0' when thisState = b101s1 and s_b101s1_en = '0' else
    '0' when thisState = b103s0 and s_b103s0_en = '0' else
    '0' when thisState = b103s1 and s_b103s1_en = '0' else
    '0' when thisState = b105s0 and s_b105s0_en = '0' else
    '0' when thisState = b125s0 and s_b125s0_en = '0' else
    '0' when thisState = b125s1 and s_b125s1_en = '0' else
    '0' when thisState = b125s2 and s_b125s2_en = '0' else
    '0' when thisState = b125s3 and s_b125s3_en = '0' else
    '0' when thisState = b128s0 and s_b128s0_en = '0' else
    '0' when thisState = b130s0 and s_b130s0_en = '0' else
    '0' when thisState = b145s0 and s_b145s0_en = '0' else
    '1';

  process (r_suif_tmp51,ni3928_suif_tmp49,ni3926_suif_tmp50,ni3922_suif_tmp4_2,ni3918_suif_tmp_3,ni3916_suif_tmp1_2,ni3915_suif_tmp4_2,ni3914_suif_tmp3_2,r_suif_tmp47,ni3849_suif_tmp46,r_suif_tmp45,ni3836_suif_tmp44,ni3834_suif_tmp43,ni3829_suif_tmp42,ni3823_suif_tmp41,ni3819_suif_tmp40,ni3816_suif_tmp39,ni3813_suif_tmp38,ni3812_suif_tmp21,ni3810_suif_tmp23,ni3808_suif_tmp25,ni3806_suif_tmp27,ni3799_suif_tmp37,ni3794_suif_tmp36,ni3792_suif_tmp35,ni3790_suif_tmp34,r_suif_tmp33,ni3783_suif_tmp32,ni3780_suif_tmp31,ni3779_suif_tmp30,ni3775_suif_tmp29,ni3774_suif_tmp28,ni3760_suif_tmp26,ni3758_suif_tmp24,ni3756_suif_tmp22,ni3753_suif_tmp20,ni3747_suif_tmp19,r_suif_tmp18,ni3687_suif_tmp17,ni3683_suif_tmp6_0,ni3682_suif_tmp6_0,ni3681_suif_tmp5_0,ni3679_suif_tmp4_1,ni3678_suif_tmp4_1,ni3677_suif_tmp3_1,ni3675_suif_tmp2_1,ni3674_suif_tmp2_1,ni3673_suif_tmp1_1,ni3671_suif_tmp0_1,ni3670_suif_tmp0_1,r_suif_tmp_2,ni3664_suif_tmp16,r_suif_tmp15,ni3607_suif_tmp14,ni3603_suif_tmp150,ni3602_suif_tmp150,ni3601_suif_tmp140,ni3599_suif_tmp130,ni3598_suif_tmp130,ni3597_suif_tmp120,ni3595_suif_tmp110,ni3594_suif_tmp110,ni3593_suif_tmp100,ni3591_suif_tmp90,ni3590_suif_tmp90,r_suif_tmp80,r_suif_tmp13,r_suif_tmp11,ni3516_suif_tmp60,ni3515_suif_tmp60,ni3514_suif_tmp52,ni3512_suif_tmp4_0,ni3511_suif_tmp4_0,ni3510_suif_tmp3_0,ni3508_suif_tmp2_0,ni3507_suif_tmp2_0,ni3506_suif_tmp1_0,ni3504_suif_tmp0_0,ni3503_suif_tmp0_0,r_suif_tmp_1,ni3497_suif_tmp9,ni3492_suif_tmp8,ni6237963_switched,ni3906_suif_tmp48,ni3576_suif_tmp12,ni3490_suif_tmp7,ni3486_suif_tmp6,ni3481_suif_tmp5,ni3472_suif_tmp,ni3470_suif_tmp0,ni3466_suif_tmp4,ni3462_suif_tmp1,ni3460_suif_tmp10,ni3459_suif_tmp4,ni3458_suif_tmp3,thisState)
  begin
    case thisState is
    when init =>
      nextState <= b0s0;
    when b0s0 =>
      nextState <= b1s0;
    when b1s0 =>
      nextState <= b2s0;
    when b2s0 =>
      if (ni3458_suif_tmp3(0) = '1') then
        nextState <= b3s0;
      elsif ((not ni3458_suif_tmp3(0)) = '1') then
        nextState <= b4s0;
      else
        nextState <= b2s0;
      end if;
    when b3s0 =>
      if (ni3459_suif_tmp4(0) = '1') then
        nextState <= b11s0;
      elsif ((not ni3459_suif_tmp4(0)) = '1') then
        nextState <= b12s0;
      else
        nextState <= b3s0;
      end if;
    when b4s0 =>
      if (ni3460_suif_tmp10(0) = '1') then
        nextState <= b5s0;
      elsif ((not ni3460_suif_tmp10(0)) = '1') then
        nextState <= b6s0;
      else
        nextState <= b4s0;
      end if;
    when b5s0 =>
      nextState <= b10s0;
    when b6s0 =>
      if (ni3462_suif_tmp1(0) = '1') then
        nextState <= b7s0;
      elsif ((not ni3462_suif_tmp1(0)) = '1') then
        nextState <= b8s0;
      else
        nextState <= b6s0;
      end if;
    when b7s0 =>
      nextState <= b9s0;
    when b8s0 =>
      nextState <= b9s0;
    when b9s0 =>
      nextState <= b10s0;
    when b10s0 =>
      if (ni3466_suif_tmp4(0) = '1') then
        nextState <= b11s0;
      elsif ((not ni3466_suif_tmp4(0)) = '1') then
        nextState <= b12s0;
      else
        nextState <= b10s0;
      end if;
    when b11s0 =>
      nextState <= b11s1;
    when b11s1 =>
      nextState <= b13s0;
    when b12s0 =>
      nextState <= b12s1;
    when b12s1 =>
      nextState <= b13s0;
    when b13s0 =>
      if (ni3470_suif_tmp0(0) = '1') then
        nextState <= b2s0;
      elsif ((not ni3470_suif_tmp0(0)) = '1') then
        nextState <= b14s0;
      else
        nextState <= b13s0;
      end if;
    when b14s0 =>
      if (ni3472_suif_tmp(0) = '1') then
        nextState <= b1s0;
      elsif ((not ni3472_suif_tmp(0)) = '1') then
        nextState <= b15s0;
      else
        nextState <= b14s0;
      end if;
    when b15s0 =>
      nextState <= b16s0;
    when b16s0 =>
      nextState <= b16s1;
    when b16s1 =>
      if (ni3481_suif_tmp5(0) = '1') then
        nextState <= b17s0;
      elsif ((not ni3481_suif_tmp5(0)) = '1') then
        nextState <= b18s0;
      else
        nextState <= b16s1;
      end if;
    when b17s0 =>
      nextState <= b19s0;
    when b18s0 =>
      nextState <= b19s0;
    when b19s0 =>
      if (ni3486_suif_tmp6(0) = '1') then
        nextState <= b20s0;
      elsif (ni3490_suif_tmp7(0) = '1') then
        nextState <= b21s0;
      elsif (ni3576_suif_tmp12(0) = '1') then
        nextState <= b43s0;
      elsif (ni3906_suif_tmp48(0) = '1') then
        nextState <= b130s0;
      elsif ((not ni6237963_switched(0)) = '1') then
        nextState <= b147s0;
      else
        nextState <= b19s0;
      end if;
    when b20s0 =>
      nextState <= b20s1;
    when b20s1 =>
      nextState <= b20s2;
    when b20s2 =>
      nextState <= b16s0;
    when b21s0 =>
      nextState <= b21s1;
    when b21s1 =>
      if (ni3492_suif_tmp8(0) = '1') then
        nextState <= b22s0;
      elsif ((not ni3492_suif_tmp8(0)) = '1') then
        nextState <= b23s0;
      else
        nextState <= b21s1;
      end if;
    when b22s0 =>
      nextState <= b25s0;
    when b23s0 =>
      if (ni3497_suif_tmp9(0) = '1') then
        nextState <= b24s0;
      elsif ((not ni3497_suif_tmp9(0)) = '1') then
        nextState <= b25s0;
      else
        nextState <= b23s0;
      end if;
    when b24s0 =>
      nextState <= b25s0;
    when b25s0 =>
      nextState <= b25s1;
    when b25s1 =>
      nextState <= b25s2;
    when b25s2 =>
      nextState <= b25s3;
    when b25s3 =>
      if ((not r_suif_tmp_1(0)) = '1') then
        nextState <= b26s0;
      elsif (r_suif_tmp_1(0) = '1') then
        nextState <= b27s0;
      else
        nextState <= b25s3;
      end if;
    when b26s0 =>
      if (ni3503_suif_tmp0_0(0) = '1') then
        nextState <= b28s0;
      elsif ((not ni3503_suif_tmp0_0(0)) = '1') then
        nextState <= b29s0;
      else
        nextState <= b26s0;
      end if;
    when b27s0 =>
      if (ni3504_suif_tmp0_0(0) = '1') then
        nextState <= b28s0;
      elsif ((not ni3504_suif_tmp0_0(0)) = '1') then
        nextState <= b29s0;
      else
        nextState <= b27s0;
      end if;
    when b28s0 =>
      nextState <= b33s0;
    when b29s0 =>
      if ((not ni3506_suif_tmp1_0(0)) = '1') then
        nextState <= b30s0;
      elsif (ni3506_suif_tmp1_0(0) = '1') then
        nextState <= b31s0;
      else
        nextState <= b29s0;
      end if;
    when b30s0 =>
      if (ni3507_suif_tmp2_0(0) = '1') then
        nextState <= b32s0;
      elsif ((not ni3507_suif_tmp2_0(0)) = '1') then
        nextState <= b33s0;
      else
        nextState <= b30s0;
      end if;
    when b31s0 =>
      if (ni3508_suif_tmp2_0(0) = '1') then
        nextState <= b32s0;
      elsif ((not ni3508_suif_tmp2_0(0)) = '1') then
        nextState <= b33s0;
      else
        nextState <= b31s0;
      end if;
    when b32s0 =>
      nextState <= b33s0;
    when b33s0 =>
      if ((not ni3510_suif_tmp3_0(0)) = '1') then
        nextState <= b34s0;
      elsif (ni3510_suif_tmp3_0(0) = '1') then
        nextState <= b35s0;
      else
        nextState <= b33s0;
      end if;
    when b34s0 =>
      if (ni3511_suif_tmp4_0(0) = '1') then
        nextState <= b36s0;
      elsif ((not ni3511_suif_tmp4_0(0)) = '1') then
        nextState <= b37s0;
      else
        nextState <= b34s0;
      end if;
    when b35s0 =>
      if (ni3512_suif_tmp4_0(0) = '1') then
        nextState <= b36s0;
      elsif ((not ni3512_suif_tmp4_0(0)) = '1') then
        nextState <= b37s0;
      else
        nextState <= b35s0;
      end if;
    when b36s0 =>
      nextState <= b41s0;
    when b37s0 =>
      if ((not ni3514_suif_tmp52(0)) = '1') then
        nextState <= b38s0;
      elsif (ni3514_suif_tmp52(0) = '1') then
        nextState <= b39s0;
      else
        nextState <= b37s0;
      end if;
    when b38s0 =>
      if (ni3515_suif_tmp60(0) = '1') then
        nextState <= b40s0;
      elsif ((not ni3515_suif_tmp60(0)) = '1') then
        nextState <= b41s0;
      else
        nextState <= b38s0;
      end if;
    when b39s0 =>
      if (ni3516_suif_tmp60(0) = '1') then
        nextState <= b40s0;
      elsif ((not ni3516_suif_tmp60(0)) = '1') then
        nextState <= b41s0;
      else
        nextState <= b39s0;
      end if;
    when b40s0 =>
      nextState <= b41s0;
    when b41s0 =>
      nextState <= b41s1;
    when b41s1 =>
      nextState <= b42s0;
    when b42s0 =>
      nextState <= b42s1;
    when b42s1 =>
      nextState <= b42s2;
    when b42s2 =>
      nextState <= b42s3;
    when b42s3 =>
      nextState <= b42s4;
    when b42s4 =>
      nextState <= b42s5;
    when b42s5 =>
      nextState <= b42s6;
    when b42s6 =>
      nextState <= b42s7;
    when b42s7 =>
      nextState <= b42s8;
    when b42s8 =>
      nextState <= b42s9;
    when b42s9 =>
      nextState <= b42s10;
    when b42s10 =>
      nextState <= b42s11;
    when b42s11 =>
      nextState <= b42s12;
    when b42s12 =>
      nextState <= b42s13;
    when b42s13 =>
      if (r_suif_tmp11(0) = '1') then
        nextState <= b16s0;
      else
        nextState <= b42s14;
      end if;
    when b42s14 =>
      nextState <= b42s15;
    when b42s15 =>
      nextState <= b42s0;
    when b43s0 =>
      nextState <= b44s0;
    when b44s0 =>
      nextState <= b44s1;
    when b44s1 =>
      if (r_suif_tmp13(0) = '1') then
        nextState <= b44s0;
      elsif ((not r_suif_tmp13(0)) = '1') then
        nextState <= b45s0;
      else
        nextState <= b44s1;
      end if;
    when b45s0 =>
      nextState <= b45s1;
    when b45s1 =>
      nextState <= b45s2;
    when b45s2 =>
      nextState <= b45s3;
    when b45s3 =>
      nextState <= b45s4;
    when b45s4 =>
      if ((not r_suif_tmp80(0)) = '1') then
        nextState <= b46s0;
      elsif (r_suif_tmp80(0) = '1') then
        nextState <= b47s0;
      else
        nextState <= b45s4;
      end if;
    when b46s0 =>
      if (ni3590_suif_tmp90(0) = '1') then
        nextState <= b48s0;
      elsif ((not ni3590_suif_tmp90(0)) = '1') then
        nextState <= b49s0;
      else
        nextState <= b46s0;
      end if;
    when b47s0 =>
      if (ni3591_suif_tmp90(0) = '1') then
        nextState <= b48s0;
      elsif ((not ni3591_suif_tmp90(0)) = '1') then
        nextState <= b49s0;
      else
        nextState <= b47s0;
      end if;
    when b48s0 =>
      nextState <= b53s0;
    when b49s0 =>
      if ((not ni3593_suif_tmp100(0)) = '1') then
        nextState <= b50s0;
      elsif (ni3593_suif_tmp100(0) = '1') then
        nextState <= b51s0;
      else
        nextState <= b49s0;
      end if;
    when b50s0 =>
      if (ni3594_suif_tmp110(0) = '1') then
        nextState <= b52s0;
      elsif ((not ni3594_suif_tmp110(0)) = '1') then
        nextState <= b53s0;
      else
        nextState <= b50s0;
      end if;
    when b51s0 =>
      if (ni3595_suif_tmp110(0) = '1') then
        nextState <= b52s0;
      elsif ((not ni3595_suif_tmp110(0)) = '1') then
        nextState <= b53s0;
      else
        nextState <= b51s0;
      end if;
    when b52s0 =>
      nextState <= b53s0;
    when b53s0 =>
      if ((not ni3597_suif_tmp120(0)) = '1') then
        nextState <= b54s0;
      elsif (ni3597_suif_tmp120(0) = '1') then
        nextState <= b55s0;
      else
        nextState <= b53s0;
      end if;
    when b54s0 =>
      if (ni3598_suif_tmp130(0) = '1') then
        nextState <= b56s0;
      elsif ((not ni3598_suif_tmp130(0)) = '1') then
        nextState <= b57s0;
      else
        nextState <= b54s0;
      end if;
    when b55s0 =>
      if (ni3599_suif_tmp130(0) = '1') then
        nextState <= b56s0;
      elsif ((not ni3599_suif_tmp130(0)) = '1') then
        nextState <= b57s0;
      else
        nextState <= b55s0;
      end if;
    when b56s0 =>
      nextState <= b61s0;
    when b57s0 =>
      if ((not ni3601_suif_tmp140(0)) = '1') then
        nextState <= b58s0;
      elsif (ni3601_suif_tmp140(0) = '1') then
        nextState <= b59s0;
      else
        nextState <= b57s0;
      end if;
    when b58s0 =>
      if (ni3602_suif_tmp150(0) = '1') then
        nextState <= b60s0;
      elsif ((not ni3602_suif_tmp150(0)) = '1') then
        nextState <= b61s0;
      else
        nextState <= b58s0;
      end if;
    when b59s0 =>
      if (ni3603_suif_tmp150(0) = '1') then
        nextState <= b60s0;
      elsif ((not ni3603_suif_tmp150(0)) = '1') then
        nextState <= b61s0;
      else
        nextState <= b59s0;
      end if;
    when b60s0 =>
      nextState <= b61s0;
    when b61s0 =>
      if (ni3607_suif_tmp14(0) = '1') then
        nextState <= b62s0;
      elsif ((not ni3607_suif_tmp14(0)) = '1') then
        nextState <= b64s0;
      else
        nextState <= b61s0;
      end if;
    when b62s0 =>
      nextState <= b62s1;
    when b62s1 =>
      nextState <= b63s0;
    when b63s0 =>
      nextState <= b63s1;
    when b63s1 =>
      nextState <= b63s2;
    when b63s2 =>
      nextState <= b63s3;
    when b63s3 =>
      nextState <= b63s4;
    when b63s4 =>
      nextState <= b63s5;
    when b63s5 =>
      nextState <= b63s6;
    when b63s6 =>
      nextState <= b63s7;
    when b63s7 =>
      nextState <= b63s8;
    when b63s8 =>
      nextState <= b63s9;
    when b63s9 =>
      nextState <= b63s10;
    when b63s10 =>
      nextState <= b63s11;
    when b63s11 =>
      nextState <= b63s12;
    when b63s12 =>
      nextState <= b63s13;
    when b63s13 =>
      if (r_suif_tmp15(0) = '1') then
        nextState <= b64s0;
      else
        nextState <= b63s14;
      end if;
    when b63s14 =>
      nextState <= b63s15;
    when b63s15 =>
      nextState <= b63s0;
    when b64s0 =>
      if (ni3664_suif_tmp16(0) = '1') then
        nextState <= b65s0;
      elsif ((not ni3664_suif_tmp16(0)) = '1') then
        nextState <= b84s0;
      else
        nextState <= b64s0;
      end if;
    when b65s0 =>
      nextState <= b65s1;
    when b65s1 =>
      nextState <= b65s2;
    when b65s2 =>
      nextState <= b65s3;
    when b65s3 =>
      nextState <= b65s4;
    when b65s4 =>
      if ((not r_suif_tmp_2(0)) = '1') then
        nextState <= b66s0;
      elsif (r_suif_tmp_2(0) = '1') then
        nextState <= b67s0;
      else
        nextState <= b65s4;
      end if;
    when b66s0 =>
      if (ni3670_suif_tmp0_1(0) = '1') then
        nextState <= b68s0;
      elsif ((not ni3670_suif_tmp0_1(0)) = '1') then
        nextState <= b69s0;
      else
        nextState <= b66s0;
      end if;
    when b67s0 =>
      if (ni3671_suif_tmp0_1(0) = '1') then
        nextState <= b68s0;
      elsif ((not ni3671_suif_tmp0_1(0)) = '1') then
        nextState <= b69s0;
      else
        nextState <= b67s0;
      end if;
    when b68s0 =>
      nextState <= b73s0;
    when b69s0 =>
      if ((not ni3673_suif_tmp1_1(0)) = '1') then
        nextState <= b70s0;
      elsif (ni3673_suif_tmp1_1(0) = '1') then
        nextState <= b71s0;
      else
        nextState <= b69s0;
      end if;
    when b70s0 =>
      if (ni3674_suif_tmp2_1(0) = '1') then
        nextState <= b72s0;
      elsif ((not ni3674_suif_tmp2_1(0)) = '1') then
        nextState <= b73s0;
      else
        nextState <= b70s0;
      end if;
    when b71s0 =>
      if (ni3675_suif_tmp2_1(0) = '1') then
        nextState <= b72s0;
      elsif ((not ni3675_suif_tmp2_1(0)) = '1') then
        nextState <= b73s0;
      else
        nextState <= b71s0;
      end if;
    when b72s0 =>
      nextState <= b73s0;
    when b73s0 =>
      if ((not ni3677_suif_tmp3_1(0)) = '1') then
        nextState <= b74s0;
      elsif (ni3677_suif_tmp3_1(0) = '1') then
        nextState <= b75s0;
      else
        nextState <= b73s0;
      end if;
    when b74s0 =>
      if (ni3678_suif_tmp4_1(0) = '1') then
        nextState <= b76s0;
      elsif ((not ni3678_suif_tmp4_1(0)) = '1') then
        nextState <= b77s0;
      else
        nextState <= b74s0;
      end if;
    when b75s0 =>
      if (ni3679_suif_tmp4_1(0) = '1') then
        nextState <= b76s0;
      elsif ((not ni3679_suif_tmp4_1(0)) = '1') then
        nextState <= b77s0;
      else
        nextState <= b75s0;
      end if;
    when b76s0 =>
      nextState <= b81s0;
    when b77s0 =>
      if ((not ni3681_suif_tmp5_0(0)) = '1') then
        nextState <= b78s0;
      elsif (ni3681_suif_tmp5_0(0) = '1') then
        nextState <= b79s0;
      else
        nextState <= b77s0;
      end if;
    when b78s0 =>
      if (ni3682_suif_tmp6_0(0) = '1') then
        nextState <= b80s0;
      elsif ((not ni3682_suif_tmp6_0(0)) = '1') then
        nextState <= b81s0;
      else
        nextState <= b78s0;
      end if;
    when b79s0 =>
      if (ni3683_suif_tmp6_0(0) = '1') then
        nextState <= b80s0;
      elsif ((not ni3683_suif_tmp6_0(0)) = '1') then
        nextState <= b81s0;
      else
        nextState <= b79s0;
      end if;
    when b80s0 =>
      nextState <= b81s0;
    when b81s0 =>
      if (ni3687_suif_tmp17(0) = '1') then
        nextState <= b82s0;
      elsif ((not ni3687_suif_tmp17(0)) = '1') then
        nextState <= b84s0;
      else
        nextState <= b81s0;
      end if;
    when b82s0 =>
      nextState <= b82s1;
    when b82s1 =>
      nextState <= b83s0;
    when b83s0 =>
      nextState <= b83s1;
    when b83s1 =>
      nextState <= b83s2;
    when b83s2 =>
      nextState <= b83s3;
    when b83s3 =>
      nextState <= b83s4;
    when b83s4 =>
      nextState <= b83s5;
    when b83s5 =>
      nextState <= b83s6;
    when b83s6 =>
      nextState <= b83s7;
    when b83s7 =>
      nextState <= b83s8;
    when b83s8 =>
      nextState <= b83s9;
    when b83s9 =>
      nextState <= b83s10;
    when b83s10 =>
      nextState <= b83s11;
    when b83s11 =>
      nextState <= b83s12;
    when b83s12 =>
      nextState <= b83s13;
    when b83s13 =>
      if (r_suif_tmp18(0) = '1') then
        nextState <= b84s0;
      else
        nextState <= b83s14;
      end if;
    when b83s14 =>
      nextState <= b83s15;
    when b83s15 =>
      nextState <= b83s0;
    when b84s0 =>
      if (ni3747_suif_tmp19(0) = '1') then
        nextState <= b85s0;
      elsif ((not ni3747_suif_tmp19(0)) = '1') then
        nextState <= b86s0;
      else
        nextState <= b84s0;
      end if;
    when b85s0 =>
      nextState <= b86s0;
    when b86s0 =>
      if (ni3753_suif_tmp20(0) = '1') then
        nextState <= b87s0;
      elsif ((not ni3753_suif_tmp20(0)) = '1') then
        nextState <= b112s0;
      else
        nextState <= b86s0;
      end if;
    when b87s0 =>
      if (ni3756_suif_tmp22(0) = '1') then
        nextState <= b88s0;
      elsif ((not ni3756_suif_tmp22(0)) = '1') then
        nextState <= b111s0;
      else
        nextState <= b87s0;
      end if;
    when b88s0 =>
      if (ni3758_suif_tmp24(0) = '1') then
        nextState <= b89s0;
      elsif ((not ni3758_suif_tmp24(0)) = '1') then
        nextState <= b110s0;
      else
        nextState <= b88s0;
      end if;
    when b89s0 =>
      if (ni3760_suif_tmp26(0) = '1') then
        nextState <= b90s0;
      elsif ((not ni3760_suif_tmp26(0)) = '1') then
        nextState <= b109s0;
      else
        nextState <= b89s0;
      end if;
    when b90s0 =>
      nextState <= b90s1;
    when b90s1 =>
      nextState <= b91s0;
    when b91s0 =>
      nextState <= b91s1;
    when b91s1 =>
      if (ni3774_suif_tmp28(0) = '1') then
        nextState <= b91s0;
      elsif ((not ni3774_suif_tmp28(0)) = '1') then
        nextState <= b92s0;
      else
        nextState <= b91s1;
      end if;
    when b92s0 =>
      if (ni3775_suif_tmp29(0) = '1') then
        nextState <= b93s0;
      elsif ((not ni3775_suif_tmp29(0)) = '1') then
        nextState <= b108s0;
      else
        nextState <= b92s0;
      end if;
    when b93s0 =>
      if (ni3779_suif_tmp30(0) = '1') then
        nextState <= b94s0;
      elsif ((not ni3779_suif_tmp30(0)) = '1') then
        nextState <= b99s0;
      else
        nextState <= b93s0;
      end if;
    when b94s0 =>
      if (ni3780_suif_tmp31(0) = '1') then
        nextState <= b95s0;
      elsif ((not ni3780_suif_tmp31(0)) = '1') then
        nextState <= b96s0;
      else
        nextState <= b94s0;
      end if;
    when b95s0 =>
      nextState <= b95s1;
    when b95s1 =>
      nextState <= b108s0;
    when b96s0 =>
      if (ni3783_suif_tmp32(0) = '1') then
        nextState <= b97s0;
      elsif ((not ni3783_suif_tmp32(0)) = '1') then
        nextState <= b108s0;
      else
        nextState <= b96s0;
      end if;
    when b97s0 =>
      nextState <= b97s1;
    when b97s1 =>
      if (r_suif_tmp33(0) = '1') then
        nextState <= b98s0;
      elsif ((not r_suif_tmp33(0)) = '1') then
        nextState <= b108s0;
      else
        nextState <= b97s1;
      end if;
    when b98s0 =>
      nextState <= b108s0;
    when b99s0 =>
      nextState <= b100s0;
    when b100s0 =>
      nextState <= b100s1;
    when b100s1 =>
      if (ni3790_suif_tmp34(0) = '1') then
        nextState <= b101s0;
      elsif ((not ni3790_suif_tmp34(0)) = '1') then
        nextState <= b102s0;
      else
        nextState <= b100s1;
      end if;
    when b101s0 =>
      nextState <= b101s1;
    when b101s1 =>
      nextState <= b106s0;
    when b102s0 =>
      nextState <= b102s1;
    when b102s1 =>
      if (ni3792_suif_tmp35(0) = '1') then
        nextState <= b103s0;
      elsif ((not ni3792_suif_tmp35(0)) = '1') then
        nextState <= b104s0;
      else
        nextState <= b102s1;
      end if;
    when b103s0 =>
      nextState <= b103s1;
    when b103s1 =>
      nextState <= b106s0;
    when b104s0 =>
      nextState <= b104s1;
    when b104s1 =>
      if (ni3794_suif_tmp36(0) = '1') then
        nextState <= b105s0;
      elsif ((not ni3794_suif_tmp36(0)) = '1') then
        nextState <= b100s0;
      else
        nextState <= b104s1;
      end if;
    when b105s0 =>
      nextState <= b106s0;
    when b106s0 =>
      if (ni3799_suif_tmp37(0) = '1') then
        nextState <= b107s0;
      elsif ((not ni3799_suif_tmp37(0)) = '1') then
        nextState <= b108s0;
      else
        nextState <= b106s0;
      end if;
    when b107s0 =>
      nextState <= b108s0;
    when b108s0 =>
      if (ni3806_suif_tmp27(0) = '1') then
        nextState <= b90s0;
      elsif ((not ni3806_suif_tmp27(0)) = '1') then
        nextState <= b109s0;
      else
        nextState <= b108s0;
      end if;
    when b109s0 =>
      if (ni3808_suif_tmp25(0) = '1') then
        nextState <= b89s0;
      elsif ((not ni3808_suif_tmp25(0)) = '1') then
        nextState <= b110s0;
      else
        nextState <= b109s0;
      end if;
    when b110s0 =>
      if (ni3810_suif_tmp23(0) = '1') then
        nextState <= b88s0;
      elsif ((not ni3810_suif_tmp23(0)) = '1') then
        nextState <= b111s0;
      else
        nextState <= b110s0;
      end if;
    when b111s0 =>
      if (ni3812_suif_tmp21(0) = '1') then
        nextState <= b87s0;
      elsif ((not ni3812_suif_tmp21(0)) = '1') then
        nextState <= b112s0;
      else
        nextState <= b111s0;
      end if;
    when b112s0 =>
      if ((not ni3813_suif_tmp38(0)) = '1') then
        nextState <= b119s0;
      else
        nextState <= b113s0;
      end if;
    when b113s0 =>
      nextState <= b113s1;
    when b113s1 =>
      if (ni3816_suif_tmp39(0) = '1') then
        nextState <= b114s0;
      elsif ((not ni3816_suif_tmp39(0)) = '1') then
        nextState <= b115s0;
      else
        nextState <= b113s1;
      end if;
    when b114s0 =>
      nextState <= b117s0;
    when b115s0 =>
      nextState <= b115s1;
    when b115s1 =>
      if (ni3819_suif_tmp40(0) = '1') then
        nextState <= b116s0;
      elsif ((not ni3819_suif_tmp40(0)) = '1') then
        nextState <= b113s0;
      else
        nextState <= b115s1;
      end if;
    when b116s0 =>
      nextState <= b117s0;
    when b117s0 =>
      if (ni3823_suif_tmp41(0) = '1') then
        nextState <= b118s0;
      elsif ((not ni3823_suif_tmp41(0)) = '1') then
        nextState <= b112s0;
      else
        nextState <= b117s0;
      end if;
    when b118s0 =>
      nextState <= b112s0;
    when b119s0 =>
      if (ni3829_suif_tmp42(0) = '1') then
        nextState <= b120s0;
      elsif ((not ni3829_suif_tmp42(0)) = '1') then
        nextState <= b124s0;
      else
        nextState <= b119s0;
      end if;
    when b120s0 =>
      if (ni3834_suif_tmp43(0) = '1') then
        nextState <= b121s0;
      elsif ((not ni3834_suif_tmp43(0)) = '1') then
        nextState <= b122s0;
      else
        nextState <= b120s0;
      end if;
    when b121s0 =>
      nextState <= b122s0;
    when b122s0 =>
      if (ni3836_suif_tmp44(0) = '1') then
        nextState <= b123s0;
      elsif ((not ni3836_suif_tmp44(0)) = '1') then
        nextState <= b125s0;
      else
        nextState <= b122s0;
      end if;
    when b123s0 =>
      nextState <= b125s0;
    when b124s0 =>
      nextState <= b125s0;
    when b125s0 =>
      nextState <= b125s1;
    when b125s1 =>
      nextState <= b125s2;
    when b125s2 =>
      nextState <= b125s3;
    when b125s3 =>
      nextState <= b126s0;
    when b126s0 =>
      nextState <= b126s1;
    when b126s1 =>
      if (r_suif_tmp45(0) = '1') then
        nextState <= b126s0;
      elsif ((not r_suif_tmp45(0)) = '1') then
        nextState <= b127s0;
      else
        nextState <= b126s1;
      end if;
    when b127s0 =>
      if (ni3849_suif_tmp46(0) = '1') then
        nextState <= b128s0;
      elsif ((not ni3849_suif_tmp46(0)) = '1') then
        nextState <= b16s0;
      else
        nextState <= b127s0;
      end if;
    when b128s0 =>
      nextState <= b128s1;
    when b128s1 =>
      nextState <= b129s0;
    when b129s0 =>
      nextState <= b129s1;
    when b129s1 =>
      nextState <= b129s2;
    when b129s2 =>
      nextState <= b129s3;
    when b129s3 =>
      nextState <= b129s4;
    when b129s4 =>
      nextState <= b129s5;
    when b129s5 =>
      nextState <= b129s6;
    when b129s6 =>
      nextState <= b129s7;
    when b129s7 =>
      nextState <= b129s8;
    when b129s8 =>
      nextState <= b129s9;
    when b129s9 =>
      nextState <= b129s10;
    when b129s10 =>
      nextState <= b129s11;
    when b129s11 =>
      nextState <= b129s12;
    when b129s12 =>
      nextState <= b129s13;
    when b129s13 =>
      if (r_suif_tmp47(0) = '1') then
        nextState <= b16s0;
      else
        nextState <= b129s14;
      end if;
    when b129s14 =>
      nextState <= b129s15;
    when b129s15 =>
      nextState <= b129s0;
    when b130s0 =>
      nextState <= b131s0;
    when b131s0 =>
      nextState <= b132s0;
    when b132s0 =>
      if (ni3914_suif_tmp3_2(0) = '1') then
        nextState <= b133s0;
      elsif ((not ni3914_suif_tmp3_2(0)) = '1') then
        nextState <= b134s0;
      else
        nextState <= b132s0;
      end if;
    when b133s0 =>
      if (ni3915_suif_tmp4_2(0) = '1') then
        nextState <= b141s0;
      elsif ((not ni3915_suif_tmp4_2(0)) = '1') then
        nextState <= b142s0;
      else
        nextState <= b133s0;
      end if;
    when b134s0 =>
      if (ni3916_suif_tmp1_2(0) = '1') then
        nextState <= b135s0;
      elsif ((not ni3916_suif_tmp1_2(0)) = '1') then
        nextState <= b136s0;
      else
        nextState <= b134s0;
      end if;
    when b135s0 =>
      nextState <= b140s0;
    when b136s0 =>
      if (ni3918_suif_tmp_3(0) = '1') then
        nextState <= b137s0;
      elsif ((not ni3918_suif_tmp_3(0)) = '1') then
        nextState <= b138s0;
      else
        nextState <= b136s0;
      end if;
    when b137s0 =>
      nextState <= b139s0;
    when b138s0 =>
      nextState <= b139s0;
    when b139s0 =>
      nextState <= b140s0;
    when b140s0 =>
      if (ni3922_suif_tmp4_2(0) = '1') then
        nextState <= b141s0;
      elsif ((not ni3922_suif_tmp4_2(0)) = '1') then
        nextState <= b142s0;
      else
        nextState <= b140s0;
      end if;
    when b141s0 =>
      nextState <= b141s1;
    when b141s1 =>
      nextState <= b143s0;
    when b142s0 =>
      nextState <= b142s1;
    when b142s1 =>
      nextState <= b143s0;
    when b143s0 =>
      if (ni3926_suif_tmp50(0) = '1') then
        nextState <= b132s0;
      elsif ((not ni3926_suif_tmp50(0)) = '1') then
        nextState <= b144s0;
      else
        nextState <= b143s0;
      end if;
    when b144s0 =>
      if (ni3928_suif_tmp49(0) = '1') then
        nextState <= b131s0;
      elsif ((not ni3928_suif_tmp49(0)) = '1') then
        nextState <= b145s0;
      else
        nextState <= b144s0;
      end if;
    when b145s0 =>
      nextState <= b146s0;
    when b146s0 =>
      nextState <= b146s1;
    when b146s1 =>
      if (r_suif_tmp51(0) = '1') then
        nextState <= b146s0;
      elsif ((not r_suif_tmp51(0)) = '1') then
        nextState <= b16s0;
      else
        nextState <= b146s1;
      end if;
    when b147s0 =>
      nextState <= b16s0;
    when b148s0 =>
      nextState <= finished;
    when finished =>
      nextState <= finished;
    when others =>
      nextState <= init;
    end case;
  end process;

  process (clk,reset)
  begin
    if (reset='1') then
      newState <= '1';
    elsif (clk'event and clk='1') then
      newState <= stateEn;
    end if;
  end process;

-- b0s0
  ni3452_y <= X"00";

-- b1s0
  ni3455_x <= X"00";

-- b2s0
  ni3458_suif_tmp3 <= "0000000000000000000000000000000" & cmp_less_s(r_x, X"04");

-- b3s0
  ni3459_suif_tmp4 <= r_suif_tmp3;

-- b4s0
  ni3460_suif_tmp10 <= "0000000000000000000000000000000" & cmp_less_s(r_y, X"04");

-- b5s0
  ni3461_suif_tmp2 <= r_suif_tmp10;

-- b6s0
  ni3462_suif_tmp1 <= "0000000000000000000000000000000" & cmp_less_s(X"11", r_x);

-- b7s0
  ni3463_suif_tmp00 <= r_suif_tmp1;

-- b8s0
  ni3464_suif_tmp00 <= "0000000000000000000000000000000" & cmp_less_s(X"11", r_y);

-- b9s0
  ni3465_suif_tmp2 <= r_suif_tmp00;

-- b10s0
  ni3466_suif_tmp4 <= r_suif_tmp2;

-- b11s0
  ni3467_r_e_g_0 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));

-- b11s1
  ni169_board <= X"0f";

-- b12s0
  ni3468_r_e_g_0 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));

-- b12s1
  ni185_board <= X"00";

-- b13s0
  ni3469_x <= add(r_x, X"01");
  ni3470_suif_tmp0 <= "0000000000000000000000000000000" & cmp_less_s(ni3469_x, X"20");

-- b14s0
  ni3471_y <= add(r_y, X"01");
  ni3472_suif_tmp <= "0000000000000000000000000000000" & cmp_less_s(ni3471_y, X"20");

-- b15s0
  ni3473_avail_self <= X"7fffff";
  ni3474_avail_opp <= X"7fffff";
  ni3475_score_self <= X"00";
  ni3476_score_opp <= X"00";
  ni3477_temp_code <= X"ff";

-- b16s0

-- b16s1
  ni3480_input_code_0 <= r_input_stream;
  ni3481_suif_tmp5 <= "0000000000000000000000000000000" & eq(ni3480_input_code_0, X"34");

-- b17s0
  ni3482_temp_code <= X"34";
  ni3483_input_code_0 <= X"33";

-- b18s0
  ni3484_temp_code <= X"ff";

-- b19s0
  ni3485_suif_tmp_0 <= sign_ext(r_input_code_0, 32);
  ni3486_suif_tmp6 <= "0000000000000000000000000000000" & eq(ni3485_suif_tmp_0(7 downto 0), X"30");
  ni3490_suif_tmp7 <= "0000000000000000000000000000000" & eq(ni3485_suif_tmp_0(7 downto 0), X"32");
  ni3576_suif_tmp12 <= "0000000000000000000000000000000" & eq(ni3485_suif_tmp_0(7 downto 0), X"33");
  ni3906_suif_tmp48 <= "0000000000000000000000000000000" & eq(ni3485_suif_tmp_0(7 downto 0), X"39");
  ni6237963_switched <= ni3906_suif_tmp48(0 downto 0) or ni3576_suif_tmp12(0 downto 0) or ni3490_suif_tmp7(0 downto 0) or ni3486_suif_tmp6(0 downto 0);

-- b20s0
  ni3487_response_code_0 <= X"31";
  ni3488_response_code_1 <= X"43";
  ni3489_response_code_2 <= X"4c";

-- b20s1

-- b20s2

-- b21s0

-- b21s1
  ni3491_input_code_0 <= r_input_stream;
  ni3492_suif_tmp8 <= "0000000000000000000000000000000" & eq(ni3491_input_code_0, X"35");

-- b22s0
  ni3493_response_code_0 <= X"35";
  ni3494_response_code_1 <= X"35";
  ni3495_response_code_2 <= X"75";
  ni3496_response_code_3 <= X"30";

-- b23s0
  ni3497_suif_tmp9 <= "0000000000000000000000000000000" & eq(r_input_code_0, X"41");

-- b24s0
  ni3498_response_code_0 <= X"61";
  ni3499_response_code_1 <= X"61";
  ni3500_response_code_2 <= X"75";
  ni3501_response_code_3 <= X"30";

-- b25s0
  ni3502_suif_tmp_1 <= "0000000000000000000000000000000" & cmp_less_equal_s(X"30", r_response_code_0);

-- b25s1

-- b25s2

-- b25s3

-- b26s0
  ni3503_suif_tmp0_0 <= r_suif_tmp_1;

-- b27s0
  ni3504_suif_tmp0_0 <= "0000000000000000000000000000000" & cmp_less_equal_s(r_response_code_0, X"39");

-- b28s0
  ni3505_m_x <= sub(r_response_code_0, X"30");

-- b29s0
  ni3506_suif_tmp1_0 <= "0000000000000000000000000000000" & cmp_less_equal_s(X"61", r_response_code_0);

-- b30s0
  ni3507_suif_tmp2_0 <= r_suif_tmp1_0;

-- b31s0
  ni3508_suif_tmp2_0 <= "0000000000000000000000000000000" & cmp_less_equal_s(r_response_code_0, X"65");

-- b32s0
  ni3509_m_x <= add(r_response_code_0, X"a9");

-- b33s0
  ni3510_suif_tmp3_0 <= "0000000000000000000000000000000" & cmp_less_equal_s(X"30", r_response_code_1);

-- b34s0
  ni3511_suif_tmp4_0 <= r_suif_tmp3_0;

-- b35s0
  ni3512_suif_tmp4_0 <= "0000000000000000000000000000000" & cmp_less_equal_s(r_response_code_1, X"39");

-- b36s0
  ni3513_m_y <= sub(r_response_code_1, X"30");

-- b37s0
  ni3514_suif_tmp52 <= "0000000000000000000000000000000" & cmp_less_equal_s(X"61", r_response_code_1);

-- b38s0
  ni3515_suif_tmp60 <= r_suif_tmp52;

-- b39s0
  ni3516_suif_tmp60 <= "0000000000000000000000000000000" & cmp_less_equal_s(r_response_code_1, X"65");

-- b40s0
  ni3517_m_y <= add(r_response_code_1, X"a9");

-- b41s0
  ni3518_m_piece <= sub(r_response_code_2, X"61");
  ni3519_m_rotate <= sub(r_response_code_3, X"30");
  ni3520_m <= (((shl(sign_ext(ni3518_m_piece, 32), 8) or shl(sign_ext(ni3519_m_rotate, 32), 13)) or shl(sign_ext(r_m_x, 32), 0)) or shl(sign_ext(r_m_y, 32), 4)) or X"01000000";
  ni3521_m_y <= add(r_m_y, X"03");
  ni3522_m_x <= add(r_m_x, X"03");
  ni3524_avail_self <= r_avail_self and not shl(X"000001", sign_ext(ni3518_m_piece, 24));
  ni3527_yoff <= ni3521_m_y;
  ni3528_xoff <= ni3522_m_x;

-- b41s1
  ti496_piece_sizes <= r_m_piece(4 downto 0);
  ni496_piece_sizes <= p_piece_sizes_imm2;
  ni3523_size <= ni496_piece_sizes;
  ni3525_score_self <= add(r_score_self, ni3523_size);
  ni3526_size <= sub(ni3523_size, X"01");

-- b42s0
  ni3530_y <= add(r_yoff, X"01");
  ni3531_x <= r_xoff;
  ni3532_y1 <= add(r_yoff, X"01");
  ni3533_x1 <= add(r_xoff, X"01");
  ni3540_y <= sub(r_yoff, X"01");
  ni3541_x <= r_xoff;
  ni3542_y1 <= sub(r_yoff, X"01");
  ni3543_x1 <= sub(r_xoff, X"01");
  ni3550_y <= r_yoff;
  ni3551_x <= add(r_xoff, X"01");
  ni3552_y1 <= sub(r_yoff, X"01");
  ni3553_x1 <= add(r_xoff, X"01");
  ni3560_y <= r_yoff;
  ni3561_x <= sub(r_xoff, X"01");
  ni3562_y1 <= add(r_yoff, X"01");
  ni3563_x1 <= sub(r_xoff, X"01");
  ni3570_size <= sub(r_size, X"01");
  ni3571_suif_tmp11 <= "0000000000000000000000000000000" & cmp_less_s(ni3570_size, X"00");
  ni3529_r_e_g_0 <= add(shl(sign_ext(r_yoff, 10), 5), sign_ext(r_xoff, 10));
  ni6237613_r_e_g_1 <= sign_ext(ni3530_y, 10);
  ni6237616_r_e_g_2 <= sign_ext(ni3531_x, 10);
  ni6237617_r_e_g_3 <= sign_ext(ni3532_y1, 10);
  ni6237620_r_e_g_4 <= sign_ext(ni3533_x1, 10);
  ni6237621_r_e_g_5 <= sign_ext(ni3530_y, 10);
  ni6237624_r_e_g_6 <= sign_ext(ni3531_x, 10);
  ni6237625_r_e_g_7 <= sign_ext(ni3532_y1, 10);
  ni6237628_r_e_g_8 <= sign_ext(ni3533_x1, 10);
  ni6237629_r_e_g_9 <= sign_ext(ni3540_y, 10);
  ni6237632_r_e_g_10 <= sign_ext(ni3541_x, 10);
  ni6237633_r_e_g_11 <= sign_ext(ni3542_y1, 10);
  ni6237636_r_e_g_12 <= sign_ext(ni3543_x1, 10);
  ni6237637_r_e_g_13 <= sign_ext(ni3540_y, 10);
  ni6237640_r_e_g_14 <= sign_ext(ni3541_x, 10);
  ni6237641_r_e_g_15 <= sign_ext(ni3542_y1, 10);
  ni6237644_r_e_g_16 <= sign_ext(ni3543_x1, 10);
  ni6237645_r_e_g_17 <= sign_ext(ni3550_y, 10);
  ni6237648_r_e_g_18 <= sign_ext(ni3551_x, 10);
  ni6237649_r_e_g_19 <= sign_ext(ni3552_y1, 10);
  ni6237652_r_e_g_20 <= sign_ext(ni3553_x1, 10);
  ni6237653_r_e_g_21 <= sign_ext(ni3550_y, 10);
  ni6237656_r_e_g_22 <= sign_ext(ni3551_x, 10);
  ni6237657_r_e_g_23 <= sign_ext(ni3552_y1, 10);
  ni6237660_r_e_g_24 <= sign_ext(ni3553_x1, 10);

-- b42s1
  ni530_board <= X"0d";

-- b42s2
  ni3535_r_e_g_0 <= add(shl(r_r_e_g_1, 5), r_r_e_g_2);
  ni3537_r_e_g_1 <= add(shl(r_r_e_g_3, 5), r_r_e_g_4);
  ni3538_r_e_g_2 <= add(shl(r_r_e_g_5, 5), r_r_e_g_6);

-- b42s3
  ni563_board <= p_board_imm2;
  ni3534_board_t <= ni563_board;
  ni571_board <= p_board_imm;
  ni3536_board_t1 <= ni571_board;
  ni578_board <= ni3534_board_t or X"04";
  ni3539_r_e_g_0 <= add(shl(r_r_e_g_7, 5), r_r_e_g_8);

-- b42s4
  ni594_board <= r_board_t1 or X"10";

-- b42s5
  ni3545_r_e_g_0 <= add(shl(r_r_e_g_9, 5), r_r_e_g_10);
  ni3547_r_e_g_1 <= add(shl(r_r_e_g_11, 5), r_r_e_g_12);
  ni3548_r_e_g_2 <= add(shl(r_r_e_g_13, 5), r_r_e_g_14);

-- b42s6
  ni628_board <= p_board_imm2;
  ni3544_board_t <= ni628_board;
  ni636_board <= p_board_imm;
  ni3546_board_t1 <= ni636_board;
  ni643_board <= ni3544_board_t or X"04";
  ni3549_r_e_g_0 <= add(shl(r_r_e_g_15, 5), r_r_e_g_16);

-- b42s7
  ni659_board <= r_board_t1 or X"10";

-- b42s8
  ni3555_r_e_g_0 <= add(shl(r_r_e_g_17, 5), r_r_e_g_18);
  ni3557_r_e_g_1 <= add(shl(r_r_e_g_19, 5), r_r_e_g_20);
  ni3558_r_e_g_2 <= add(shl(r_r_e_g_21, 5), r_r_e_g_22);

-- b42s9
  ni693_board <= p_board_imm2;
  ni3554_board_t <= ni693_board;
  ni701_board <= p_board_imm;
  ni3556_board_t1 <= ni701_board;
  ni708_board <= ni3554_board_t or X"04";
  ni3559_r_e_g_0 <= add(shl(r_r_e_g_23, 5), r_r_e_g_24);

-- b42s10
  ni724_board <= r_board_t1 or X"10";

-- b42s11
  ni3565_r_e_g_0 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));
  ni3567_r_e_g_1 <= add(shl(sign_ext(r_y1, 10), 5), sign_ext(r_x1, 10));
  ni3568_r_e_g_2 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));

-- b42s12
  ni758_board <= p_board_imm2;
  ni3564_board_t <= ni758_board;
  ni766_board <= p_board_imm;
  ni3566_board_t1 <= ni766_board;
  ni773_board <= ni3564_board_t or X"04";
  ni3569_r_e_g_0 <= add(shl(sign_ext(r_y1, 10), 5), sign_ext(r_x1, 10));

-- b42s13
  ni789_board <= r_board_t1 or X"10";

-- b42s14
  ni3573_r_e_g_0 <= add(shl(add(shl(sign_ext(r_m_piece, 10), 3), sign_ext(r_m_rotate, 10)), 2), sign_ext(r_size, 10));
  ni3575_r_e_g_1 <= add(shl(add(shl(sign_ext(r_m_piece, 10), 3), sign_ext(r_m_rotate, 10)), 2), sign_ext(r_size, 10));

-- b42s15
  ni823_piece_y <= p_piece_y_imm2;
  ni3572_yoff <= add(r_m_y, ni823_piece_y);
  ni837_piece_x <= p_piece_x_imm2;
  ni3574_xoff <= add(r_m_x, ni837_piece_x);

-- b43s0
  ni3577_time_rem <= "01";
  ni3578_timer_t <= X"01";
  ni3579_z <= X"00";

-- b44s0
  ni3583_z <= add(r_z, X"01");
  ni3584_suif_tmp13 <= "0000000000000000000000000000000" & cmp_less_s(ni3583_z, X"05");

-- b44s1
  ni3582_timer_t <= r_timer_input_stream;

-- b45s0

-- b45s1
  ni3585_input_code_0 <= r_input_stream;
  ni3589_suif_tmp80 <= "0000000000000000000000000000000" & cmp_less_equal_s(X"30", ni3585_input_code_0);

-- b45s2
  ni3586_input_code_1 <= r_input_stream;

-- b45s3
  ni3587_input_code_2 <= r_input_stream;

-- b45s4
  ni3588_input_code_3 <= r_input_stream;

-- b46s0
  ni3590_suif_tmp90 <= r_suif_tmp80;

-- b47s0
  ni3591_suif_tmp90 <= "0000000000000000000000000000000" & cmp_less_equal_s(r_input_code_0, X"39");

-- b48s0
  ni3592_m_x <= sub(r_input_code_0, X"30");

-- b49s0
  ni3593_suif_tmp100 <= "0000000000000000000000000000000" & cmp_less_equal_s(X"61", r_input_code_0);

-- b50s0
  ni3594_suif_tmp110 <= r_suif_tmp100;

-- b51s0
  ni3595_suif_tmp110 <= "0000000000000000000000000000000" & cmp_less_equal_s(r_input_code_0, X"65");

-- b52s0
  ni3596_m_x <= add(r_input_code_0, X"a9");

-- b53s0
  ni3597_suif_tmp120 <= "0000000000000000000000000000000" & cmp_less_equal_s(X"30", r_input_code_1);

-- b54s0
  ni3598_suif_tmp130 <= r_suif_tmp120;

-- b55s0
  ni3599_suif_tmp130 <= "0000000000000000000000000000000" & cmp_less_equal_s(r_input_code_1, X"39");

-- b56s0
  ni3600_m_y <= sub(r_input_code_1, X"30");

-- b57s0
  ni3601_suif_tmp140 <= "0000000000000000000000000000000" & cmp_less_equal_s(X"61", r_input_code_1);

-- b58s0
  ni3602_suif_tmp150 <= r_suif_tmp140;

-- b59s0
  ni3603_suif_tmp150 <= "0000000000000000000000000000000" & cmp_less_equal_s(r_input_code_1, X"65");

-- b60s0
  ni3604_m_y <= add(r_input_code_1, X"a9");

-- b61s0
  ni3605_m_piece <= sub(r_input_code_2, X"61");
  ni3606_m_rotate <= sub(r_input_code_3, X"30");
  ni3607_suif_tmp14 <= "0000000000000000000000000000000" & neq(r_m_x, X"00");

-- b62s0
  ni3608_m <= (((shl(sign_ext(r_m_piece, 32), 8) or shl(sign_ext(r_m_rotate, 32), 13)) or shl(sign_ext(r_m_x, 32), 0)) or shl(sign_ext(r_m_y, 32), 4)) or X"02000000";
  ni3609_m_y <= add(r_m_y, X"03");
  ni3610_m_x <= add(r_m_x, X"03");
  ni3612_avail_opp <= r_avail_opp and not shl(X"000001", sign_ext(r_m_piece, 24));
  ni3615_yoff <= ni3609_m_y;
  ni3616_xoff <= ni3610_m_x;

-- b62s1
  ti1054_piece_sizes <= r_m_piece(4 downto 0);
  ni1054_piece_sizes <= p_piece_sizes_imm2;
  ni3611_size <= ni1054_piece_sizes;
  ni3613_score_opp <= add(r_score_opp, ni3611_size);
  ni3614_size <= sub(ni3611_size, X"01");

-- b63s0
  ni3618_y <= add(r_yoff, X"01");
  ni3619_x <= r_xoff;
  ni3620_y1 <= add(r_yoff, X"01");
  ni3621_x1 <= add(r_xoff, X"01");
  ni3628_y <= sub(r_yoff, X"01");
  ni3629_x <= r_xoff;
  ni3630_y1 <= sub(r_yoff, X"01");
  ni3631_x1 <= sub(r_xoff, X"01");
  ni3638_y <= r_yoff;
  ni3639_x <= add(r_xoff, X"01");
  ni3640_y1 <= sub(r_yoff, X"01");
  ni3641_x1 <= add(r_xoff, X"01");
  ni3648_y <= r_yoff;
  ni3649_x <= sub(r_xoff, X"01");
  ni3650_y1 <= add(r_yoff, X"01");
  ni3651_x1 <= sub(r_xoff, X"01");
  ni3658_size <= sub(r_size, X"01");
  ni3659_suif_tmp15 <= "0000000000000000000000000000000" & cmp_less_s(ni3658_size, X"00");
  ni3617_r_e_g_0 <= add(shl(sign_ext(r_yoff, 10), 5), sign_ext(r_xoff, 10));
  ni6237695_r_e_g_1 <= sign_ext(ni3618_y, 10);
  ni6237698_r_e_g_2 <= sign_ext(ni3619_x, 10);
  ni6237699_r_e_g_3 <= sign_ext(ni3620_y1, 10);
  ni6237702_r_e_g_4 <= sign_ext(ni3621_x1, 10);
  ni6237703_r_e_g_5 <= sign_ext(ni3618_y, 10);
  ni6237706_r_e_g_6 <= sign_ext(ni3619_x, 10);
  ni6237707_r_e_g_7 <= sign_ext(ni3620_y1, 10);
  ni6237710_r_e_g_8 <= sign_ext(ni3621_x1, 10);
  ni6237711_r_e_g_9 <= sign_ext(ni3628_y, 10);
  ni6237714_r_e_g_10 <= sign_ext(ni3629_x, 10);
  ni6237715_r_e_g_11 <= sign_ext(ni3630_y1, 10);
  ni6237718_r_e_g_12 <= sign_ext(ni3631_x1, 10);
  ni6237719_r_e_g_13 <= sign_ext(ni3628_y, 10);
  ni6237722_r_e_g_14 <= sign_ext(ni3629_x, 10);
  ni6237723_r_e_g_15 <= sign_ext(ni3630_y1, 10);
  ni6237726_r_e_g_16 <= sign_ext(ni3631_x1, 10);
  ni6237727_r_e_g_17 <= sign_ext(ni3638_y, 10);
  ni6237730_r_e_g_18 <= sign_ext(ni3639_x, 10);
  ni6237731_r_e_g_19 <= sign_ext(ni3640_y1, 10);
  ni6237734_r_e_g_20 <= sign_ext(ni3641_x1, 10);
  ni6237735_r_e_g_21 <= sign_ext(ni3638_y, 10);
  ni6237738_r_e_g_22 <= sign_ext(ni3639_x, 10);
  ni6237739_r_e_g_23 <= sign_ext(ni3640_y1, 10);
  ni6237742_r_e_g_24 <= sign_ext(ni3641_x1, 10);

-- b63s1
  ni1088_board <= X"0e";

-- b63s2
  ni3623_r_e_g_0 <= add(shl(r_r_e_g_1, 5), r_r_e_g_2);
  ni3625_r_e_g_1 <= add(shl(r_r_e_g_3, 5), r_r_e_g_4);
  ni3626_r_e_g_2 <= add(shl(r_r_e_g_5, 5), r_r_e_g_6);

-- b63s3
  ni1121_board <= p_board_imm2;
  ni3622_board_t <= ni1121_board;
  ni1129_board <= p_board_imm;
  ni3624_board_t1 <= ni1129_board;
  ni1136_board <= ni3622_board_t or X"08";
  ni3627_r_e_g_0 <= add(shl(r_r_e_g_7, 5), r_r_e_g_8);

-- b63s4
  ni1152_board <= r_board_t1 or X"20";

-- b63s5
  ni3633_r_e_g_0 <= add(shl(r_r_e_g_9, 5), r_r_e_g_10);
  ni3635_r_e_g_1 <= add(shl(r_r_e_g_11, 5), r_r_e_g_12);
  ni3636_r_e_g_2 <= add(shl(r_r_e_g_13, 5), r_r_e_g_14);

-- b63s6
  ni1186_board <= p_board_imm2;
  ni3632_board_t <= ni1186_board;
  ni1194_board <= p_board_imm;
  ni3634_board_t1 <= ni1194_board;
  ni1201_board <= ni3632_board_t or X"08";
  ni3637_r_e_g_0 <= add(shl(r_r_e_g_15, 5), r_r_e_g_16);

-- b63s7
  ni1217_board <= r_board_t1 or X"20";

-- b63s8
  ni3643_r_e_g_0 <= add(shl(r_r_e_g_17, 5), r_r_e_g_18);
  ni3645_r_e_g_1 <= add(shl(r_r_e_g_19, 5), r_r_e_g_20);
  ni3646_r_e_g_2 <= add(shl(r_r_e_g_21, 5), r_r_e_g_22);

-- b63s9
  ni1251_board <= p_board_imm2;
  ni3642_board_t <= ni1251_board;
  ni1259_board <= p_board_imm;
  ni3644_board_t1 <= ni1259_board;
  ni1266_board <= ni3642_board_t or X"08";
  ni3647_r_e_g_0 <= add(shl(r_r_e_g_23, 5), r_r_e_g_24);

-- b63s10
  ni1282_board <= r_board_t1 or X"20";

-- b63s11
  ni3653_r_e_g_0 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));
  ni3655_r_e_g_1 <= add(shl(sign_ext(r_y1, 10), 5), sign_ext(r_x1, 10));
  ni3656_r_e_g_2 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));

-- b63s12
  ni1316_board <= p_board_imm2;
  ni3652_board_t <= ni1316_board;
  ni1324_board <= p_board_imm;
  ni3654_board_t1 <= ni1324_board;
  ni1331_board <= ni3652_board_t or X"08";
  ni3657_r_e_g_0 <= add(shl(sign_ext(r_y1, 10), 5), sign_ext(r_x1, 10));

-- b63s13
  ni1347_board <= r_board_t1 or X"20";

-- b63s14
  ni3661_r_e_g_0 <= add(shl(add(shl(sign_ext(r_m_piece, 10), 3), sign_ext(r_m_rotate, 10)), 2), sign_ext(r_size, 10));
  ni3663_r_e_g_1 <= add(shl(add(shl(sign_ext(r_m_piece, 10), 3), sign_ext(r_m_rotate, 10)), 2), sign_ext(r_size, 10));

-- b63s15
  ni1381_piece_y <= p_piece_y_imm2;
  ni3660_yoff <= add(r_m_y, ni1381_piece_y);
  ni1395_piece_x <= p_piece_x_imm2;
  ni3662_xoff <= add(r_m_x, ni1395_piece_x);

-- b64s0
  ni3664_suif_tmp16 <= "0000000000000000000000000000000" & eq(r_temp_code(6 downto 0), "0110100");

-- b65s0

-- b65s1
  ni3665_input_code_0 <= r_input_stream;
  ni3669_suif_tmp_2 <= "0000000000000000000000000000000" & cmp_less_equal_s(X"30", ni3665_input_code_0);

-- b65s2
  ni3666_input_code_1 <= r_input_stream;

-- b65s3
  ni3667_input_code_2 <= r_input_stream;

-- b65s4
  ni3668_input_code_3 <= r_input_stream;

-- b66s0
  ni3670_suif_tmp0_1 <= r_suif_tmp_2;

-- b67s0
  ni3671_suif_tmp0_1 <= "0000000000000000000000000000000" & cmp_less_equal_s(r_input_code_0, X"39");

-- b68s0
  ni3672_m_x <= sub(r_input_code_0, X"30");

-- b69s0
  ni3673_suif_tmp1_1 <= "0000000000000000000000000000000" & cmp_less_equal_s(X"61", r_input_code_0);

-- b70s0
  ni3674_suif_tmp2_1 <= r_suif_tmp1_1;

-- b71s0
  ni3675_suif_tmp2_1 <= "0000000000000000000000000000000" & cmp_less_equal_s(r_input_code_0, X"65");

-- b72s0
  ni3676_m_x <= add(r_input_code_0, X"a9");

-- b73s0
  ni3677_suif_tmp3_1 <= "0000000000000000000000000000000" & cmp_less_equal_s(X"30", r_input_code_1);

-- b74s0
  ni3678_suif_tmp4_1 <= r_suif_tmp3_1;

-- b75s0
  ni3679_suif_tmp4_1 <= "0000000000000000000000000000000" & cmp_less_equal_s(r_input_code_1, X"39");

-- b76s0
  ni3680_m_y <= sub(r_input_code_1, X"30");

-- b77s0
  ni3681_suif_tmp5_0 <= "0000000000000000000000000000000" & cmp_less_equal_s(X"61", r_input_code_1);

-- b78s0
  ni3682_suif_tmp6_0 <= r_suif_tmp5_0;

-- b79s0
  ni3683_suif_tmp6_0 <= "0000000000000000000000000000000" & cmp_less_equal_s(r_input_code_1, X"65");

-- b80s0
  ni3684_m_y <= add(r_input_code_1, X"a9");

-- b81s0
  ni3685_m_piece <= sub(r_input_code_2, X"61");
  ni3686_m_rotate <= sub(r_input_code_3, X"30");
  ni3687_suif_tmp17 <= "0000000000000000000000000000000" & neq(r_m_x, X"00");

-- b82s0
  ni3688_m <= (((shl(sign_ext(r_m_piece, 32), 8) or shl(sign_ext(r_m_rotate, 32), 13)) or shl(sign_ext(r_m_x, 32), 0)) or shl(sign_ext(r_m_y, 32), 4)) or X"02000000";
  ni3689_m_y <= add(r_m_y, X"03");
  ni3690_m_x <= add(r_m_x, X"03");
  ni3692_avail_opp <= r_avail_opp and not shl(X"000001", sign_ext(r_m_piece, 24));
  ni3695_yoff <= ni3689_m_y;
  ni3696_xoff <= ni3690_m_x;

-- b82s1
  ti1580_piece_sizes <= r_m_piece(4 downto 0);
  ni1580_piece_sizes <= p_piece_sizes_imm2;
  ni3691_size <= ni1580_piece_sizes;
  ni3693_score_opp <= add(r_score_opp, ni3691_size);
  ni3694_size <= sub(ni3691_size, X"01");

-- b83s0
  ni3698_y <= add(r_yoff, X"01");
  ni3699_x <= r_xoff;
  ni3700_y1 <= add(r_yoff, X"01");
  ni3701_x1 <= add(r_xoff, X"01");
  ni3708_y <= sub(r_yoff, X"01");
  ni3709_x <= r_xoff;
  ni3710_y1 <= sub(r_yoff, X"01");
  ni3711_x1 <= sub(r_xoff, X"01");
  ni3718_y <= r_yoff;
  ni3719_x <= add(r_xoff, X"01");
  ni3720_y1 <= sub(r_yoff, X"01");
  ni3721_x1 <= add(r_xoff, X"01");
  ni3728_y <= r_yoff;
  ni3729_x <= sub(r_xoff, X"01");
  ni3730_y1 <= add(r_yoff, X"01");
  ni3731_x1 <= sub(r_xoff, X"01");
  ni3738_size <= sub(r_size, X"01");
  ni3739_suif_tmp18 <= "0000000000000000000000000000000" & cmp_less_s(ni3738_size, X"00");
  ni3697_r_e_g_0 <= add(shl(sign_ext(r_yoff, 10), 5), sign_ext(r_xoff, 10));
  ni6237777_r_e_g_1 <= sign_ext(ni3698_y, 10);
  ni6237780_r_e_g_2 <= sign_ext(ni3699_x, 10);
  ni6237781_r_e_g_3 <= sign_ext(ni3700_y1, 10);
  ni6237784_r_e_g_4 <= sign_ext(ni3701_x1, 10);
  ni6237785_r_e_g_5 <= sign_ext(ni3698_y, 10);
  ni6237788_r_e_g_6 <= sign_ext(ni3699_x, 10);
  ni6237789_r_e_g_7 <= sign_ext(ni3700_y1, 10);
  ni6237792_r_e_g_8 <= sign_ext(ni3701_x1, 10);
  ni6237793_r_e_g_9 <= sign_ext(ni3708_y, 10);
  ni6237796_r_e_g_10 <= sign_ext(ni3709_x, 10);
  ni6237797_r_e_g_11 <= sign_ext(ni3710_y1, 10);
  ni6237800_r_e_g_12 <= sign_ext(ni3711_x1, 10);
  ni6237801_r_e_g_13 <= sign_ext(ni3708_y, 10);
  ni6237804_r_e_g_14 <= sign_ext(ni3709_x, 10);
  ni6237805_r_e_g_15 <= sign_ext(ni3710_y1, 10);
  ni6237808_r_e_g_16 <= sign_ext(ni3711_x1, 10);
  ni6237809_r_e_g_17 <= sign_ext(ni3718_y, 10);
  ni6237812_r_e_g_18 <= sign_ext(ni3719_x, 10);
  ni6237813_r_e_g_19 <= sign_ext(ni3720_y1, 10);
  ni6237816_r_e_g_20 <= sign_ext(ni3721_x1, 10);
  ni6237817_r_e_g_21 <= sign_ext(ni3718_y, 10);
  ni6237820_r_e_g_22 <= sign_ext(ni3719_x, 10);
  ni6237821_r_e_g_23 <= sign_ext(ni3720_y1, 10);
  ni6237824_r_e_g_24 <= sign_ext(ni3721_x1, 10);

-- b83s1
  ni1614_board <= X"0e";

-- b83s2
  ni3703_r_e_g_0 <= add(shl(r_r_e_g_1, 5), r_r_e_g_2);
  ni3705_r_e_g_1 <= add(shl(r_r_e_g_3, 5), r_r_e_g_4);
  ni3706_r_e_g_2 <= add(shl(r_r_e_g_5, 5), r_r_e_g_6);

-- b83s3
  ni1647_board <= p_board_imm2;
  ni3702_board_t <= ni1647_board;
  ni1655_board <= p_board_imm;
  ni3704_board_t1 <= ni1655_board;
  ni1662_board <= ni3702_board_t or X"08";
  ni3707_r_e_g_0 <= add(shl(r_r_e_g_7, 5), r_r_e_g_8);

-- b83s4
  ni1678_board <= r_board_t1 or X"20";

-- b83s5
  ni3713_r_e_g_0 <= add(shl(r_r_e_g_9, 5), r_r_e_g_10);
  ni3715_r_e_g_1 <= add(shl(r_r_e_g_11, 5), r_r_e_g_12);
  ni3716_r_e_g_2 <= add(shl(r_r_e_g_13, 5), r_r_e_g_14);

-- b83s6
  ni1712_board <= p_board_imm2;
  ni3712_board_t <= ni1712_board;
  ni1720_board <= p_board_imm;
  ni3714_board_t1 <= ni1720_board;
  ni1727_board <= ni3712_board_t or X"08";
  ni3717_r_e_g_0 <= add(shl(r_r_e_g_15, 5), r_r_e_g_16);

-- b83s7
  ni1743_board <= r_board_t1 or X"20";

-- b83s8
  ni3723_r_e_g_0 <= add(shl(r_r_e_g_17, 5), r_r_e_g_18);
  ni3725_r_e_g_1 <= add(shl(r_r_e_g_19, 5), r_r_e_g_20);
  ni3726_r_e_g_2 <= add(shl(r_r_e_g_21, 5), r_r_e_g_22);

-- b83s9
  ni1777_board <= p_board_imm2;
  ni3722_board_t <= ni1777_board;
  ni1785_board <= p_board_imm;
  ni3724_board_t1 <= ni1785_board;
  ni1792_board <= ni3722_board_t or X"08";
  ni3727_r_e_g_0 <= add(shl(r_r_e_g_23, 5), r_r_e_g_24);

-- b83s10
  ni1808_board <= r_board_t1 or X"20";

-- b83s11
  ni3733_r_e_g_0 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));
  ni3735_r_e_g_1 <= add(shl(sign_ext(r_y1, 10), 5), sign_ext(r_x1, 10));
  ni3736_r_e_g_2 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));

-- b83s12
  ni1842_board <= p_board_imm2;
  ni3732_board_t <= ni1842_board;
  ni1850_board <= p_board_imm;
  ni3734_board_t1 <= ni1850_board;
  ni1857_board <= ni3732_board_t or X"08";
  ni3737_r_e_g_0 <= add(shl(sign_ext(r_y1, 10), 5), sign_ext(r_x1, 10));

-- b83s13
  ni1873_board <= r_board_t1 or X"20";

-- b83s14
  ni3741_r_e_g_0 <= add(shl(add(shl(sign_ext(r_m_piece, 10), 3), sign_ext(r_m_rotate, 10)), 2), sign_ext(r_size, 10));
  ni3743_r_e_g_1 <= add(shl(add(shl(sign_ext(r_m_piece, 10), 3), sign_ext(r_m_rotate, 10)), 2), sign_ext(r_size, 10));

-- b83s15
  ni1907_piece_y <= p_piece_y_imm2;
  ni3740_yoff <= add(r_m_y, ni1907_piece_y);
  ni1921_piece_x <= p_piece_x_imm2;
  ni3742_xoff <= add(r_m_x, ni1921_piece_x);

-- b84s0
  ni3744_moves_found <= "00";
  ni3745_alpha <= X"8000";
  ni3746_m_piece_min <= X"00";
  ni3747_suif_tmp19 <= "0000000000000000000000000000000" & cmp_less_s(r_score_self, X"19");

-- b85s0
  ni3748_m_piece_min <= X"09";

-- b86s0
  ni3749_state <= "00";
  ni3750_count <= X"00";
  ni3751_next_stream <= X"01";
  ni3752_m_piece <= X"14";
  ni3753_suif_tmp20 <= "0000000000000000000000000000000" & neq("0000000000000000000000000000000" & cmp_less_equal_s(r_m_piece_min(5 downto 0), "010100") and X"00000001", X"00000000");

-- b87s0
  ni3754_avail <= "0" & neq(sign_ext(r_avail_self, 32) and shl(X"00000001", sign_ext(r_m_piece, 32)), X"00000000");
  ni3755_m_rotate <= X"00";
  ni3756_suif_tmp22 <= "0000000000000000000000000000000" & neq((X"00000001" and sign_ext(ni3754_avail, 32)) and sign_ext(r_time_rem, 32), X"00000000");

-- b88s0
  ni3757_m_y <= X"04";
  ni3758_suif_tmp24 <= "0000000000000000000000000000000" & neq(X"00000001" and sign_ext(r_time_rem, 32), X"00000000");

-- b89s0
  ni3759_m_x <= X"04";
  ni3760_suif_tmp26 <= "0000000000000000000000000000000" & neq(X"00000001" and sign_ext(r_time_rem, 32), X"00000000");

-- b90s0
  ni3761_lib_check <= "00";
  ni3763_yoff <= r_m_y;
  ni3764_xoff <= r_m_x;

-- b90s1
  ti2047_piece_sizes <= r_m_piece(4 downto 0);
  ni2047_piece_sizes <= p_piece_sizes_imm2;
  ni3762_size <= sub(ni2047_piece_sizes, X"01");

-- b91s0
  ni3769_size <= sub(r_size, X"01");
  ni3766_r_e_g_0 <= add(shl(sign_ext(r_yoff, 10), 5), sign_ext(r_xoff, 10));
  ni3771_r_e_g_1 <= add(shl(add(shl(sign_ext(r_m_piece, 10), 3), sign_ext(r_m_rotate, 10)), 2), sign_ext(ni3769_size, 10));
  ni3773_r_e_g_2 <= add(shl(add(shl(sign_ext(r_m_piece, 10), 3), sign_ext(r_m_rotate, 10)), 2), sign_ext(ni3769_size, 10));

-- b91s1
  ni2060_board <= p_board_imm2;
  ni3765_board_t <= ni2060_board;
  ni3767_move_valid <= "0" & eq(sign_ext(ni3765_board_t, 32) and X"00000004", X"00000000");
  ni3768_lib_check <= r_lib_check or "0" & neq(sign_ext(ni3765_board_t, 32) and X"00000010", X"00000000");
  ni2103_piece_y <= p_piece_y_imm2;
  ni3770_yoff <= add(r_m_y, ni2103_piece_y);
  ni2117_piece_x <= p_piece_x_imm2;
  ni3772_xoff <= add(r_m_x, ni2117_piece_x);
  ni3774_suif_tmp28 <= "0000000000000000000000000000000" & neq("0000000000000000000000000000000" & eq(ni3767_move_valid, "01") and "0000000000000000000000000000000" & cmp_less_equal_s(X"00", r_size), X"00000000");

-- b92s0
  ni3775_suif_tmp29 <= "0000000000000000000000000000000" & neq(r_move_valid and r_lib_check, "00");

-- b93s0
  ni3776_moves_found <= "01";
  ni3777_m <= (((shl(sign_ext(r_m_piece, 32), 8) or shl(sign_ext(r_m_rotate, 32), 13)) or shl(sub(sign_ext(r_m_x, 32), X"00000003"), 0)) or shl(sub(sign_ext(r_m_y, 32), X"00000003"), 4)) or X"03000000";
  ni3778_m1 <= shl(sign_ext(r_alpha, 32), 16);
  ni3779_suif_tmp30 <= "0000000000000000000000000000000" & eq(r_state, "00");

-- b94s0
  ni3780_suif_tmp31 <= "0000000000000000000000000000000" & eq(r_next_stream(2 downto 0), "001");

-- b95s0
  ni3781_count <= add(r_count, X"01");
  ni3782_next_stream <= X"02";

-- b95s1

-- b96s0
  ni3783_suif_tmp32 <= "0000000000000000000000000000000" & eq(r_next_stream(2 downto 0), "010");

-- b97s0
  ni3784_count <= add(r_count, X"01");
  ni3785_next_stream <= X"01";
  ni3786_suif_tmp33 <= "0000000000000000000000000000000" & eq(ni3784_count, X"04");

-- b97s1

-- b98s0
  ni3787_state <= "01";

-- b99s0

-- b100s0
  ni2271_r_e_g_25 <= "0" & mkvec(p_stream1_move_input_rdy) and not ("0" & mkvec(p_stream1_move_input_eos));

-- b100s1
  ni3791_m_recv <= r_stream1_move_input;
  ni3790_suif_tmp34 <= "0000000000000000000000000000000" & neq(r_r_e_g_25, "00");

-- b101s0

-- b101s1

-- b102s0
  ni2296_r_e_g_25 <= "0" & mkvec(p_stream2_move_input_rdy) and not ("0" & mkvec(p_stream2_move_input_eos));

-- b102s1
  ni3793_m_recv <= r_stream2_move_input;
  ni3792_suif_tmp35 <= "0000000000000000000000000000000" & neq(r_r_e_g_25, "00");

-- b103s0

-- b103s1

-- b104s0
  ni2321_r_e_g_25 <= "0" & mkvec(p_timer_input_stream_rdy) and not ("0" & mkvec(p_timer_input_stream_eos));

-- b104s1
  ni3795_timer_t <= r_timer_input_stream;
  ni3794_suif_tmp36 <= "0000000000000000000000000000000" & neq(r_r_e_g_25, "00");

-- b105s0
  ni3796_time_rem <= "00";
  ni3797_timer_t <= X"02";

-- b106s0
  ni3798_utility <= ashr(r_m_recv, 16)(15 downto 0) and X"ffff";
  ni3799_suif_tmp37 <= "0000000000000000000000000000000" & neq("0000000000000000000000000000000" & cmp_less_s(r_alpha, ni3798_utility) and sign_ext(r_time_rem, 32), X"00000000");

-- b107s0
  ni3800_best_move_x <= ashr(r_m_recv(7 downto 0), 0) and X"0f";
  ni3801_best_move_y <= ashr(r_m_recv(11 downto 0), 4)(7 downto 0) and X"0f";
  ni3802_best_move_piece <= ashr(r_m_recv(15 downto 0), 8)(7 downto 0) and X"1f";
  ni3803_best_move_rotate <= ashr(r_m_recv(20 downto 0), 13)(7 downto 0) and X"07";
  ni3804_alpha <= r_utility;

-- b108s0
  ni3805_m_x <= add(r_m_x, X"01");
  ni3806_suif_tmp27 <= "0000000000000000000000000000000" & neq("0000000000000000000000000000000" & cmp_less_s(ni3805_m_x, X"12") and sign_ext(r_time_rem, 32), X"00000000");

-- b109s0
  ni3807_m_y <= add(r_m_y, X"01");
  ni3808_suif_tmp25 <= "0000000000000000000000000000000" & neq("0000000000000000000000000000000" & cmp_less_s(ni3807_m_y, X"12") and sign_ext(r_time_rem, 32), X"00000000");

-- b110s0
  ni3809_m_rotate <= add(r_m_rotate, X"01");
  ni3810_suif_tmp23 <= "0000000000000000000000000000000" & neq(("0000000000000000000000000000000" & cmp_less_s(ni3809_m_rotate, X"08") and sign_ext(r_avail, 32)) and sign_ext(r_time_rem, 32), X"00000000");

-- b111s0
  ni3811_m_piece <= sub(r_m_piece, X"01");
  ni3812_suif_tmp21 <= "0000000000000000000000000000000" & neq("0000000000000000000000000000000" & cmp_less_equal_s(r_m_piece_min, ni3811_m_piece) and sign_ext(r_time_rem, 32), X"00000000");

-- b112s0
  ni3813_suif_tmp38 <= "0000000000000000000000000000000" & cmp_less_s(X"00", r_count);

-- b113s0
  ni2487_r_e_g_25 <= "0" & mkvec(p_stream1_move_input_rdy) and not ("0" & mkvec(p_stream1_move_input_eos));

-- b113s1
  ni3817_m_recv <= r_stream1_move_input;
  ni3816_suif_tmp39 <= "0000000000000000000000000000000" & neq(r_r_e_g_25, "00");

-- b114s0
  ni3818_count <= sub(r_count, X"01");

-- b115s0
  ni2505_r_e_g_25 <= "0" & mkvec(p_stream2_move_input_rdy) and not ("0" & mkvec(p_stream2_move_input_eos));

-- b115s1
  ni3820_m_recv <= r_stream2_move_input;
  ni3819_suif_tmp40 <= "0000000000000000000000000000000" & neq(r_r_e_g_25, "00");

-- b116s0
  ni3821_count <= sub(r_count, X"01");

-- b117s0
  ni3822_utility <= ashr(r_m_recv, 16)(15 downto 0) and X"ffff";
  ni3823_suif_tmp41 <= "0000000000000000000000000000000" & cmp_less_s(r_alpha, ni3822_utility);

-- b118s0
  ni3824_best_move_x <= ashr(r_m_recv(7 downto 0), 0) and X"0f";
  ni3825_best_move_y <= ashr(r_m_recv(11 downto 0), 4)(7 downto 0) and X"0f";
  ni3826_best_move_piece <= ashr(r_m_recv(15 downto 0), 8)(7 downto 0) and X"1f";
  ni3827_best_move_rotate <= ashr(r_m_recv(20 downto 0), 13)(7 downto 0) and X"07";
  ni3828_alpha <= r_utility;

-- b119s0
  ni3829_suif_tmp42 <= "0000000000000000000000000000000" & neq(r_moves_found, "00");

-- b120s0
  ni3830_response_code_0 <= add(r_best_move_x, X"57");
  ni3831_response_code_1 <= add(r_best_move_y, X"57");
  ni3832_response_code_2 <= add(r_best_move_piece, X"61");
  ni3833_response_code_3 <= add(r_best_move_rotate, X"30");
  ni3834_suif_tmp43 <= "0000000000000000000000000000000" & cmp_less_s(r_best_move_x, X"0a");

-- b121s0
  ni3835_response_code_0 <= add(r_best_move_x, X"30");

-- b122s0
  ni3836_suif_tmp44 <= "0000000000000000000000000000000" & cmp_less_s(r_best_move_y, X"0a");

-- b123s0
  ni3837_response_code_1 <= add(r_best_move_y, X"30");

-- b124s0
  ni3838_response_code_0 <= X"30";
  ni3839_response_code_1 <= X"30";
  ni3840_response_code_2 <= X"30";
  ni3841_response_code_3 <= X"30";

-- b125s0
  ni3842_timer_t <= X"02";
  ni3843_z <= X"00";

-- b125s1

-- b125s2

-- b125s3

-- b126s0
  ni3847_z <= add(r_z, X"01");
  ni3848_suif_tmp45 <= "0000000000000000000000000000000" & cmp_less_s(ni3847_z, X"05");

-- b126s1
  ni3846_timer_t <= r_timer_input_stream;

-- b127s0
  ni3849_suif_tmp46 <= "0000000000000000000000000000000" & neq(r_moves_found, "00");

-- b128s0
  ni3850_m <= (((shl(sign_ext(r_best_move_piece, 32), 8) or shl(sign_ext(r_best_move_rotate, 32), 13)) or shl(sign_ext(r_best_move_x, 32), 0)) or shl(sign_ext(r_best_move_y, 32), 4)) or X"01000000";
  ni3851_best_move_y <= add(r_best_move_y, X"03");
  ni3852_best_move_x <= add(r_best_move_x, X"03");
  ni3854_avail_self <= r_avail_self and not shl(X"000001", sign_ext(r_best_move_piece, 24));
  ni3857_yoff <= ni3851_best_move_y;
  ni3858_xoff <= ni3852_best_move_x;

-- b128s1
  ti2750_piece_sizes <= r_best_move_piece(4 downto 0);
  ni2750_piece_sizes <= p_piece_sizes_imm2;
  ni3853_size <= ni2750_piece_sizes;
  ni3855_score_self <= add(r_score_self, ni3853_size);
  ni3856_size <= sub(ni3853_size, X"01");

-- b129s0
  ni3860_y <= add(r_yoff, X"01");
  ni3861_x <= r_xoff;
  ni3862_y1 <= add(r_yoff, X"01");
  ni3863_x1 <= add(r_xoff, X"01");
  ni3870_y <= sub(r_yoff, X"01");
  ni3871_x <= r_xoff;
  ni3872_y1 <= sub(r_yoff, X"01");
  ni3873_x1 <= sub(r_xoff, X"01");
  ni3880_y <= r_yoff;
  ni3881_x <= add(r_xoff, X"01");
  ni3882_y1 <= sub(r_yoff, X"01");
  ni3883_x1 <= add(r_xoff, X"01");
  ni3890_y <= r_yoff;
  ni3891_x <= sub(r_xoff, X"01");
  ni3892_y1 <= add(r_yoff, X"01");
  ni3893_x1 <= sub(r_xoff, X"01");
  ni3900_size <= sub(r_size, X"01");
  ni3901_suif_tmp47 <= "0000000000000000000000000000000" & cmp_less_s(ni3900_size, X"00");
  ni3859_r_e_g_0 <= add(shl(sign_ext(r_yoff, 10), 5), sign_ext(r_xoff, 10));
  ni6237877_r_e_g_1 <= sign_ext(ni3860_y, 10);
  ni6237880_r_e_g_2 <= sign_ext(ni3861_x, 10);
  ni6237881_r_e_g_3 <= sign_ext(ni3862_y1, 10);
  ni6237884_r_e_g_4 <= sign_ext(ni3863_x1, 10);
  ni6237885_r_e_g_5 <= sign_ext(ni3860_y, 10);
  ni6237888_r_e_g_6 <= sign_ext(ni3861_x, 10);
  ni6237889_r_e_g_7 <= sign_ext(ni3862_y1, 10);
  ni6237892_r_e_g_8 <= sign_ext(ni3863_x1, 10);
  ni6237893_r_e_g_9 <= sign_ext(ni3870_y, 10);
  ni6237896_r_e_g_10 <= sign_ext(ni3871_x, 10);
  ni6237897_r_e_g_11 <= sign_ext(ni3872_y1, 10);
  ni6237900_r_e_g_12 <= sign_ext(ni3873_x1, 10);
  ni6237901_r_e_g_13 <= sign_ext(ni3870_y, 10);
  ni6237904_r_e_g_14 <= sign_ext(ni3871_x, 10);
  ni6237905_r_e_g_15 <= sign_ext(ni3872_y1, 10);
  ni6237908_r_e_g_16 <= sign_ext(ni3873_x1, 10);
  ni6237909_r_e_g_17 <= sign_ext(ni3880_y, 10);
  ni6237912_r_e_g_18 <= sign_ext(ni3881_x, 10);
  ni6237913_r_e_g_19 <= sign_ext(ni3882_y1, 10);
  ni6237916_r_e_g_20 <= sign_ext(ni3883_x1, 10);
  ni6237917_r_e_g_21 <= sign_ext(ni3880_y, 10);
  ni6237920_r_e_g_22 <= sign_ext(ni3881_x, 10);
  ni6237921_r_e_g_23 <= sign_ext(ni3882_y1, 10);
  ni6237924_r_e_g_24 <= sign_ext(ni3883_x1, 10);

-- b129s1
  ni2784_board <= X"0d";

-- b129s2
  ni3865_r_e_g_0 <= add(shl(r_r_e_g_1, 5), r_r_e_g_2);
  ni3867_r_e_g_1 <= add(shl(r_r_e_g_3, 5), r_r_e_g_4);
  ni3868_r_e_g_2 <= add(shl(r_r_e_g_5, 5), r_r_e_g_6);

-- b129s3
  ni2817_board <= p_board_imm2;
  ni3864_board_t <= ni2817_board;
  ni2825_board <= p_board_imm;
  ni3866_board_t1 <= ni2825_board;
  ni2832_board <= ni3864_board_t or X"04";
  ni3869_r_e_g_0 <= add(shl(r_r_e_g_7, 5), r_r_e_g_8);

-- b129s4
  ni2848_board <= r_board_t1 or X"10";

-- b129s5
  ni3875_r_e_g_0 <= add(shl(r_r_e_g_9, 5), r_r_e_g_10);
  ni3877_r_e_g_1 <= add(shl(r_r_e_g_11, 5), r_r_e_g_12);
  ni3878_r_e_g_2 <= add(shl(r_r_e_g_13, 5), r_r_e_g_14);

-- b129s6
  ni2882_board <= p_board_imm2;
  ni3874_board_t <= ni2882_board;
  ni2890_board <= p_board_imm;
  ni3876_board_t1 <= ni2890_board;
  ni2897_board <= ni3874_board_t or X"04";
  ni3879_r_e_g_0 <= add(shl(r_r_e_g_15, 5), r_r_e_g_16);

-- b129s7
  ni2913_board <= r_board_t1 or X"10";

-- b129s8
  ni3885_r_e_g_0 <= add(shl(r_r_e_g_17, 5), r_r_e_g_18);
  ni3887_r_e_g_1 <= add(shl(r_r_e_g_19, 5), r_r_e_g_20);
  ni3888_r_e_g_2 <= add(shl(r_r_e_g_21, 5), r_r_e_g_22);

-- b129s9
  ni2947_board <= p_board_imm2;
  ni3884_board_t <= ni2947_board;
  ni2955_board <= p_board_imm;
  ni3886_board_t1 <= ni2955_board;
  ni2962_board <= ni3884_board_t or X"04";
  ni3889_r_e_g_0 <= add(shl(r_r_e_g_23, 5), r_r_e_g_24);

-- b129s10
  ni2978_board <= r_board_t1 or X"10";

-- b129s11
  ni3895_r_e_g_0 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));
  ni3897_r_e_g_1 <= add(shl(sign_ext(r_y1, 10), 5), sign_ext(r_x1, 10));
  ni3898_r_e_g_2 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));

-- b129s12
  ni3012_board <= p_board_imm2;
  ni3894_board_t <= ni3012_board;
  ni3020_board <= p_board_imm;
  ni3896_board_t1 <= ni3020_board;
  ni3027_board <= ni3894_board_t or X"04";
  ni3899_r_e_g_0 <= add(shl(sign_ext(r_y1, 10), 5), sign_ext(r_x1, 10));

-- b129s13
  ni3043_board <= r_board_t1 or X"10";

-- b129s14
  ni3903_r_e_g_0 <= add(shl(add(shl(sign_ext(r_best_move_piece, 10), 3), sign_ext(r_best_move_rotate, 10)), 2), sign_ext(r_size, 10));
  ni3905_r_e_g_1 <= add(shl(add(shl(sign_ext(r_best_move_piece, 10), 3), sign_ext(r_best_move_rotate, 10)), 2), sign_ext(r_size, 10));

-- b129s15
  ni3077_piece_y <= p_piece_y_imm2;
  ni3902_yoff <= add(r_best_move_y, ni3077_piece_y);
  ni3091_piece_x <= p_piece_x_imm2;
  ni3904_xoff <= add(r_best_move_x, ni3091_piece_x);

-- b130s0
  ni3907_m <= X"0a000000";
  ni3908_y <= X"00";

-- b131s0
  ni3911_x <= X"00";

-- b132s0
  ni3914_suif_tmp3_2 <= "0000000000000000000000000000000" & cmp_less_s(r_x, X"04");

-- b133s0
  ni3915_suif_tmp4_2 <= r_suif_tmp3_2;

-- b134s0
  ni3916_suif_tmp1_2 <= "0000000000000000000000000000000" & cmp_less_s(r_y, X"04");

-- b135s0
  ni3917_suif_tmp2_2 <= r_suif_tmp1_2;

-- b136s0
  ni3918_suif_tmp_3 <= "0000000000000000000000000000000" & cmp_less_s(X"11", r_x);

-- b137s0
  ni3919_suif_tmp0_2 <= r_suif_tmp_3;

-- b138s0
  ni3920_suif_tmp0_2 <= "0000000000000000000000000000000" & cmp_less_s(X"11", r_y);

-- b139s0
  ni3921_suif_tmp2_2 <= r_suif_tmp0_2;

-- b140s0
  ni3922_suif_tmp4_2 <= r_suif_tmp2_2;

-- b141s0
  ni3923_r_e_g_0 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));

-- b141s1
  ni3174_board <= X"0f";

-- b142s0
  ni3924_r_e_g_0 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));

-- b142s1
  ni3190_board <= X"00";

-- b143s0
  ni3925_x <= add(r_x, X"01");
  ni3926_suif_tmp50 <= "0000000000000000000000000000000" & cmp_less_s(ni3925_x, X"20");

-- b144s0
  ni3927_y <= add(r_y, X"01");
  ni3928_suif_tmp49 <= "0000000000000000000000000000000" & cmp_less_s(ni3927_y, X"20");

-- b145s0
  ni3929_avail_self <= X"7fffff";
  ni3930_avail_opp <= X"7fffff";
  ni3931_score_self <= X"00";
  ni3932_score_opp <= X"00";
  ni3933_timer_t <= X"02";
  ni3934_z <= X"00";

-- b146s0
  ni3938_z <= add(r_z, X"01");
  ni3939_suif_tmp51 <= "0000000000000000000000000000000" & cmp_less_s(ni3938_z, X"05");

-- b146s1
  ni3937_timer_t <= r_timer_input_stream;

-- b147s0

-- b148s0

-- 


  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b0s0 =>
        r_y <= ni3452_y;
      when b14s0 =>
        r_y <= ni3471_y;
      when b42s0 =>
        r_y <= ni3560_y;
      when b63s0 =>
        r_y <= ni3648_y;
      when b83s0 =>
        r_y <= ni3728_y;
      when b129s0 =>
        r_y <= ni3890_y;
      when b130s0 =>
        if (s_b130s0_en = '1') then
          r_y <= ni3908_y;
        end if;
      when b144s0 =>
        r_y <= ni3927_y;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b1s0 =>
        r_x <= ni3455_x;
      when b13s0 =>
        r_x <= ni3469_x;
      when b42s0 =>
        r_x <= ni3561_x;
      when b63s0 =>
        r_x <= ni3649_x;
      when b83s0 =>
        r_x <= ni3729_x;
      when b129s0 =>
        r_x <= ni3891_x;
      when b131s0 =>
        r_x <= ni3911_x;
      when b143s0 =>
        r_x <= ni3925_x;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b2s0 =>
        r_suif_tmp3 <= ni3458_suif_tmp3;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b3s0 =>
        r_suif_tmp4 <= ni3459_suif_tmp4;
      when b10s0 =>
        r_suif_tmp4 <= ni3466_suif_tmp4;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b4s0 =>
        r_suif_tmp10 <= ni3460_suif_tmp10;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b5s0 =>
        r_suif_tmp2 <= ni3461_suif_tmp2;
      when b9s0 =>
        r_suif_tmp2 <= ni3465_suif_tmp2;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b6s0 =>
        r_suif_tmp1 <= ni3462_suif_tmp1;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b7s0 =>
        r_suif_tmp00 <= ni3463_suif_tmp00;
      when b8s0 =>
        r_suif_tmp00 <= ni3464_suif_tmp00;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b11s0 =>
        r_r_e_g_0 <= ni3467_r_e_g_0;
      when b12s0 =>
        r_r_e_g_0 <= ni3468_r_e_g_0;
      when b42s0 =>
        r_r_e_g_0 <= ni3529_r_e_g_0;
      when b42s2 =>
        r_r_e_g_0 <= ni3535_r_e_g_0;
      when b42s3 =>
        r_r_e_g_0 <= ni3539_r_e_g_0;
      when b42s5 =>
        r_r_e_g_0 <= ni3545_r_e_g_0;
      when b42s6 =>
        r_r_e_g_0 <= ni3549_r_e_g_0;
      when b42s8 =>
        r_r_e_g_0 <= ni3555_r_e_g_0;
      when b42s9 =>
        r_r_e_g_0 <= ni3559_r_e_g_0;
      when b42s11 =>
        r_r_e_g_0 <= ni3565_r_e_g_0;
      when b42s12 =>
        r_r_e_g_0 <= ni3569_r_e_g_0;
      when b42s14 =>
        r_r_e_g_0 <= ni3573_r_e_g_0;
      when b63s0 =>
        r_r_e_g_0 <= ni3617_r_e_g_0;
      when b63s2 =>
        r_r_e_g_0 <= ni3623_r_e_g_0;
      when b63s3 =>
        r_r_e_g_0 <= ni3627_r_e_g_0;
      when b63s5 =>
        r_r_e_g_0 <= ni3633_r_e_g_0;
      when b63s6 =>
        r_r_e_g_0 <= ni3637_r_e_g_0;
      when b63s8 =>
        r_r_e_g_0 <= ni3643_r_e_g_0;
      when b63s9 =>
        r_r_e_g_0 <= ni3647_r_e_g_0;
      when b63s11 =>
        r_r_e_g_0 <= ni3653_r_e_g_0;
      when b63s12 =>
        r_r_e_g_0 <= ni3657_r_e_g_0;
      when b63s14 =>
        r_r_e_g_0 <= ni3661_r_e_g_0;
      when b83s0 =>
        r_r_e_g_0 <= ni3697_r_e_g_0;
      when b83s2 =>
        r_r_e_g_0 <= ni3703_r_e_g_0;
      when b83s3 =>
        r_r_e_g_0 <= ni3707_r_e_g_0;
      when b83s5 =>
        r_r_e_g_0 <= ni3713_r_e_g_0;
      when b83s6 =>
        r_r_e_g_0 <= ni3717_r_e_g_0;
      when b83s8 =>
        r_r_e_g_0 <= ni3723_r_e_g_0;
      when b83s9 =>
        r_r_e_g_0 <= ni3727_r_e_g_0;
      when b83s11 =>
        r_r_e_g_0 <= ni3733_r_e_g_0;
      when b83s12 =>
        r_r_e_g_0 <= ni3737_r_e_g_0;
      when b83s14 =>
        r_r_e_g_0 <= ni3741_r_e_g_0;
      when b91s0 =>
        r_r_e_g_0 <= ni3766_r_e_g_0;
      when b129s0 =>
        r_r_e_g_0 <= ni3859_r_e_g_0;
      when b129s2 =>
        r_r_e_g_0 <= ni3865_r_e_g_0;
      when b129s3 =>
        r_r_e_g_0 <= ni3869_r_e_g_0;
      when b129s5 =>
        r_r_e_g_0 <= ni3875_r_e_g_0;
      when b129s6 =>
        r_r_e_g_0 <= ni3879_r_e_g_0;
      when b129s8 =>
        r_r_e_g_0 <= ni3885_r_e_g_0;
      when b129s9 =>
        r_r_e_g_0 <= ni3889_r_e_g_0;
      when b129s11 =>
        r_r_e_g_0 <= ni3895_r_e_g_0;
      when b129s12 =>
        r_r_e_g_0 <= ni3899_r_e_g_0;
      when b129s14 =>
        r_r_e_g_0 <= ni3903_r_e_g_0;
      when b141s0 =>
        r_r_e_g_0 <= ni3923_r_e_g_0;
      when b142s0 =>
        r_r_e_g_0 <= ni3924_r_e_g_0;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b13s0 =>
        r_suif_tmp0 <= ni3470_suif_tmp0;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b14s0 =>
        r_suif_tmp <= ni3472_suif_tmp;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b15s0 =>
        r_avail_self <= ni3473_avail_self;
      when b41s0 =>
        if (s_b41s0_en = '1') then
          r_avail_self <= ni3524_avail_self;
        end if;
      when b128s0 =>
        if (s_b128s0_en = '1') then
          r_avail_self <= ni3854_avail_self;
        end if;
      when b145s0 =>
        if (s_b145s0_en = '1') then
          r_avail_self <= ni3929_avail_self;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b15s0 =>
        r_avail_opp <= ni3474_avail_opp;
      when b62s0 =>
        if (s_b62s0_en = '1') then
          r_avail_opp <= ni3612_avail_opp;
        end if;
      when b82s0 =>
        if (s_b82s0_en = '1') then
          r_avail_opp <= ni3692_avail_opp;
        end if;
      when b145s0 =>
        if (s_b145s0_en = '1') then
          r_avail_opp <= ni3930_avail_opp;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b15s0 =>
        r_score_self <= ni3475_score_self;
      when b41s1 =>
        r_score_self <= ni3525_score_self;
      when b128s1 =>
        r_score_self <= ni3855_score_self;
      when b145s0 =>
        if (s_b145s0_en = '1') then
          r_score_self <= ni3931_score_self;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b15s0 =>
        r_score_opp <= ni3476_score_opp;
      when b62s1 =>
        r_score_opp <= ni3613_score_opp;
      when b82s1 =>
        r_score_opp <= ni3693_score_opp;
      when b145s0 =>
        if (s_b145s0_en = '1') then
          r_score_opp <= ni3932_score_opp;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b15s0 =>
        r_temp_code <= ni3477_temp_code;
      when b17s0 =>
        r_temp_code <= ni3482_temp_code;
      when b18s0 =>
        r_temp_code <= ni3484_temp_code;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b16s1 =>
        r_input_code_0 <= ni3480_input_code_0;
      when b17s0 =>
        r_input_code_0 <= ni3483_input_code_0;
      when b21s1 =>
        r_input_code_0 <= ni3491_input_code_0;
      when b45s1 =>
        if (s_b45s1_en = '1') then
          r_input_code_0 <= ni3585_input_code_0;
        end if;
      when b65s1 =>
        if (s_b65s1_en = '1') then
          r_input_code_0 <= ni3665_input_code_0;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b16s1 =>
        r_suif_tmp5 <= ni3481_suif_tmp5;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b19s0 =>
        r_suif_tmp_0 <= ni3485_suif_tmp_0;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b19s0 =>
        r_suif_tmp6 <= ni3486_suif_tmp6;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b19s0 =>
        r_suif_tmp7 <= ni3490_suif_tmp7;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b19s0 =>
        r_suif_tmp12 <= ni3576_suif_tmp12;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b19s0 =>
        r_suif_tmp48 <= ni3906_suif_tmp48;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b19s0 =>
        r_switched <= ni6237963_switched;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s0 =>
        if (s_b20s0_en = '1') then
          r_response_code_0 <= ni3487_response_code_0;
        end if;
      when b22s0 =>
        r_response_code_0 <= ni3493_response_code_0;
      when b24s0 =>
        r_response_code_0 <= ni3498_response_code_0;
      when b120s0 =>
        r_response_code_0 <= ni3830_response_code_0;
      when b121s0 =>
        r_response_code_0 <= ni3835_response_code_0;
      when b124s0 =>
        r_response_code_0 <= ni3838_response_code_0;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s0 =>
        if (s_b20s0_en = '1') then
          r_response_code_1 <= ni3488_response_code_1;
        end if;
      when b22s0 =>
        r_response_code_1 <= ni3494_response_code_1;
      when b24s0 =>
        r_response_code_1 <= ni3499_response_code_1;
      when b120s0 =>
        r_response_code_1 <= ni3831_response_code_1;
      when b123s0 =>
        r_response_code_1 <= ni3837_response_code_1;
      when b124s0 =>
        r_response_code_1 <= ni3839_response_code_1;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s0 =>
        if (s_b20s0_en = '1') then
          r_response_code_2 <= ni3489_response_code_2;
        end if;
      when b22s0 =>
        r_response_code_2 <= ni3495_response_code_2;
      when b24s0 =>
        r_response_code_2 <= ni3500_response_code_2;
      when b120s0 =>
        r_response_code_2 <= ni3832_response_code_2;
      when b124s0 =>
        r_response_code_2 <= ni3840_response_code_2;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b21s1 =>
        r_suif_tmp8 <= ni3492_suif_tmp8;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b22s0 =>
        r_response_code_3 <= ni3496_response_code_3;
      when b24s0 =>
        r_response_code_3 <= ni3501_response_code_3;
      when b120s0 =>
        r_response_code_3 <= ni3833_response_code_3;
      when b124s0 =>
        r_response_code_3 <= ni3841_response_code_3;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b23s0 =>
        r_suif_tmp9 <= ni3497_suif_tmp9;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b25s0 =>
        if (s_b25s0_en = '1') then
          r_suif_tmp_1 <= ni3502_suif_tmp_1;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b26s0 =>
        r_suif_tmp0_0 <= ni3503_suif_tmp0_0;
      when b27s0 =>
        r_suif_tmp0_0 <= ni3504_suif_tmp0_0;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b28s0 =>
        r_m_x <= ni3505_m_x;
      when b32s0 =>
        r_m_x <= ni3509_m_x;
      when b41s0 =>
        if (s_b41s0_en = '1') then
          r_m_x <= ni3522_m_x;
        end if;
      when b48s0 =>
        r_m_x <= ni3592_m_x;
      when b52s0 =>
        r_m_x <= ni3596_m_x;
      when b62s0 =>
        if (s_b62s0_en = '1') then
          r_m_x <= ni3610_m_x;
        end if;
      when b68s0 =>
        r_m_x <= ni3672_m_x;
      when b72s0 =>
        r_m_x <= ni3676_m_x;
      when b82s0 =>
        if (s_b82s0_en = '1') then
          r_m_x <= ni3690_m_x;
        end if;
      when b89s0 =>
        r_m_x <= ni3759_m_x;
      when b108s0 =>
        r_m_x <= ni3805_m_x;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b29s0 =>
        r_suif_tmp1_0 <= ni3506_suif_tmp1_0;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b30s0 =>
        r_suif_tmp2_0 <= ni3507_suif_tmp2_0;
      when b31s0 =>
        r_suif_tmp2_0 <= ni3508_suif_tmp2_0;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b33s0 =>
        r_suif_tmp3_0 <= ni3510_suif_tmp3_0;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b34s0 =>
        r_suif_tmp4_0 <= ni3511_suif_tmp4_0;
      when b35s0 =>
        r_suif_tmp4_0 <= ni3512_suif_tmp4_0;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b36s0 =>
        r_m_y <= ni3513_m_y;
      when b40s0 =>
        r_m_y <= ni3517_m_y;
      when b41s0 =>
        if (s_b41s0_en = '1') then
          r_m_y <= ni3521_m_y;
        end if;
      when b56s0 =>
        r_m_y <= ni3600_m_y;
      when b60s0 =>
        r_m_y <= ni3604_m_y;
      when b62s0 =>
        if (s_b62s0_en = '1') then
          r_m_y <= ni3609_m_y;
        end if;
      when b76s0 =>
        r_m_y <= ni3680_m_y;
      when b80s0 =>
        r_m_y <= ni3684_m_y;
      when b82s0 =>
        if (s_b82s0_en = '1') then
          r_m_y <= ni3689_m_y;
        end if;
      when b88s0 =>
        r_m_y <= ni3757_m_y;
      when b109s0 =>
        r_m_y <= ni3807_m_y;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b37s0 =>
        r_suif_tmp52 <= ni3514_suif_tmp52;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b38s0 =>
        r_suif_tmp60 <= ni3515_suif_tmp60;
      when b39s0 =>
        r_suif_tmp60 <= ni3516_suif_tmp60;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b41s0 =>
        if (s_b41s0_en = '1') then
          r_m_piece <= ni3518_m_piece;
        end if;
      when b61s0 =>
        r_m_piece <= ni3605_m_piece;
      when b81s0 =>
        r_m_piece <= ni3685_m_piece;
      when b86s0 =>
        r_m_piece <= ni3752_m_piece;
      when b111s0 =>
        r_m_piece <= ni3811_m_piece;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b41s0 =>
        if (s_b41s0_en = '1') then
          r_m_rotate <= ni3519_m_rotate;
        end if;
      when b61s0 =>
        r_m_rotate <= ni3606_m_rotate;
      when b81s0 =>
        r_m_rotate <= ni3686_m_rotate;
      when b87s0 =>
        r_m_rotate <= ni3755_m_rotate;
      when b110s0 =>
        r_m_rotate <= ni3809_m_rotate;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b41s0 =>
        if (s_b41s0_en = '1') then
          r_m <= ni3520_m;
        end if;
      when b62s0 =>
        if (s_b62s0_en = '1') then
          r_m <= ni3608_m;
        end if;
      when b82s0 =>
        if (s_b82s0_en = '1') then
          r_m <= ni3688_m;
        end if;
      when b93s0 =>
        r_m <= ni3777_m;
      when b128s0 =>
        if (s_b128s0_en = '1') then
          r_m <= ni3850_m;
        end if;
      when b130s0 =>
        if (s_b130s0_en = '1') then
          r_m <= ni3907_m;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b41s0 =>
        if (s_b41s0_en = '1') then
          r_yoff <= ni3527_yoff;
        end if;
      when b42s15 =>
        r_yoff <= ni3572_yoff;
      when b62s0 =>
        if (s_b62s0_en = '1') then
          r_yoff <= ni3615_yoff;
        end if;
      when b63s15 =>
        r_yoff <= ni3660_yoff;
      when b82s0 =>
        if (s_b82s0_en = '1') then
          r_yoff <= ni3695_yoff;
        end if;
      when b83s15 =>
        r_yoff <= ni3740_yoff;
      when b90s0 =>
        r_yoff <= ni3763_yoff;
      when b91s1 =>
        r_yoff <= ni3770_yoff;
      when b128s0 =>
        if (s_b128s0_en = '1') then
          r_yoff <= ni3857_yoff;
        end if;
      when b129s15 =>
        r_yoff <= ni3902_yoff;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b41s0 =>
        if (s_b41s0_en = '1') then
          r_xoff <= ni3528_xoff;
        end if;
      when b42s15 =>
        r_xoff <= ni3574_xoff;
      when b62s0 =>
        if (s_b62s0_en = '1') then
          r_xoff <= ni3616_xoff;
        end if;
      when b63s15 =>
        r_xoff <= ni3662_xoff;
      when b82s0 =>
        if (s_b82s0_en = '1') then
          r_xoff <= ni3696_xoff;
        end if;
      when b83s15 =>
        r_xoff <= ni3742_xoff;
      when b90s0 =>
        r_xoff <= ni3764_xoff;
      when b91s1 =>
        r_xoff <= ni3772_xoff;
      when b128s0 =>
        if (s_b128s0_en = '1') then
          r_xoff <= ni3858_xoff;
        end if;
      when b129s15 =>
        r_xoff <= ni3904_xoff;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b41s1 =>
        r_size <= ni3526_size;
      when b42s0 =>
        r_size <= ni3570_size;
      when b62s1 =>
        r_size <= ni3614_size;
      when b63s0 =>
        r_size <= ni3658_size;
      when b82s1 =>
        r_size <= ni3694_size;
      when b83s0 =>
        r_size <= ni3738_size;
      when b90s1 =>
        r_size <= ni3762_size;
      when b91s0 =>
        r_size <= ni3769_size;
      when b128s1 =>
        r_size <= ni3856_size;
      when b129s0 =>
        r_size <= ni3900_size;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b42s0 =>
        r_y1 <= ni3562_y1;
      when b63s0 =>
        r_y1 <= ni3650_y1;
      when b83s0 =>
        r_y1 <= ni3730_y1;
      when b129s0 =>
        r_y1 <= ni3892_y1;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b42s0 =>
        r_x1 <= ni3563_x1;
      when b63s0 =>
        r_x1 <= ni3651_x1;
      when b83s0 =>
        r_x1 <= ni3731_x1;
      when b129s0 =>
        r_x1 <= ni3893_x1;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b42s0 =>
        r_suif_tmp11 <= ni3571_suif_tmp11;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b42s0 =>
        r_r_e_g_1 <= ni6237613_r_e_g_1;
      when b42s2 =>
        r_r_e_g_1 <= ni3537_r_e_g_1;
      when b42s5 =>
        r_r_e_g_1 <= ni3547_r_e_g_1;
      when b42s8 =>
        r_r_e_g_1 <= ni3557_r_e_g_1;
      when b42s11 =>
        r_r_e_g_1 <= ni3567_r_e_g_1;
      when b42s14 =>
        r_r_e_g_1 <= ni3575_r_e_g_1;
      when b63s0 =>
        r_r_e_g_1 <= ni6237695_r_e_g_1;
      when b63s2 =>
        r_r_e_g_1 <= ni3625_r_e_g_1;
      when b63s5 =>
        r_r_e_g_1 <= ni3635_r_e_g_1;
      when b63s8 =>
        r_r_e_g_1 <= ni3645_r_e_g_1;
      when b63s11 =>
        r_r_e_g_1 <= ni3655_r_e_g_1;
      when b63s14 =>
        r_r_e_g_1 <= ni3663_r_e_g_1;
      when b83s0 =>
        r_r_e_g_1 <= ni6237777_r_e_g_1;
      when b83s2 =>
        r_r_e_g_1 <= ni3705_r_e_g_1;
      when b83s5 =>
        r_r_e_g_1 <= ni3715_r_e_g_1;
      when b83s8 =>
        r_r_e_g_1 <= ni3725_r_e_g_1;
      when b83s11 =>
        r_r_e_g_1 <= ni3735_r_e_g_1;
      when b83s14 =>
        r_r_e_g_1 <= ni3743_r_e_g_1;
      when b91s0 =>
        r_r_e_g_1 <= ni3771_r_e_g_1;
      when b129s0 =>
        r_r_e_g_1 <= ni6237877_r_e_g_1;
      when b129s2 =>
        r_r_e_g_1 <= ni3867_r_e_g_1;
      when b129s5 =>
        r_r_e_g_1 <= ni3877_r_e_g_1;
      when b129s8 =>
        r_r_e_g_1 <= ni3887_r_e_g_1;
      when b129s11 =>
        r_r_e_g_1 <= ni3897_r_e_g_1;
      when b129s14 =>
        r_r_e_g_1 <= ni3905_r_e_g_1;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b42s0 =>
        r_r_e_g_2 <= ni6237616_r_e_g_2;
      when b42s2 =>
        r_r_e_g_2 <= ni3538_r_e_g_2;
      when b42s5 =>
        r_r_e_g_2 <= ni3548_r_e_g_2;
      when b42s8 =>
        r_r_e_g_2 <= ni3558_r_e_g_2;
      when b42s11 =>
        r_r_e_g_2 <= ni3568_r_e_g_2;
      when b63s0 =>
        r_r_e_g_2 <= ni6237698_r_e_g_2;
      when b63s2 =>
        r_r_e_g_2 <= ni3626_r_e_g_2;
      when b63s5 =>
        r_r_e_g_2 <= ni3636_r_e_g_2;
      when b63s8 =>
        r_r_e_g_2 <= ni3646_r_e_g_2;
      when b63s11 =>
        r_r_e_g_2 <= ni3656_r_e_g_2;
      when b83s0 =>
        r_r_e_g_2 <= ni6237780_r_e_g_2;
      when b83s2 =>
        r_r_e_g_2 <= ni3706_r_e_g_2;
      when b83s5 =>
        r_r_e_g_2 <= ni3716_r_e_g_2;
      when b83s8 =>
        r_r_e_g_2 <= ni3726_r_e_g_2;
      when b83s11 =>
        r_r_e_g_2 <= ni3736_r_e_g_2;
      when b91s0 =>
        r_r_e_g_2 <= ni3773_r_e_g_2;
      when b129s0 =>
        r_r_e_g_2 <= ni6237880_r_e_g_2;
      when b129s2 =>
        r_r_e_g_2 <= ni3868_r_e_g_2;
      when b129s5 =>
        r_r_e_g_2 <= ni3878_r_e_g_2;
      when b129s8 =>
        r_r_e_g_2 <= ni3888_r_e_g_2;
      when b129s11 =>
        r_r_e_g_2 <= ni3898_r_e_g_2;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b42s0 =>
        r_r_e_g_3 <= ni6237617_r_e_g_3;
      when b63s0 =>
        r_r_e_g_3 <= ni6237699_r_e_g_3;
      when b83s0 =>
        r_r_e_g_3 <= ni6237781_r_e_g_3;
      when b129s0 =>
        r_r_e_g_3 <= ni6237881_r_e_g_3;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b42s0 =>
        r_r_e_g_4 <= ni6237620_r_e_g_4;
      when b63s0 =>
        r_r_e_g_4 <= ni6237702_r_e_g_4;
      when b83s0 =>
        r_r_e_g_4 <= ni6237784_r_e_g_4;
      when b129s0 =>
        r_r_e_g_4 <= ni6237884_r_e_g_4;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b42s0 =>
        r_r_e_g_5 <= ni6237621_r_e_g_5;
      when b63s0 =>
        r_r_e_g_5 <= ni6237703_r_e_g_5;
      when b83s0 =>
        r_r_e_g_5 <= ni6237785_r_e_g_5;
      when b129s0 =>
        r_r_e_g_5 <= ni6237885_r_e_g_5;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b42s0 =>
        r_r_e_g_6 <= ni6237624_r_e_g_6;
      when b63s0 =>
        r_r_e_g_6 <= ni6237706_r_e_g_6;
      when b83s0 =>
        r_r_e_g_6 <= ni6237788_r_e_g_6;
      when b129s0 =>
        r_r_e_g_6 <= ni6237888_r_e_g_6;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b42s0 =>
        r_r_e_g_7 <= ni6237625_r_e_g_7;
      when b63s0 =>
        r_r_e_g_7 <= ni6237707_r_e_g_7;
      when b83s0 =>
        r_r_e_g_7 <= ni6237789_r_e_g_7;
      when b129s0 =>
        r_r_e_g_7 <= ni6237889_r_e_g_7;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b42s0 =>
        r_r_e_g_8 <= ni6237628_r_e_g_8;
      when b63s0 =>
        r_r_e_g_8 <= ni6237710_r_e_g_8;
      when b83s0 =>
        r_r_e_g_8 <= ni6237792_r_e_g_8;
      when b129s0 =>
        r_r_e_g_8 <= ni6237892_r_e_g_8;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b42s0 =>
        r_r_e_g_9 <= ni6237629_r_e_g_9;
      when b63s0 =>
        r_r_e_g_9 <= ni6237711_r_e_g_9;
      when b83s0 =>
        r_r_e_g_9 <= ni6237793_r_e_g_9;
      when b129s0 =>
        r_r_e_g_9 <= ni6237893_r_e_g_9;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b42s0 =>
        r_r_e_g_10 <= ni6237632_r_e_g_10;
      when b63s0 =>
        r_r_e_g_10 <= ni6237714_r_e_g_10;
      when b83s0 =>
        r_r_e_g_10 <= ni6237796_r_e_g_10;
      when b129s0 =>
        r_r_e_g_10 <= ni6237896_r_e_g_10;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b42s0 =>
        r_r_e_g_11 <= ni6237633_r_e_g_11;
      when b63s0 =>
        r_r_e_g_11 <= ni6237715_r_e_g_11;
      when b83s0 =>
        r_r_e_g_11 <= ni6237797_r_e_g_11;
      when b129s0 =>
        r_r_e_g_11 <= ni6237897_r_e_g_11;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b42s0 =>
        r_r_e_g_12 <= ni6237636_r_e_g_12;
      when b63s0 =>
        r_r_e_g_12 <= ni6237718_r_e_g_12;
      when b83s0 =>
        r_r_e_g_12 <= ni6237800_r_e_g_12;
      when b129s0 =>
        r_r_e_g_12 <= ni6237900_r_e_g_12;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b42s0 =>
        r_r_e_g_13 <= ni6237637_r_e_g_13;
      when b63s0 =>
        r_r_e_g_13 <= ni6237719_r_e_g_13;
      when b83s0 =>
        r_r_e_g_13 <= ni6237801_r_e_g_13;
      when b129s0 =>
        r_r_e_g_13 <= ni6237901_r_e_g_13;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b42s0 =>
        r_r_e_g_14 <= ni6237640_r_e_g_14;
      when b63s0 =>
        r_r_e_g_14 <= ni6237722_r_e_g_14;
      when b83s0 =>
        r_r_e_g_14 <= ni6237804_r_e_g_14;
      when b129s0 =>
        r_r_e_g_14 <= ni6237904_r_e_g_14;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b42s0 =>
        r_r_e_g_15 <= ni6237641_r_e_g_15;
      when b63s0 =>
        r_r_e_g_15 <= ni6237723_r_e_g_15;
      when b83s0 =>
        r_r_e_g_15 <= ni6237805_r_e_g_15;
      when b129s0 =>
        r_r_e_g_15 <= ni6237905_r_e_g_15;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b42s0 =>
        r_r_e_g_16 <= ni6237644_r_e_g_16;
      when b63s0 =>
        r_r_e_g_16 <= ni6237726_r_e_g_16;
      when b83s0 =>
        r_r_e_g_16 <= ni6237808_r_e_g_16;
      when b129s0 =>
        r_r_e_g_16 <= ni6237908_r_e_g_16;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b42s0 =>
        r_r_e_g_17 <= ni6237645_r_e_g_17;
      when b63s0 =>
        r_r_e_g_17 <= ni6237727_r_e_g_17;
      when b83s0 =>
        r_r_e_g_17 <= ni6237809_r_e_g_17;
      when b129s0 =>
        r_r_e_g_17 <= ni6237909_r_e_g_17;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b42s0 =>
        r_r_e_g_18 <= ni6237648_r_e_g_18;
      when b63s0 =>
        r_r_e_g_18 <= ni6237730_r_e_g_18;
      when b83s0 =>
        r_r_e_g_18 <= ni6237812_r_e_g_18;
      when b129s0 =>
        r_r_e_g_18 <= ni6237912_r_e_g_18;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b42s0 =>
        r_r_e_g_19 <= ni6237649_r_e_g_19;
      when b63s0 =>
        r_r_e_g_19 <= ni6237731_r_e_g_19;
      when b83s0 =>
        r_r_e_g_19 <= ni6237813_r_e_g_19;
      when b129s0 =>
        r_r_e_g_19 <= ni6237913_r_e_g_19;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b42s0 =>
        r_r_e_g_20 <= ni6237652_r_e_g_20;
      when b63s0 =>
        r_r_e_g_20 <= ni6237734_r_e_g_20;
      when b83s0 =>
        r_r_e_g_20 <= ni6237816_r_e_g_20;
      when b129s0 =>
        r_r_e_g_20 <= ni6237916_r_e_g_20;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b42s0 =>
        r_r_e_g_21 <= ni6237653_r_e_g_21;
      when b63s0 =>
        r_r_e_g_21 <= ni6237735_r_e_g_21;
      when b83s0 =>
        r_r_e_g_21 <= ni6237817_r_e_g_21;
      when b129s0 =>
        r_r_e_g_21 <= ni6237917_r_e_g_21;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b42s0 =>
        r_r_e_g_22 <= ni6237656_r_e_g_22;
      when b63s0 =>
        r_r_e_g_22 <= ni6237738_r_e_g_22;
      when b83s0 =>
        r_r_e_g_22 <= ni6237820_r_e_g_22;
      when b129s0 =>
        r_r_e_g_22 <= ni6237920_r_e_g_22;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b42s0 =>
        r_r_e_g_23 <= ni6237657_r_e_g_23;
      when b63s0 =>
        r_r_e_g_23 <= ni6237739_r_e_g_23;
      when b83s0 =>
        r_r_e_g_23 <= ni6237821_r_e_g_23;
      when b129s0 =>
        r_r_e_g_23 <= ni6237921_r_e_g_23;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b42s0 =>
        r_r_e_g_24 <= ni6237660_r_e_g_24;
      when b63s0 =>
        r_r_e_g_24 <= ni6237742_r_e_g_24;
      when b83s0 =>
        r_r_e_g_24 <= ni6237824_r_e_g_24;
      when b129s0 =>
        r_r_e_g_24 <= ni6237924_r_e_g_24;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b42s3 =>
        r_board_t <= ni3534_board_t;
      when b42s6 =>
        r_board_t <= ni3544_board_t;
      when b42s9 =>
        r_board_t <= ni3554_board_t;
      when b42s12 =>
        r_board_t <= ni3564_board_t;
      when b63s3 =>
        r_board_t <= ni3622_board_t;
      when b63s6 =>
        r_board_t <= ni3632_board_t;
      when b63s9 =>
        r_board_t <= ni3642_board_t;
      when b63s12 =>
        r_board_t <= ni3652_board_t;
      when b83s3 =>
        r_board_t <= ni3702_board_t;
      when b83s6 =>
        r_board_t <= ni3712_board_t;
      when b83s9 =>
        r_board_t <= ni3722_board_t;
      when b83s12 =>
        r_board_t <= ni3732_board_t;
      when b91s1 =>
        r_board_t <= ni3765_board_t;
      when b129s3 =>
        r_board_t <= ni3864_board_t;
      when b129s6 =>
        r_board_t <= ni3874_board_t;
      when b129s9 =>
        r_board_t <= ni3884_board_t;
      when b129s12 =>
        r_board_t <= ni3894_board_t;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b42s3 =>
        r_board_t1 <= ni3536_board_t1;
      when b42s6 =>
        r_board_t1 <= ni3546_board_t1;
      when b42s9 =>
        r_board_t1 <= ni3556_board_t1;
      when b42s12 =>
        r_board_t1 <= ni3566_board_t1;
      when b63s3 =>
        r_board_t1 <= ni3624_board_t1;
      when b63s6 =>
        r_board_t1 <= ni3634_board_t1;
      when b63s9 =>
        r_board_t1 <= ni3644_board_t1;
      when b63s12 =>
        r_board_t1 <= ni3654_board_t1;
      when b83s3 =>
        r_board_t1 <= ni3704_board_t1;
      when b83s6 =>
        r_board_t1 <= ni3714_board_t1;
      when b83s9 =>
        r_board_t1 <= ni3724_board_t1;
      when b83s12 =>
        r_board_t1 <= ni3734_board_t1;
      when b129s3 =>
        r_board_t1 <= ni3866_board_t1;
      when b129s6 =>
        r_board_t1 <= ni3876_board_t1;
      when b129s9 =>
        r_board_t1 <= ni3886_board_t1;
      when b129s12 =>
        r_board_t1 <= ni3896_board_t1;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b43s0 =>
        if (s_b43s0_en = '1') then
          r_time_rem <= ni3577_time_rem;
        end if;
      when b105s0 =>
        if (s_b105s0_en = '1') then
          r_time_rem <= ni3796_time_rem;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b43s0 =>
        if (s_b43s0_en = '1') then
          r_timer_t <= ni3578_timer_t;
        end if;
      when b44s1 =>
        r_timer_t <= ni3582_timer_t;
      when b104s1 =>
        r_timer_t <= ni3795_timer_t;
      when b105s0 =>
        if (s_b105s0_en = '1') then
          r_timer_t <= ni3797_timer_t;
        end if;
      when b125s0 =>
        if (s_b125s0_en = '1') then
          r_timer_t <= ni3842_timer_t;
        end if;
      when b126s1 =>
        r_timer_t <= ni3846_timer_t;
      when b145s0 =>
        if (s_b145s0_en = '1') then
          r_timer_t <= ni3933_timer_t;
        end if;
      when b146s1 =>
        r_timer_t <= ni3937_timer_t;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b43s0 =>
        if (s_b43s0_en = '1') then
          r_z <= ni3579_z;
        end if;
      when b44s0 =>
        r_z <= ni3583_z;
      when b125s0 =>
        if (s_b125s0_en = '1') then
          r_z <= ni3843_z;
        end if;
      when b126s0 =>
        r_z <= ni3847_z;
      when b145s0 =>
        if (s_b145s0_en = '1') then
          r_z <= ni3934_z;
        end if;
      when b146s0 =>
        r_z <= ni3938_z;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b44s0 =>
        r_suif_tmp13 <= ni3584_suif_tmp13;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b45s1 =>
        if (s_b45s1_en = '1') then
          r_suif_tmp80 <= ni3589_suif_tmp80;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b45s2 =>
        if (s_b45s2_en = '1') then
          r_input_code_1 <= ni3586_input_code_1;
        end if;
      when b65s2 =>
        if (s_b65s2_en = '1') then
          r_input_code_1 <= ni3666_input_code_1;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b45s3 =>
        if (s_b45s3_en = '1') then
          r_input_code_2 <= ni3587_input_code_2;
        end if;
      when b65s3 =>
        if (s_b65s3_en = '1') then
          r_input_code_2 <= ni3667_input_code_2;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b45s4 =>
        r_input_code_3 <= ni3588_input_code_3;
      when b65s4 =>
        r_input_code_3 <= ni3668_input_code_3;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b46s0 =>
        r_suif_tmp90 <= ni3590_suif_tmp90;
      when b47s0 =>
        r_suif_tmp90 <= ni3591_suif_tmp90;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b49s0 =>
        r_suif_tmp100 <= ni3593_suif_tmp100;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b50s0 =>
        r_suif_tmp110 <= ni3594_suif_tmp110;
      when b51s0 =>
        r_suif_tmp110 <= ni3595_suif_tmp110;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b53s0 =>
        r_suif_tmp120 <= ni3597_suif_tmp120;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b54s0 =>
        r_suif_tmp130 <= ni3598_suif_tmp130;
      when b55s0 =>
        r_suif_tmp130 <= ni3599_suif_tmp130;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b57s0 =>
        r_suif_tmp140 <= ni3601_suif_tmp140;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b58s0 =>
        r_suif_tmp150 <= ni3602_suif_tmp150;
      when b59s0 =>
        r_suif_tmp150 <= ni3603_suif_tmp150;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b61s0 =>
        r_suif_tmp14 <= ni3607_suif_tmp14;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b63s0 =>
        r_suif_tmp15 <= ni3659_suif_tmp15;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b64s0 =>
        r_suif_tmp16 <= ni3664_suif_tmp16;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b65s1 =>
        if (s_b65s1_en = '1') then
          r_suif_tmp_2 <= ni3669_suif_tmp_2;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b66s0 =>
        r_suif_tmp0_1 <= ni3670_suif_tmp0_1;
      when b67s0 =>
        r_suif_tmp0_1 <= ni3671_suif_tmp0_1;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b69s0 =>
        r_suif_tmp1_1 <= ni3673_suif_tmp1_1;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b70s0 =>
        r_suif_tmp2_1 <= ni3674_suif_tmp2_1;
      when b71s0 =>
        r_suif_tmp2_1 <= ni3675_suif_tmp2_1;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b73s0 =>
        r_suif_tmp3_1 <= ni3677_suif_tmp3_1;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b74s0 =>
        r_suif_tmp4_1 <= ni3678_suif_tmp4_1;
      when b75s0 =>
        r_suif_tmp4_1 <= ni3679_suif_tmp4_1;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b77s0 =>
        r_suif_tmp5_0 <= ni3681_suif_tmp5_0;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b78s0 =>
        r_suif_tmp6_0 <= ni3682_suif_tmp6_0;
      when b79s0 =>
        r_suif_tmp6_0 <= ni3683_suif_tmp6_0;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b81s0 =>
        r_suif_tmp17 <= ni3687_suif_tmp17;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b83s0 =>
        r_suif_tmp18 <= ni3739_suif_tmp18;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b84s0 =>
        r_moves_found <= ni3744_moves_found;
      when b93s0 =>
        r_moves_found <= ni3776_moves_found;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b84s0 =>
        r_alpha <= ni3745_alpha;
      when b107s0 =>
        r_alpha <= ni3804_alpha;
      when b118s0 =>
        r_alpha <= ni3828_alpha;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b84s0 =>
        r_m_piece_min <= ni3746_m_piece_min;
      when b85s0 =>
        r_m_piece_min <= ni3748_m_piece_min;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b84s0 =>
        r_suif_tmp19 <= ni3747_suif_tmp19;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b86s0 =>
        r_state <= ni3749_state;
      when b98s0 =>
        r_state <= ni3787_state;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b86s0 =>
        r_count <= ni3750_count;
      when b95s0 =>
        if (s_b95s0_en = '1') then
          r_count <= ni3781_count;
        end if;
      when b97s0 =>
        if (s_b97s0_en = '1') then
          r_count <= ni3784_count;
        end if;
      when b114s0 =>
        r_count <= ni3818_count;
      when b116s0 =>
        r_count <= ni3821_count;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b86s0 =>
        r_next_stream <= ni3751_next_stream;
      when b95s0 =>
        if (s_b95s0_en = '1') then
          r_next_stream <= ni3782_next_stream;
        end if;
      when b97s0 =>
        if (s_b97s0_en = '1') then
          r_next_stream <= ni3785_next_stream;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b86s0 =>
        r_suif_tmp20 <= ni3753_suif_tmp20;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b87s0 =>
        r_avail <= ni3754_avail;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b87s0 =>
        r_suif_tmp22 <= ni3756_suif_tmp22;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b88s0 =>
        r_suif_tmp24 <= ni3758_suif_tmp24;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b89s0 =>
        r_suif_tmp26 <= ni3760_suif_tmp26;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b90s0 =>
        r_lib_check <= ni3761_lib_check;
      when b91s1 =>
        r_lib_check <= ni3768_lib_check;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b91s1 =>
        r_move_valid <= ni3767_move_valid;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b91s1 =>
        r_suif_tmp28 <= ni3774_suif_tmp28;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b92s0 =>
        r_suif_tmp29 <= ni3775_suif_tmp29;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b93s0 =>
        r_m1 <= ni3778_m1;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b93s0 =>
        r_suif_tmp30 <= ni3779_suif_tmp30;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b94s0 =>
        r_suif_tmp31 <= ni3780_suif_tmp31;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b96s0 =>
        r_suif_tmp32 <= ni3783_suif_tmp32;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b97s0 =>
        if (s_b97s0_en = '1') then
          r_suif_tmp33 <= ni3786_suif_tmp33;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b100s0 =>
        r_r_e_g_25 <= ni2271_r_e_g_25;
      when b102s0 =>
        r_r_e_g_25 <= ni2296_r_e_g_25;
      when b104s0 =>
        r_r_e_g_25 <= ni2321_r_e_g_25;
      when b113s0 =>
        r_r_e_g_25 <= ni2487_r_e_g_25;
      when b115s0 =>
        r_r_e_g_25 <= ni2505_r_e_g_25;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b100s1 =>
        r_m_recv <= ni3791_m_recv;
      when b102s1 =>
        r_m_recv <= ni3793_m_recv;
      when b113s1 =>
        r_m_recv <= ni3817_m_recv;
      when b115s1 =>
        r_m_recv <= ni3820_m_recv;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b100s1 =>
        r_suif_tmp34 <= ni3790_suif_tmp34;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b102s1 =>
        r_suif_tmp35 <= ni3792_suif_tmp35;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b104s1 =>
        r_suif_tmp36 <= ni3794_suif_tmp36;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b106s0 =>
        r_utility <= ni3798_utility;
      when b117s0 =>
        r_utility <= ni3822_utility;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b106s0 =>
        r_suif_tmp37 <= ni3799_suif_tmp37;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b107s0 =>
        r_best_move_x <= ni3800_best_move_x;
      when b118s0 =>
        r_best_move_x <= ni3824_best_move_x;
      when b128s0 =>
        if (s_b128s0_en = '1') then
          r_best_move_x <= ni3852_best_move_x;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b107s0 =>
        r_best_move_y <= ni3801_best_move_y;
      when b118s0 =>
        r_best_move_y <= ni3825_best_move_y;
      when b128s0 =>
        if (s_b128s0_en = '1') then
          r_best_move_y <= ni3851_best_move_y;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b107s0 =>
        r_best_move_piece <= ni3802_best_move_piece;
      when b118s0 =>
        r_best_move_piece <= ni3826_best_move_piece;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b107s0 =>
        r_best_move_rotate <= ni3803_best_move_rotate;
      when b118s0 =>
        r_best_move_rotate <= ni3827_best_move_rotate;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b108s0 =>
        r_suif_tmp27 <= ni3806_suif_tmp27;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b109s0 =>
        r_suif_tmp25 <= ni3808_suif_tmp25;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b110s0 =>
        r_suif_tmp23 <= ni3810_suif_tmp23;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b111s0 =>
        r_suif_tmp21 <= ni3812_suif_tmp21;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b112s0 =>
        r_suif_tmp38 <= ni3813_suif_tmp38;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b113s1 =>
        r_suif_tmp39 <= ni3816_suif_tmp39;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b115s1 =>
        r_suif_tmp40 <= ni3819_suif_tmp40;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b117s0 =>
        r_suif_tmp41 <= ni3823_suif_tmp41;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b119s0 =>
        r_suif_tmp42 <= ni3829_suif_tmp42;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b120s0 =>
        r_suif_tmp43 <= ni3834_suif_tmp43;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b122s0 =>
        r_suif_tmp44 <= ni3836_suif_tmp44;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b126s0 =>
        r_suif_tmp45 <= ni3848_suif_tmp45;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b127s0 =>
        r_suif_tmp46 <= ni3849_suif_tmp46;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b129s0 =>
        r_suif_tmp47 <= ni3901_suif_tmp47;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b132s0 =>
        r_suif_tmp3_2 <= ni3914_suif_tmp3_2;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b133s0 =>
        r_suif_tmp4_2 <= ni3915_suif_tmp4_2;
      when b140s0 =>
        r_suif_tmp4_2 <= ni3922_suif_tmp4_2;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b134s0 =>
        r_suif_tmp1_2 <= ni3916_suif_tmp1_2;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b135s0 =>
        r_suif_tmp2_2 <= ni3917_suif_tmp2_2;
      when b139s0 =>
        r_suif_tmp2_2 <= ni3921_suif_tmp2_2;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b136s0 =>
        r_suif_tmp_3 <= ni3918_suif_tmp_3;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b137s0 =>
        r_suif_tmp0_2 <= ni3919_suif_tmp0_2;
      when b138s0 =>
        r_suif_tmp0_2 <= ni3920_suif_tmp0_2;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b143s0 =>
        r_suif_tmp50 <= ni3926_suif_tmp50;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b144s0 =>
        r_suif_tmp49 <= ni3928_suif_tmp49;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b146s0 =>
        r_suif_tmp51 <= ni3939_suif_tmp51;
      when others =>
      end case;
    end if;
  end process;

-- "input_stream" interface signals
  process (clk)
  begin
    if (clk'event and clk='1') then
      if ((p_input_stream_en and p_input_stream_rdy) = '1') then
        r_input_stream <= p_input_stream_data;
      end if;
    end if;
  end process;

  p_input_stream_en <= 
    s_b16s0_en and not p_input_stream_eos when thisState = b16s0 else
    s_b21s0_en and not p_input_stream_eos when thisState = b21s0 else
    s_b45s0_en and not p_input_stream_eos when thisState = b45s0 else
    s_b45s1_en and not p_input_stream_eos when thisState = b45s1 else
    s_b45s2_en and not p_input_stream_eos when thisState = b45s2 else
    s_b45s3_en and not p_input_stream_eos when thisState = b45s3 else
    s_b65s0_en and not p_input_stream_eos when thisState = b65s0 else
    s_b65s1_en and not p_input_stream_eos when thisState = b65s1 else
    s_b65s2_en and not p_input_stream_eos when thisState = b65s2 else
    s_b65s3_en and not p_input_stream_eos when thisState = b65s3 else
    '0';

-- "output_stream" interface signals
  p_output_stream_en <= 
    s_b20s0_en when thisState = b20s0 else
    s_b20s1_en when thisState = b20s1 else
    s_b20s2_en when thisState = b20s2 else
    s_b25s0_en when thisState = b25s0 else
    s_b25s1_en when thisState = b25s1 else
    s_b25s2_en when thisState = b25s2 else
    s_b25s3_en when thisState = b25s3 else
    s_b125s0_en when thisState = b125s0 else
    s_b125s1_en when thisState = b125s1 else
    s_b125s2_en when thisState = b125s2 else
    s_b125s3_en when thisState = b125s3 else
    '0';
  p_output_stream_data <= 
    ni3487_response_code_0 when thisState = b20s0 else
    r_response_code_1 when thisState = b20s1 else
    r_response_code_2 when thisState = b20s2 else
    r_response_code_0 when thisState = b25s0 else
    r_response_code_1 when thisState = b25s1 else
    r_response_code_2 when thisState = b25s2 else
    r_response_code_3 when thisState = b25s3 else
    r_response_code_0 when thisState = b125s0 else
    r_response_code_1 when thisState = b125s1 else
    r_response_code_2 when thisState = b125s2 else
    r_response_code_3 when thisState = b125s3 else
    (others => 'X');
  p_output_stream_eos <= '0';

-- "stream1_move_output" interface signals
  p_stream1_move_output_en <= 
    s_b41s0_en when thisState = b41s0 else
    s_b62s0_en when thisState = b62s0 else
    s_b82s0_en when thisState = b82s0 else
    s_b95s0_en when thisState = b95s0 else
    s_b95s1_en when thisState = b95s1 else
    s_b101s0_en when thisState = b101s0 else
    s_b101s1_en when thisState = b101s1 else
    s_b128s0_en when thisState = b128s0 else
    s_b130s0_en when thisState = b130s0 else
    '0';
  p_stream1_move_output_data <= 
    ni3520_m when thisState = b41s0 else
    ni3608_m when thisState = b62s0 else
    ni3688_m when thisState = b82s0 else
    r_m when thisState = b95s0 else
    r_m1 when thisState = b95s1 else
    r_m when thisState = b101s0 else
    r_m1 when thisState = b101s1 else
    ni3850_m when thisState = b128s0 else
    ni3907_m when thisState = b130s0 else
    (others => 'X');
  p_stream1_move_output_eos <= '0';

-- "stream1_move_input" interface signals
  process (clk)
  begin
    if (clk'event and clk='1') then
      if ((p_stream1_move_input_en and p_stream1_move_input_rdy) = '1') then
        r_stream1_move_input <= p_stream1_move_input_data;
      end if;
    end if;
  end process;

  p_stream1_move_input_en <= 
    '1' and not p_stream1_move_input_eos when thisState = b100s0 else
    '1' and not p_stream1_move_input_eos when thisState = b113s0 else
    '0';

-- "stream2_move_output" interface signals
  p_stream2_move_output_en <= 
    s_b41s0_en when thisState = b41s0 else
    s_b62s0_en when thisState = b62s0 else
    s_b82s0_en when thisState = b82s0 else
    s_b97s0_en when thisState = b97s0 else
    s_b97s1_en when thisState = b97s1 else
    s_b103s0_en when thisState = b103s0 else
    s_b103s1_en when thisState = b103s1 else
    s_b128s0_en when thisState = b128s0 else
    s_b130s0_en when thisState = b130s0 else
    '0';
  p_stream2_move_output_data <= 
    ni3520_m when thisState = b41s0 else
    ni3608_m when thisState = b62s0 else
    ni3688_m when thisState = b82s0 else
    r_m when thisState = b97s0 else
    r_m1 when thisState = b97s1 else
    r_m when thisState = b103s0 else
    r_m1 when thisState = b103s1 else
    ni3850_m when thisState = b128s0 else
    ni3907_m when thisState = b130s0 else
    (others => 'X');
  p_stream2_move_output_eos <= '0';

-- "stream2_move_input" interface signals
  process (clk)
  begin
    if (clk'event and clk='1') then
      if ((p_stream2_move_input_en and p_stream2_move_input_rdy) = '1') then
        r_stream2_move_input <= p_stream2_move_input_data;
      end if;
    end if;
  end process;

  p_stream2_move_input_en <= 
    '1' and not p_stream2_move_input_eos when thisState = b102s0 else
    '1' and not p_stream2_move_input_eos when thisState = b115s0 else
    '0';

-- "timer_output_stream" interface signals
  p_timer_output_stream_en <= 
    s_b43s0_en when thisState = b43s0 else
    s_b105s0_en when thisState = b105s0 else
    s_b125s3_en when thisState = b125s3 else
    s_b145s0_en when thisState = b145s0 else
    '0';
  p_timer_output_stream_data <= 
    ni3578_timer_t when thisState = b43s0 else
    ni3797_timer_t when thisState = b105s0 else
    r_timer_t when thisState = b125s3 else
    ni3933_timer_t when thisState = b145s0 else
    (others => 'X');
  p_timer_output_stream_eos <= '0';

-- "timer_input_stream" interface signals
  process (clk)
  begin
    if (clk'event and clk='1') then
      if ((p_timer_input_stream_en and p_timer_input_stream_rdy) = '1') then
        r_timer_input_stream <= p_timer_input_stream_data;
      end if;
    end if;
  end process;

  p_timer_input_stream_en <= 
    '1' and not p_timer_input_stream_eos when thisState = b44s0 else
    '1' and not p_timer_input_stream_eos when thisState = b104s0 else
    '1' and not p_timer_input_stream_eos when thisState = b126s0 else
    '1' and not p_timer_input_stream_eos when thisState = b146s0 else
    '0';

-- "piece_sizes" memory signals
  ram_0: make_move_func_piece_sizes_RAM
    port map (
      rst => reset, 
      clk => clk, 
      we => p_piece_sizes_we, 
      w_addr => p_piece_sizes_waddr, 
      r_addr => p_piece_sizes_raddr, 
      din => p_piece_sizes_din, 
      dout => p_piece_sizes_dout);

  p_piece_sizes_raddr <= 
    ni3518_m_piece(4 downto 0) when thisState = b41s0 else
    r_m_piece(4 downto 0) when thisState = b62s0 else
    r_m_piece(4 downto 0) when thisState = b82s0 else
    r_m_piece(4 downto 0) when thisState = b90s0 else
    r_best_move_piece(4 downto 0) when thisState = b128s0 else
    (others => 'X');
  p_piece_sizes_re2 <= 
    newState when thisState = b41s1 else
    newState when thisState = b62s1 else
    newState when thisState = b82s1 else
    newState when thisState = b90s1 else
    newState when thisState = b128s1 else
    '0';
  p_piece_sizes_we <= '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (p_piece_sizes_re2 = '1') then
        r_piece_sizes <= p_piece_sizes_dout;
      end if;
    end if;
  end process;

  p_piece_sizes_imm2 <= 
    p_piece_sizes_dout when newState = '1' else
    r_piece_sizes;
-- "piece_y" memory signals
  ram_1: make_move_func_piece_y_RAM
    port map (
      rst => reset, 
      clk => clk, 
      we => p_piece_y_we, 
      w_addr => p_piece_y_waddr, 
      r_addr => p_piece_y_raddr, 
      din => p_piece_y_din, 
      dout => p_piece_y_dout);

  p_piece_y_raddr <= 
    ni3573_r_e_g_0 when thisState = b42s14 else
    ni3661_r_e_g_0 when thisState = b63s14 else
    ni3741_r_e_g_0 when thisState = b83s14 else
    ni3771_r_e_g_1 when thisState = b91s0 else
    ni3903_r_e_g_0 when thisState = b129s14 else
    (others => 'X');
  p_piece_y_re2 <= 
    newState when thisState = b42s15 else
    newState when thisState = b63s15 else
    newState when thisState = b83s15 else
    newState when thisState = b91s1 else
    newState when thisState = b129s15 else
    '0';
  p_piece_y_we <= '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (p_piece_y_re2 = '1') then
        r_piece_y <= p_piece_y_dout;
      end if;
    end if;
  end process;

  p_piece_y_imm2 <= 
    p_piece_y_dout when newState = '1' else
    r_piece_y;
-- "piece_x" memory signals
  ram_2: make_move_func_piece_x_RAM
    port map (
      rst => reset, 
      clk => clk, 
      we => p_piece_x_we, 
      w_addr => p_piece_x_waddr, 
      r_addr => p_piece_x_raddr, 
      din => p_piece_x_din, 
      dout => p_piece_x_dout);

  p_piece_x_raddr <= 
    ni3575_r_e_g_1 when thisState = b42s14 else
    ni3663_r_e_g_1 when thisState = b63s14 else
    ni3743_r_e_g_1 when thisState = b83s14 else
    ni3773_r_e_g_2 when thisState = b91s0 else
    ni3905_r_e_g_1 when thisState = b129s14 else
    (others => 'X');
  p_piece_x_re2 <= 
    newState when thisState = b42s15 else
    newState when thisState = b63s15 else
    newState when thisState = b83s15 else
    newState when thisState = b91s1 else
    newState when thisState = b129s15 else
    '0';
  p_piece_x_we <= '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (p_piece_x_re2 = '1') then
        r_piece_x <= p_piece_x_dout;
      end if;
    end if;
  end process;

  p_piece_x_imm2 <= 
    p_piece_x_dout when newState = '1' else
    r_piece_x;
-- "board" memory signals
  ram_3: make_move_func_board_RAM
    port map (
      rst => reset, 
      clk => clk, 
      we => p_board_we, 
      addr => p_board_addr, 
      addr2 => p_board_addr2, 
      din => p_board_din, 
      we2 => '0', 
      din2 => X"00", 
      dout => p_board_dout, 
      dout2 => p_board_dout2);

  p_board_addr <= 
    r_r_e_g_0 when thisState = b11s1 else
    r_r_e_g_0 when thisState = b12s1 else
    r_r_e_g_0 when thisState = b42s1 else
    ni3537_r_e_g_1 when thisState = b42s2 else
    r_r_e_g_2 when thisState = b42s3 else
    r_r_e_g_0 when thisState = b42s4 else
    ni3547_r_e_g_1 when thisState = b42s5 else
    r_r_e_g_2 when thisState = b42s6 else
    r_r_e_g_0 when thisState = b42s7 else
    ni3557_r_e_g_1 when thisState = b42s8 else
    r_r_e_g_2 when thisState = b42s9 else
    r_r_e_g_0 when thisState = b42s10 else
    ni3567_r_e_g_1 when thisState = b42s11 else
    r_r_e_g_2 when thisState = b42s12 else
    r_r_e_g_0 when thisState = b42s13 else
    r_r_e_g_0 when thisState = b63s1 else
    ni3625_r_e_g_1 when thisState = b63s2 else
    r_r_e_g_2 when thisState = b63s3 else
    r_r_e_g_0 when thisState = b63s4 else
    ni3635_r_e_g_1 when thisState = b63s5 else
    r_r_e_g_2 when thisState = b63s6 else
    r_r_e_g_0 when thisState = b63s7 else
    ni3645_r_e_g_1 when thisState = b63s8 else
    r_r_e_g_2 when thisState = b63s9 else
    r_r_e_g_0 when thisState = b63s10 else
    ni3655_r_e_g_1 when thisState = b63s11 else
    r_r_e_g_2 when thisState = b63s12 else
    r_r_e_g_0 when thisState = b63s13 else
    r_r_e_g_0 when thisState = b83s1 else
    ni3705_r_e_g_1 when thisState = b83s2 else
    r_r_e_g_2 when thisState = b83s3 else
    r_r_e_g_0 when thisState = b83s4 else
    ni3715_r_e_g_1 when thisState = b83s5 else
    r_r_e_g_2 when thisState = b83s6 else
    r_r_e_g_0 when thisState = b83s7 else
    ni3725_r_e_g_1 when thisState = b83s8 else
    r_r_e_g_2 when thisState = b83s9 else
    r_r_e_g_0 when thisState = b83s10 else
    ni3735_r_e_g_1 when thisState = b83s11 else
    r_r_e_g_2 when thisState = b83s12 else
    r_r_e_g_0 when thisState = b83s13 else
    r_r_e_g_0 when thisState = b129s1 else
    ni3867_r_e_g_1 when thisState = b129s2 else
    r_r_e_g_2 when thisState = b129s3 else
    r_r_e_g_0 when thisState = b129s4 else
    ni3877_r_e_g_1 when thisState = b129s5 else
    r_r_e_g_2 when thisState = b129s6 else
    r_r_e_g_0 when thisState = b129s7 else
    ni3887_r_e_g_1 when thisState = b129s8 else
    r_r_e_g_2 when thisState = b129s9 else
    r_r_e_g_0 when thisState = b129s10 else
    ni3897_r_e_g_1 when thisState = b129s11 else
    r_r_e_g_2 when thisState = b129s12 else
    r_r_e_g_0 when thisState = b129s13 else
    r_r_e_g_0 when thisState = b141s1 else
    r_r_e_g_0 when thisState = b142s1 else
    (others => 'X');
  p_board_re <= 
    newState when thisState = b42s3 else
    newState when thisState = b42s6 else
    newState when thisState = b42s9 else
    newState when thisState = b42s12 else
    newState when thisState = b63s3 else
    newState when thisState = b63s6 else
    newState when thisState = b63s9 else
    newState when thisState = b63s12 else
    newState when thisState = b83s3 else
    newState when thisState = b83s6 else
    newState when thisState = b83s9 else
    newState when thisState = b83s12 else
    newState when thisState = b129s3 else
    newState when thisState = b129s6 else
    newState when thisState = b129s9 else
    newState when thisState = b129s12 else
    '0';
  p_board_re2 <= 
    newState when thisState = b42s3 else
    newState when thisState = b42s6 else
    newState when thisState = b42s9 else
    newState when thisState = b42s12 else
    newState when thisState = b63s3 else
    newState when thisState = b63s6 else
    newState when thisState = b63s9 else
    newState when thisState = b63s12 else
    newState when thisState = b83s3 else
    newState when thisState = b83s6 else
    newState when thisState = b83s9 else
    newState when thisState = b83s12 else
    newState when thisState = b91s1 else
    newState when thisState = b129s3 else
    newState when thisState = b129s6 else
    newState when thisState = b129s9 else
    newState when thisState = b129s12 else
    '0';
  p_board_addr2 <= 
    ni3535_r_e_g_0 when thisState = b42s2 else
    ni3545_r_e_g_0 when thisState = b42s5 else
    ni3555_r_e_g_0 when thisState = b42s8 else
    ni3565_r_e_g_0 when thisState = b42s11 else
    ni3623_r_e_g_0 when thisState = b63s2 else
    ni3633_r_e_g_0 when thisState = b63s5 else
    ni3643_r_e_g_0 when thisState = b63s8 else
    ni3653_r_e_g_0 when thisState = b63s11 else
    ni3703_r_e_g_0 when thisState = b83s2 else
    ni3713_r_e_g_0 when thisState = b83s5 else
    ni3723_r_e_g_0 when thisState = b83s8 else
    ni3733_r_e_g_0 when thisState = b83s11 else
    ni3766_r_e_g_0 when thisState = b91s0 else
    ni3865_r_e_g_0 when thisState = b129s2 else
    ni3875_r_e_g_0 when thisState = b129s5 else
    ni3885_r_e_g_0 when thisState = b129s8 else
    ni3895_r_e_g_0 when thisState = b129s11 else
    (others => 'X');
  p_board_we <= 
    '1' when thisState = b11s1 else
    '1' when thisState = b12s1 else
    '1' when thisState = b42s1 else
    '1' when thisState = b42s3 else
    '1' when thisState = b42s4 else
    '1' when thisState = b42s6 else
    '1' when thisState = b42s7 else
    '1' when thisState = b42s9 else
    '1' when thisState = b42s10 else
    '1' when thisState = b42s12 else
    '1' when thisState = b42s13 else
    '1' when thisState = b63s1 else
    '1' when thisState = b63s3 else
    '1' when thisState = b63s4 else
    '1' when thisState = b63s6 else
    '1' when thisState = b63s7 else
    '1' when thisState = b63s9 else
    '1' when thisState = b63s10 else
    '1' when thisState = b63s12 else
    '1' when thisState = b63s13 else
    '1' when thisState = b83s1 else
    '1' when thisState = b83s3 else
    '1' when thisState = b83s4 else
    '1' when thisState = b83s6 else
    '1' when thisState = b83s7 else
    '1' when thisState = b83s9 else
    '1' when thisState = b83s10 else
    '1' when thisState = b83s12 else
    '1' when thisState = b83s13 else
    '1' when thisState = b129s1 else
    '1' when thisState = b129s3 else
    '1' when thisState = b129s4 else
    '1' when thisState = b129s6 else
    '1' when thisState = b129s7 else
    '1' when thisState = b129s9 else
    '1' when thisState = b129s10 else
    '1' when thisState = b129s12 else
    '1' when thisState = b129s13 else
    '1' when thisState = b141s1 else
    '1' when thisState = b142s1 else
    '0';
  p_board_din <= 
    ni169_board when thisState = b11s1 else
    ni185_board when thisState = b12s1 else
    ni530_board when thisState = b42s1 else
    ni578_board when thisState = b42s3 else
    ni594_board when thisState = b42s4 else
    ni643_board when thisState = b42s6 else
    ni659_board when thisState = b42s7 else
    ni708_board when thisState = b42s9 else
    ni724_board when thisState = b42s10 else
    ni773_board when thisState = b42s12 else
    ni789_board when thisState = b42s13 else
    ni1088_board when thisState = b63s1 else
    ni1136_board when thisState = b63s3 else
    ni1152_board when thisState = b63s4 else
    ni1201_board when thisState = b63s6 else
    ni1217_board when thisState = b63s7 else
    ni1266_board when thisState = b63s9 else
    ni1282_board when thisState = b63s10 else
    ni1331_board when thisState = b63s12 else
    ni1347_board when thisState = b63s13 else
    ni1614_board when thisState = b83s1 else
    ni1662_board when thisState = b83s3 else
    ni1678_board when thisState = b83s4 else
    ni1727_board when thisState = b83s6 else
    ni1743_board when thisState = b83s7 else
    ni1792_board when thisState = b83s9 else
    ni1808_board when thisState = b83s10 else
    ni1857_board when thisState = b83s12 else
    ni1873_board when thisState = b83s13 else
    ni2784_board when thisState = b129s1 else
    ni2832_board when thisState = b129s3 else
    ni2848_board when thisState = b129s4 else
    ni2897_board when thisState = b129s6 else
    ni2913_board when thisState = b129s7 else
    ni2962_board when thisState = b129s9 else
    ni2978_board when thisState = b129s10 else
    ni3027_board when thisState = b129s12 else
    ni3043_board when thisState = b129s13 else
    ni3174_board when thisState = b141s1 else
    ni3190_board when thisState = b142s1 else
    (others => 'X');
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (p_board_re = '1') then
        r_board <= p_board_dout;
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (p_board_re2 = '1') then
        r2_board <= p_board_dout2;
      end if;
    end if;
  end process;

  p_board_imm <= 
    p_board_dout when newState = '1' else
    r_board;
  p_board_imm2 <= 
    p_board_dout2 when newState = '1' else
    r2_board;
end rtl;
library ieee;
use ieee.std_logic_1164.all;

use work.components.all;
    
entity timer_func is
  port (signal reset : in std_ulogic;
    signal sclk : in std_ulogic;
    signal clk : in std_ulogic;
    signal p_stream0_input_rdy : in std_ulogic;
    signal p_stream0_input_en : inout std_ulogic;
    signal p_stream0_input_eos : in std_ulogic;
    signal p_stream0_input_data : in std_ulogic_vector (7 downto 0);
    signal p_stream0_output_rdy : in std_ulogic;
    signal p_stream0_output_en : inout std_ulogic;
    signal p_stream0_output_eos : out std_ulogic;
    signal p_stream0_output_data : out std_ulogic_vector (7 downto 0));
end timer_func;

use work.external_components_hw_blokus_comp_vhd.all;
architecture rtl of timer_func is
  function mkvec(b : in std_ulogic) return std_ulogic_vector is
    variable res : std_ulogic_vector(0 downto 0);
  begin
    res(0):=b;
    return(res);
  end;

  type stateType is (init, b0s0, b1s0, b2s0, b2s1, b3s0, b4s0, b5s0, b6s0, b6s1, b7s0, b8s0, finished);
  signal thisState : stateType;
  signal nextState : stateType;
  signal stateEn : std_ulogic;
  signal newState : std_ulogic;
  signal r_stream0_input : std_ulogic_vector (7 downto 0);
  signal r_temp : std_ulogic_vector (7 downto 0);
  signal ni135_temp : std_ulogic_vector (7 downto 0);
  signal ni143_temp : std_ulogic_vector (7 downto 0);
  signal r_state : std_ulogic_vector (7 downto 0);
  signal ni128_state : std_ulogic_vector (7 downto 0);
  signal ni136_state : std_ulogic_vector (7 downto 0);
  signal ni140_state : std_ulogic_vector (7 downto 0);
  signal ni144_state : std_ulogic_vector (7 downto 0);
  signal ni145_state : std_ulogic_vector (7 downto 0);
  signal r_counter : std_ulogic_vector (31 downto 0);
  signal ni127_counter : std_ulogic_vector (31 downto 0);
  signal ni133_counter : std_ulogic_vector (31 downto 0);
  signal ni137_counter : std_ulogic_vector (31 downto 0);
  signal ni139_counter : std_ulogic_vector (31 downto 0);
  signal ni142_counter : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp : std_ulogic_vector (31 downto 0);
  signal ni132_suif_tmp : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp0 : std_ulogic_vector (31 downto 0);
  signal ni134_suif_tmp0 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp1 : std_ulogic_vector (31 downto 0);
  signal ni138_suif_tmp1 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp2 : std_ulogic_vector (31 downto 0);
  signal ni141_suif_tmp2 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp3 : std_ulogic_vector (31 downto 0);
  signal ni131_suif_tmp3 : std_ulogic_vector (31 downto 0);
  signal r_switched : std_ulogic_vector (0 downto 0);
  signal ni5212881_switched : std_ulogic_vector (0 downto 0);
  signal r_r_e_g_0 : std_ulogic_vector (1 downto 0);
  signal ni55_r_e_g_0 : std_ulogic_vector (1 downto 0);
  signal s_b5s0_en : std_ulogic;
  signal s_b6s0_en : std_ulogic;
begin
  process (clk,reset)
  begin
    if (reset='1') then
      thisState <= init;
    elsif (clk'event and clk='1') then
      if (stateEn = '1') then
        thisState <= nextState;
      end if;
    end if;
  end process;

  s_b5s0_en <= p_stream0_output_rdy;
  s_b6s0_en <= p_stream0_input_rdy;
  stateEn <= 
    '0' when thisState = b5s0 and s_b5s0_en = '0' else
    '0' when thisState = b6s0 and s_b6s0_en = '0' else
    '1';

  process (ni138_suif_tmp1,ni134_suif_tmp0,ni5212881_switched,ni141_suif_tmp2,ni132_suif_tmp,thisState)
  begin
    case thisState is
    when init =>
      nextState <= b0s0;
    when b0s0 =>
      nextState <= b1s0;
    when b1s0 =>
      if (ni132_suif_tmp(0) = '1') then
        nextState <= b2s0;
      elsif (ni141_suif_tmp2(0) = '1') then
        nextState <= b6s0;
      elsif ((not ni5212881_switched(0)) = '1') then
        nextState <= b7s0;
      else
        nextState <= b1s0;
      end if;
    when b2s0 =>
      nextState <= b2s1;
    when b2s1 =>
      if (ni134_suif_tmp0(0) = '1') then
        nextState <= b3s0;
      elsif ((not ni134_suif_tmp0(0)) = '1') then
        nextState <= b4s0;
      else
        nextState <= b2s1;
      end if;
    when b3s0 =>
      nextState <= b1s0;
    when b4s0 =>
      if (ni138_suif_tmp1(0) = '1') then
        nextState <= b5s0;
      elsif ((not ni138_suif_tmp1(0)) = '1') then
        nextState <= b1s0;
      else
        nextState <= b4s0;
      end if;
    when b5s0 =>
      nextState <= b1s0;
    when b6s0 =>
      nextState <= b6s1;
    when b6s1 =>
      nextState <= b1s0;
    when b7s0 =>
      nextState <= b1s0;
    when b8s0 =>
      nextState <= finished;
    when finished =>
      nextState <= finished;
    when others =>
      nextState <= init;
    end case;
  end process;

  process (clk,reset)
  begin
    if (reset='1') then
      newState <= '1';
    elsif (clk'event and clk='1') then
      newState <= stateEn;
    end if;
  end process;

-- b0s0
  ni127_counter <= X"00000000";
  ni128_state <= X"02";

-- b1s0
  ni131_suif_tmp3 <= sign_ext(r_state, 32);
  ni132_suif_tmp <= "0000000000000000000000000000000" & eq(ni131_suif_tmp3(7 downto 0), X"01");
  ni141_suif_tmp2 <= "0000000000000000000000000000000" & eq(ni131_suif_tmp3(7 downto 0), X"02");
  ni5212881_switched <= ni141_suif_tmp2(0 downto 0) or ni132_suif_tmp(0 downto 0);

-- b2s0
  ni133_counter <= add(r_counter, X"00000001");
  ni55_r_e_g_0 <= "0" & mkvec(p_stream0_input_rdy) and not ("0" & mkvec(p_stream0_input_eos));

-- b2s1
  ni135_temp <= r_stream0_input;
  ni134_suif_tmp0 <= "0000000000000000000000000000000" & neq(r_r_e_g_0, "00");

-- b3s0
  ni136_state <= r_temp;
  ni137_counter <= X"00000000";

-- b4s0
  ni138_suif_tmp1 <= "0000000000000000000000000000000" & cmp_less_equal_s(X"00989680", r_counter);

-- b5s0
  ni139_counter <= X"00000000";
  ni140_state <= X"02";

-- b6s0
  ni142_counter <= X"00000000";

-- b6s1
  ni143_temp <= r_stream0_input;
  ni144_state <= ni143_temp;

-- b7s0
  ni145_state <= X"02";

-- b8s0

-- 


  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b0s0 =>
        r_counter <= ni127_counter;
      when b2s0 =>
        r_counter <= ni133_counter;
      when b3s0 =>
        r_counter <= ni137_counter;
      when b5s0 =>
        if (s_b5s0_en = '1') then
          r_counter <= ni139_counter;
        end if;
      when b6s0 =>
        if (s_b6s0_en = '1') then
          r_counter <= ni142_counter;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b0s0 =>
        r_state <= ni128_state;
      when b3s0 =>
        r_state <= ni136_state;
      when b5s0 =>
        if (s_b5s0_en = '1') then
          r_state <= ni140_state;
        end if;
      when b6s1 =>
        r_state <= ni144_state;
      when b7s0 =>
        r_state <= ni145_state;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b1s0 =>
        r_suif_tmp3 <= ni131_suif_tmp3;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b1s0 =>
        r_suif_tmp <= ni132_suif_tmp;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b1s0 =>
        r_suif_tmp2 <= ni141_suif_tmp2;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b1s0 =>
        r_switched <= ni5212881_switched;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b2s0 =>
        r_r_e_g_0 <= ni55_r_e_g_0;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b2s1 =>
        r_temp <= ni135_temp;
      when b6s1 =>
        r_temp <= ni143_temp;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b2s1 =>
        r_suif_tmp0 <= ni134_suif_tmp0;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b4s0 =>
        r_suif_tmp1 <= ni138_suif_tmp1;
      when others =>
      end case;
    end if;
  end process;

-- "stream0_input" interface signals
  process (clk)
  begin
    if (clk'event and clk='1') then
      if ((p_stream0_input_en and p_stream0_input_rdy) = '1') then
        r_stream0_input <= p_stream0_input_data;
      end if;
    end if;
  end process;

  p_stream0_input_en <= 
    '1' and not p_stream0_input_eos when thisState = b2s0 else
    s_b6s0_en and not p_stream0_input_eos when thisState = b6s0 else
    '0';

-- "stream0_output" interface signals
  p_stream0_output_en <= 
    s_b5s0_en when thisState = b5s0 else
    '0';
  p_stream0_output_data <= r_temp;
  p_stream0_output_eos <= '0';

end rtl;
library ieee;
use ieee.std_logic_1164.all;
library altera_mf;
use altera_mf.altera_mf_components.all;

entity minimax_func_piece_sizes_RAM is
  port (
    rst,clk : in std_ulogic;
    we : in std_ulogic;
    w_addr : in std_ulogic_vector(4 downto 0);
    r_addr : in std_ulogic_vector(4 downto 0);
    din : in std_ulogic_vector(7 downto 0);
    dout : out std_ulogic_vector(7 downto 0)
  );
end minimax_func_piece_sizes_RAM;

architecture sync of minimax_func_piece_sizes_RAM is
  signal q_b : std_logic_vector (7 downto 0);
  signal data_a : std_logic_vector (7 downto 0);
  signal address_a : std_logic_vector (4 downto 0);
  signal address_b : std_logic_vector (4 downto 0);
begin
	address_a <= std_logic_vector(w_addr);
	address_b <= std_logic_vector(r_addr);
	data_a <= std_logic_vector(din);
	i0 : altsyncram
	GENERIC MAP (
		operation_mode => "DUAL_PORT",
		width_a => 8,
		widthad_a => 5,
		numwords_a => 21,
		width_b => 8,
		widthad_b => 5,
		numwords_b => 21,
		lpm_type => "altsyncram",
		width_byteena_a => 1,
		outdata_reg_b => "UNREGISTERED",
		indata_aclr_a => "NONE",
		wrcontrol_aclr_a => "NONE",
		address_aclr_a => "NONE",
		address_reg_b => "CLOCK0",
		address_aclr_b => "NONE",
		outdata_aclr_b => "NONE",
		read_during_write_mode_mixed_ports => "DONT_CARE",
		ram_block_type => "AUTO",
		init_file => "minimax_func_piece_sizes_RAM.mif",
		intended_device_family => "Stratix"
	)
	PORT MAP (
		wren_a => we,
		clock0 => clk,
		address_a => address_a,
		address_b => address_b,
		data_a => data_a,
		q_b => q_b
	);
	dout <= std_ulogic_vector(q_b);
end sync;

library ieee;
use ieee.std_logic_1164.all;
library altera_mf;
use altera_mf.altera_mf_components.all;

entity minimax_func_piece_y_RAM is
  port (
    rst,clk : in std_ulogic;
    we : in std_ulogic;
    w_addr : in std_ulogic_vector(9 downto 0);
    r_addr : in std_ulogic_vector(9 downto 0);
    din : in std_ulogic_vector(7 downto 0);
    dout : out std_ulogic_vector(7 downto 0)
  );
end minimax_func_piece_y_RAM;

architecture sync of minimax_func_piece_y_RAM is
  signal q_b : std_logic_vector (7 downto 0);
  signal data_a : std_logic_vector (7 downto 0);
  signal address_a : std_logic_vector (9 downto 0);
  signal address_b : std_logic_vector (9 downto 0);
begin
	address_a <= std_logic_vector(w_addr);
	address_b <= std_logic_vector(r_addr);
	data_a <= std_logic_vector(din);
	i0 : altsyncram
	GENERIC MAP (
		operation_mode => "DUAL_PORT",
		width_a => 8,
		widthad_a => 10,
		numwords_a => 672,
		width_b => 8,
		widthad_b => 10,
		numwords_b => 672,
		lpm_type => "altsyncram",
		width_byteena_a => 1,
		outdata_reg_b => "UNREGISTERED",
		indata_aclr_a => "NONE",
		wrcontrol_aclr_a => "NONE",
		address_aclr_a => "NONE",
		address_reg_b => "CLOCK0",
		address_aclr_b => "NONE",
		outdata_aclr_b => "NONE",
		read_during_write_mode_mixed_ports => "DONT_CARE",
		ram_block_type => "AUTO",
		init_file => "minimax_func_piece_y_RAM.mif",
		intended_device_family => "Stratix"
	)
	PORT MAP (
		wren_a => we,
		clock0 => clk,
		address_a => address_a,
		address_b => address_b,
		data_a => data_a,
		q_b => q_b
	);
	dout <= std_ulogic_vector(q_b);
end sync;

library ieee;
use ieee.std_logic_1164.all;
library altera_mf;
use altera_mf.altera_mf_components.all;

entity minimax_func_piece_x_RAM is
  port (
    rst,clk : in std_ulogic;
    we : in std_ulogic;
    w_addr : in std_ulogic_vector(9 downto 0);
    r_addr : in std_ulogic_vector(9 downto 0);
    din : in std_ulogic_vector(7 downto 0);
    dout : out std_ulogic_vector(7 downto 0)
  );
end minimax_func_piece_x_RAM;

architecture sync of minimax_func_piece_x_RAM is
  signal q_b : std_logic_vector (7 downto 0);
  signal data_a : std_logic_vector (7 downto 0);
  signal address_a : std_logic_vector (9 downto 0);
  signal address_b : std_logic_vector (9 downto 0);
begin
	address_a <= std_logic_vector(w_addr);
	address_b <= std_logic_vector(r_addr);
	data_a <= std_logic_vector(din);
	i0 : altsyncram
	GENERIC MAP (
		operation_mode => "DUAL_PORT",
		width_a => 8,
		widthad_a => 10,
		numwords_a => 672,
		width_b => 8,
		widthad_b => 10,
		numwords_b => 672,
		lpm_type => "altsyncram",
		width_byteena_a => 1,
		outdata_reg_b => "UNREGISTERED",
		indata_aclr_a => "NONE",
		wrcontrol_aclr_a => "NONE",
		address_aclr_a => "NONE",
		address_reg_b => "CLOCK0",
		address_aclr_b => "NONE",
		outdata_aclr_b => "NONE",
		read_during_write_mode_mixed_ports => "DONT_CARE",
		ram_block_type => "AUTO",
		init_file => "minimax_func_piece_x_RAM.mif",
		intended_device_family => "Stratix"
	)
	PORT MAP (
		wren_a => we,
		clock0 => clk,
		address_a => address_a,
		address_b => address_b,
		data_a => data_a,
		q_b => q_b
	);
	dout <= std_ulogic_vector(q_b);
end sync;

library ieee;
use ieee.std_logic_1164.all;
library altera_mf;
use altera_mf.altera_mf_components.all;

entity minimax_func_board_RAM is
  port (
    rst,clk : in std_ulogic;
    we : in std_ulogic;
    addr : in std_ulogic_vector(9 downto 0);
    addr2 : in std_ulogic_vector(9 downto 0);
    din : in std_ulogic_vector(7 downto 0);
    we2 : in std_ulogic;
    din2 : in std_ulogic_vector(7 downto 0);
    dout : out std_ulogic_vector(7 downto 0);
    dout2 : out std_ulogic_vector(7 downto 0)
  );
end minimax_func_board_RAM;

architecture dualsync of minimax_func_board_RAM is
  signal q_a,q_b : std_logic_vector (7 downto 0);
  signal data_a,data_b : std_logic_vector (7 downto 0);
  signal address_a : std_logic_vector (9 downto 0);
  signal address_b : std_logic_vector (9 downto 0);
begin
	address_a <= std_logic_vector(addr);
	address_b <= std_logic_vector(addr2);
	data_a <= std_logic_vector(din);
	data_b <= std_logic_vector(din2);
	i0 : altsyncram
	GENERIC MAP (
		operation_mode => "BIDIR_DUAL_PORT",
		width_a => 8,
		widthad_a => 10,
		numwords_a => 1024,
		width_b => 8,
		widthad_b => 10,
		numwords_b => 1024,
		lpm_type => "altsyncram",
		width_byteena_a => 1,
		address_aclr_a => "NONE",
		address_aclr_b => "NONE",
		address_reg_b => "CLOCK0",
		indata_aclr_a => "NONE",
		indata_aclr_b => "NONE",
          indata_reg_b => "CLOCK0",
		outdata_aclr_a => "NONE",
		outdata_aclr_b => "NONE",
		outdata_reg_a => "UNREGISTERED",
		outdata_reg_b => "UNREGISTERED",
		wrcontrol_aclr_a => "NONE",
		wrcontrol_aclr_b => "NONE",
		wrcontrol_wraddress_reg_b => "CLOCK0",
		read_during_write_mode_mixed_ports => "DONT_CARE",
		ram_block_type => "AUTO",
		init_file => "UNUSED",
		intended_device_family => "Stratix"
	)
	PORT MAP (
		wren_a => we,
		clock0 => clk,
		wren_b => we2,
		address_a => address_a,
		address_b => address_b,
		data_a => data_a,
		data_b => data_b,
		q_a => q_a,
		q_b => q_b
	);
	dout <= std_ulogic_vector(q_a);
	dout2 <= std_ulogic_vector(q_b);
end dualsync;

library ieee;
use ieee.std_logic_1164.all;
library altera_mf;
use altera_mf.altera_mf_components.all;

entity minimax_func_x_bak_RAM is
  port (
    rst,clk : in std_ulogic;
    we : in std_ulogic;
    w_addr : in std_ulogic_vector(5 downto 0);
    r_addr : in std_ulogic_vector(5 downto 0);
    din : in std_ulogic_vector(7 downto 0);
    dout : out std_ulogic_vector(7 downto 0)
  );
end minimax_func_x_bak_RAM;

architecture sync of minimax_func_x_bak_RAM is
  signal q_b : std_logic_vector (7 downto 0);
  signal data_a : std_logic_vector (7 downto 0);
  signal address_a : std_logic_vector (5 downto 0);
  signal address_b : std_logic_vector (5 downto 0);
begin
	address_a <= std_logic_vector(w_addr);
	address_b <= std_logic_vector(r_addr);
	data_a <= std_logic_vector(din);
	i0 : altsyncram
	GENERIC MAP (
		operation_mode => "DUAL_PORT",
		width_a => 8,
		widthad_a => 6,
		numwords_a => 50,
		width_b => 8,
		widthad_b => 6,
		numwords_b => 50,
		lpm_type => "altsyncram",
		width_byteena_a => 1,
		outdata_reg_b => "UNREGISTERED",
		indata_aclr_a => "NONE",
		wrcontrol_aclr_a => "NONE",
		address_aclr_a => "NONE",
		address_reg_b => "CLOCK0",
		address_aclr_b => "NONE",
		outdata_aclr_b => "NONE",
		read_during_write_mode_mixed_ports => "DONT_CARE",
		ram_block_type => "AUTO",
		init_file => "UNUSED",
		intended_device_family => "Stratix"
	)
	PORT MAP (
		wren_a => we,
		clock0 => clk,
		address_a => address_a,
		address_b => address_b,
		data_a => data_a,
		q_b => q_b
	);
	dout <= std_ulogic_vector(q_b);
end sync;

library ieee;
use ieee.std_logic_1164.all;
library altera_mf;
use altera_mf.altera_mf_components.all;

entity minimax_func_y_bak_RAM is
  port (
    rst,clk : in std_ulogic;
    we : in std_ulogic;
    w_addr : in std_ulogic_vector(5 downto 0);
    r_addr : in std_ulogic_vector(5 downto 0);
    din : in std_ulogic_vector(7 downto 0);
    dout : out std_ulogic_vector(7 downto 0)
  );
end minimax_func_y_bak_RAM;

architecture sync of minimax_func_y_bak_RAM is
  signal q_b : std_logic_vector (7 downto 0);
  signal data_a : std_logic_vector (7 downto 0);
  signal address_a : std_logic_vector (5 downto 0);
  signal address_b : std_logic_vector (5 downto 0);
begin
	address_a <= std_logic_vector(w_addr);
	address_b <= std_logic_vector(r_addr);
	data_a <= std_logic_vector(din);
	i0 : altsyncram
	GENERIC MAP (
		operation_mode => "DUAL_PORT",
		width_a => 8,
		widthad_a => 6,
		numwords_a => 50,
		width_b => 8,
		widthad_b => 6,
		numwords_b => 50,
		lpm_type => "altsyncram",
		width_byteena_a => 1,
		outdata_reg_b => "UNREGISTERED",
		indata_aclr_a => "NONE",
		wrcontrol_aclr_a => "NONE",
		address_aclr_a => "NONE",
		address_reg_b => "CLOCK0",
		address_aclr_b => "NONE",
		outdata_aclr_b => "NONE",
		read_during_write_mode_mixed_ports => "DONT_CARE",
		ram_block_type => "AUTO",
		init_file => "UNUSED",
		intended_device_family => "Stratix"
	)
	PORT MAP (
		wren_a => we,
		clock0 => clk,
		address_a => address_a,
		address_b => address_b,
		data_a => data_a,
		q_b => q_b
	);
	dout <= std_ulogic_vector(q_b);
end sync;

library ieee;
use ieee.std_logic_1164.all;
library altera_mf;
use altera_mf.altera_mf_components.all;

entity minimax_func_board_bak_RAM is
  port (
    rst,clk : in std_ulogic;
    we : in std_ulogic;
    w_addr : in std_ulogic_vector(5 downto 0);
    r_addr : in std_ulogic_vector(5 downto 0);
    din : in std_ulogic_vector(7 downto 0);
    dout : out std_ulogic_vector(7 downto 0)
  );
end minimax_func_board_bak_RAM;

architecture sync of minimax_func_board_bak_RAM is
  signal q_b : std_logic_vector (7 downto 0);
  signal data_a : std_logic_vector (7 downto 0);
  signal address_a : std_logic_vector (5 downto 0);
  signal address_b : std_logic_vector (5 downto 0);
begin
	address_a <= std_logic_vector(w_addr);
	address_b <= std_logic_vector(r_addr);
	data_a <= std_logic_vector(din);
	i0 : altsyncram
	GENERIC MAP (
		operation_mode => "DUAL_PORT",
		width_a => 8,
		widthad_a => 6,
		numwords_a => 50,
		width_b => 8,
		widthad_b => 6,
		numwords_b => 50,
		lpm_type => "altsyncram",
		width_byteena_a => 1,
		outdata_reg_b => "UNREGISTERED",
		indata_aclr_a => "NONE",
		wrcontrol_aclr_a => "NONE",
		address_aclr_a => "NONE",
		address_reg_b => "CLOCK0",
		address_aclr_b => "NONE",
		outdata_aclr_b => "NONE",
		read_during_write_mode_mixed_ports => "DONT_CARE",
		ram_block_type => "AUTO",
		init_file => "UNUSED",
		intended_device_family => "Stratix"
	)
	PORT MAP (
		wren_a => we,
		clock0 => clk,
		address_a => address_a,
		address_b => address_b,
		data_a => data_a,
		q_b => q_b
	);
	dout <= std_ulogic_vector(q_b);
end sync;

library ieee;
use ieee.std_logic_1164.all;

use work.components.all;
    
entity minimax_func is
  port (signal reset : in std_ulogic;
    signal sclk : in std_ulogic;
    signal clk : in std_ulogic;
    signal p_stream0_move_input_rdy : in std_ulogic;
    signal p_stream0_move_input_en : inout std_ulogic;
    signal p_stream0_move_input_eos : in std_ulogic;
    signal p_stream0_move_input_data : in std_ulogic_vector (31 downto 0);
    signal p_stream0_move_output_rdy : in std_ulogic;
    signal p_stream0_move_output_en : inout std_ulogic;
    signal p_stream0_move_output_eos : out std_ulogic;
    signal p_stream0_move_output_data : out std_ulogic_vector (31 downto 0);
    signal p_stream_minimax_ex1_output_rdy : in std_ulogic;
    signal p_stream_minimax_ex1_output_en : inout std_ulogic;
    signal p_stream_minimax_ex1_output_eos : out std_ulogic;
    signal p_stream_minimax_ex1_output_data : out std_ulogic_vector (31 downto 0);
    signal p_stream_minimax_ex1_input_rdy : in std_ulogic;
    signal p_stream_minimax_ex1_input_en : inout std_ulogic;
    signal p_stream_minimax_ex1_input_eos : in std_ulogic;
    signal p_stream_minimax_ex1_input_data : in std_ulogic_vector (31 downto 0);
    signal p_stream_minimax_ex2_output_rdy : in std_ulogic;
    signal p_stream_minimax_ex2_output_en : inout std_ulogic;
    signal p_stream_minimax_ex2_output_eos : out std_ulogic;
    signal p_stream_minimax_ex2_output_data : out std_ulogic_vector (31 downto 0);
    signal p_stream_minimax_ex2_input_rdy : in std_ulogic;
    signal p_stream_minimax_ex2_input_en : inout std_ulogic;
    signal p_stream_minimax_ex2_input_eos : in std_ulogic;
    signal p_stream_minimax_ex2_input_data : in std_ulogic_vector (31 downto 0);
    signal p_stream_minimax_ex3_output_rdy : in std_ulogic;
    signal p_stream_minimax_ex3_output_en : inout std_ulogic;
    signal p_stream_minimax_ex3_output_eos : out std_ulogic;
    signal p_stream_minimax_ex3_output_data : out std_ulogic_vector (31 downto 0);
    signal p_stream_minimax_ex3_input_rdy : in std_ulogic;
    signal p_stream_minimax_ex3_input_en : inout std_ulogic;
    signal p_stream_minimax_ex3_input_eos : in std_ulogic;
    signal p_stream_minimax_ex3_input_data : in std_ulogic_vector (31 downto 0);
    signal p_stream_minimax_ex4_output_rdy : in std_ulogic;
    signal p_stream_minimax_ex4_output_en : inout std_ulogic;
    signal p_stream_minimax_ex4_output_eos : out std_ulogic;
    signal p_stream_minimax_ex4_output_data : out std_ulogic_vector (31 downto 0);
    signal p_stream_minimax_ex4_input_rdy : in std_ulogic;
    signal p_stream_minimax_ex4_input_en : inout std_ulogic;
    signal p_stream_minimax_ex4_input_eos : in std_ulogic;
    signal p_stream_minimax_ex4_input_data : in std_ulogic_vector (31 downto 0));
end minimax_func;

use work.external_components_hw_blokus_comp_vhd.all;
architecture rtl of minimax_func is
  function mkvec(b : in std_ulogic) return std_ulogic_vector is
    variable res : std_ulogic_vector(0 downto 0);
  begin
    res(0):=b;
    return(res);
  end;

  component minimax_func_piece_sizes_RAM is
    port (signal rst : in std_ulogic;
      signal clk : in std_ulogic;
      signal we : in std_ulogic;
      signal w_addr : in std_ulogic_vector (4 downto 0);
      signal r_addr : in std_ulogic_vector (4 downto 0);
      signal din : in std_ulogic_vector (7 downto 0);
      signal dout : out std_ulogic_vector (7 downto 0));
  end component;

  component minimax_func_piece_y_RAM is
    port (signal rst : in std_ulogic;
      signal clk : in std_ulogic;
      signal we : in std_ulogic;
      signal w_addr : in std_ulogic_vector (9 downto 0);
      signal r_addr : in std_ulogic_vector (9 downto 0);
      signal din : in std_ulogic_vector (7 downto 0);
      signal dout : out std_ulogic_vector (7 downto 0));
  end component;

  component minimax_func_piece_x_RAM is
    port (signal rst : in std_ulogic;
      signal clk : in std_ulogic;
      signal we : in std_ulogic;
      signal w_addr : in std_ulogic_vector (9 downto 0);
      signal r_addr : in std_ulogic_vector (9 downto 0);
      signal din : in std_ulogic_vector (7 downto 0);
      signal dout : out std_ulogic_vector (7 downto 0));
  end component;

  component minimax_func_board_RAM is
    port (signal rst : in std_ulogic;
      signal clk : in std_ulogic;
      signal we : in std_ulogic;
      signal addr : in std_ulogic_vector (9 downto 0);
      signal addr2 : in std_ulogic_vector (9 downto 0);
      signal din : in std_ulogic_vector (7 downto 0);
      signal we2 : in std_ulogic;
      signal din2 : in std_ulogic_vector (7 downto 0);
      signal dout : out std_ulogic_vector (7 downto 0);
      signal dout2 : out std_ulogic_vector (7 downto 0));
  end component;

  component minimax_func_x_bak_RAM is
    port (signal rst : in std_ulogic;
      signal clk : in std_ulogic;
      signal we : in std_ulogic;
      signal w_addr : in std_ulogic_vector (5 downto 0);
      signal r_addr : in std_ulogic_vector (5 downto 0);
      signal din : in std_ulogic_vector (7 downto 0);
      signal dout : out std_ulogic_vector (7 downto 0));
  end component;

  component minimax_func_y_bak_RAM is
    port (signal rst : in std_ulogic;
      signal clk : in std_ulogic;
      signal we : in std_ulogic;
      signal w_addr : in std_ulogic_vector (5 downto 0);
      signal r_addr : in std_ulogic_vector (5 downto 0);
      signal din : in std_ulogic_vector (7 downto 0);
      signal dout : out std_ulogic_vector (7 downto 0));
  end component;

  component minimax_func_board_bak_RAM is
    port (signal rst : in std_ulogic;
      signal clk : in std_ulogic;
      signal we : in std_ulogic;
      signal w_addr : in std_ulogic_vector (5 downto 0);
      signal r_addr : in std_ulogic_vector (5 downto 0);
      signal din : in std_ulogic_vector (7 downto 0);
      signal dout : out std_ulogic_vector (7 downto 0));
  end component;

  type stateType is (init, b0s0, b1s0, b2s0, b3s0, b4s0, b5s0, b6s0, b7s0, b8s0, b9s0, b10s0, b11s0, b11s1, b12s0, b12s1, b13s0, b14s0, b15s0, b16s0, b16s1, b17s0, b17s1, b18s0, b18s1, b18s2, b18s3, b18s4, b18s5, b18s6, b18s7, b18s8, b18s9, b18s10, b18s11, b18s12, b18s13, b18s14, b18s15, b19s0, b20s0, b21s0, b22s0, b23s0, b24s0, b25s0, b25s1, b26s0, b26s1, b27s0, b28s0, b29s0, b30s0, b30s1, b30s2, b31s0, b32s0, b32s1, b32s2, b33s0, b34s0, b34s1, b34s2, b35s0, b36s0, b36s1, b36s2, b37s0, b38s0, b39s0, b39s1, b40s0, b40s1, b40s2, b41s0, b41s1, b42s0, b42s1, b42s2, b43s0, b43s1, b44s0, b44s1, b44s2, b45s0, b45s1, b46s0, b46s1, b46s2, b47s0, b48s0, b49s0, b50s0, b51s0, b52s0, b53s0, b54s0, b54s1, b54s2, b55s0, b56s0, b57s0, b57s1, b58s0, b59s0, b60s0, b60s1, b61s0, b62s0, b63s0, b63s1, b64s0, b65s0, b66s0, b67s0, b67s1, b67s2, b67s3, b67s4, b68s0, b69s0, b70s0, b71s0, b72s0, b72s1, b73s0, b73s1, b73s2, b73s3, b73s4, b73s5, b73s6, b73s7, b73s8, b73s9, b73s10, b73s11, b73s12, b73s13, b73s14, b73s15, b74s0, b74s1, b75s0, b75s1, b75s2, b75s3, b75s4, b75s5, b75s6, b75s7, b75s8, b75s9, b75s10, b75s11, b75s12, b75s13, b75s14, b75s15, b76s0, b77s0, b78s0, b79s0, b80s0, b81s0, b82s0, b83s0, b84s0, b85s0, b86s0, b87s0, b87s1, b88s0, b88s1, b89s0, b90s0, b91s0, b92s0, b93s0, finished);
  type pipeStateType is (idle, init, run, flush);
  type t_b70_0 is record
     f_count_bak : std_ulogic_vector (7 downto 0);
     f_count_bak0 : std_ulogic_vector (7 downto 0);
  end record;
  type t_b70_1 is record
     f_r_e_g_4 : std_ulogic_vector (7 downto 0);
     f_r_e_g_0 : std_ulogic_vector (9 downto 0);
  end record;
  signal thisState : stateType;
  signal nextState : stateType;
  signal stateEn : std_ulogic;
  signal newState : std_ulogic;
  signal r_stream0_move_input : std_ulogic_vector (31 downto 0);
  signal r_stream_minimax_ex1_input : std_ulogic_vector (31 downto 0);
  signal r_stream_minimax_ex2_input : std_ulogic_vector (31 downto 0);
  signal r_stream_minimax_ex3_input : std_ulogic_vector (31 downto 0);
  signal r_stream_minimax_ex4_input : std_ulogic_vector (31 downto 0);
  signal r_piece_sizes : std_ulogic_vector (7 downto 0);
  signal ni361_piece_sizes : std_ulogic_vector (7 downto 0);
  signal ni1043_piece_sizes : std_ulogic_vector (7 downto 0);
  signal ni1899_piece_sizes : std_ulogic_vector (7 downto 0);
  signal ni2282_piece_sizes : std_ulogic_vector (7 downto 0);
  signal p_piece_sizes_waddr : std_ulogic_vector (4 downto 0);
  signal p_piece_sizes_raddr : std_ulogic_vector (4 downto 0);
  signal p_piece_sizes_we : std_ulogic;
  signal p_piece_sizes_din : std_ulogic_vector (7 downto 0);
  signal p_piece_sizes_dout : std_ulogic_vector (7 downto 0);
  signal p_piece_sizes_imm2 : std_ulogic_vector (7 downto 0);
  signal p_piece_sizes_re2 : std_ulogic;
  signal r_piece_y : std_ulogic_vector (7 downto 0);
  signal ni903_piece_y : std_ulogic_vector (7 downto 0);
  signal ni1099_piece_y : std_ulogic_vector (7 downto 0);
  signal ni2226_piece_y : std_ulogic_vector (7 downto 0);
  signal ni2609_piece_y : std_ulogic_vector (7 downto 0);
  signal p_piece_y_waddr : std_ulogic_vector (9 downto 0);
  signal p_piece_y_raddr : std_ulogic_vector (9 downto 0);
  signal p_piece_y_we : std_ulogic;
  signal p_piece_y_din : std_ulogic_vector (7 downto 0);
  signal p_piece_y_dout : std_ulogic_vector (7 downto 0);
  signal p_piece_y_imm2 : std_ulogic_vector (7 downto 0);
  signal p_piece_y_re2 : std_ulogic;
  signal r_piece_x : std_ulogic_vector (7 downto 0);
  signal ni917_piece_x : std_ulogic_vector (7 downto 0);
  signal ni1113_piece_x : std_ulogic_vector (7 downto 0);
  signal ni2240_piece_x : std_ulogic_vector (7 downto 0);
  signal ni2623_piece_x : std_ulogic_vector (7 downto 0);
  signal p_piece_x_waddr : std_ulogic_vector (9 downto 0);
  signal p_piece_x_raddr : std_ulogic_vector (9 downto 0);
  signal p_piece_x_we : std_ulogic;
  signal p_piece_x_din : std_ulogic_vector (7 downto 0);
  signal p_piece_x_dout : std_ulogic_vector (7 downto 0);
  signal p_piece_x_imm2 : std_ulogic_vector (7 downto 0);
  signal p_piece_x_re2 : std_ulogic;
  signal r_board : std_ulogic_vector (7 downto 0);
  signal ni193_board : std_ulogic_vector (7 downto 0);
  signal ni209_board : std_ulogic_vector (7 downto 0);
  signal ni414_board : std_ulogic_vector (7 downto 0);
  signal ni426_board : std_ulogic_vector (7 downto 0);
  signal ni459_board : std_ulogic_vector (7 downto 0);
  signal ni467_board : std_ulogic_vector (7 downto 0);
  signal ni474_board : std_ulogic_vector (7 downto 0);
  signal ni490_board : std_ulogic_vector (7 downto 0);
  signal ni570_board : std_ulogic_vector (7 downto 0);
  signal ni578_board : std_ulogic_vector (7 downto 0);
  signal ni585_board : std_ulogic_vector (7 downto 0);
  signal ni601_board : std_ulogic_vector (7 downto 0);
  signal ni681_board : std_ulogic_vector (7 downto 0);
  signal ni689_board : std_ulogic_vector (7 downto 0);
  signal ni696_board : std_ulogic_vector (7 downto 0);
  signal ni712_board : std_ulogic_vector (7 downto 0);
  signal ni792_board : std_ulogic_vector (7 downto 0);
  signal ni800_board : std_ulogic_vector (7 downto 0);
  signal ni807_board : std_ulogic_vector (7 downto 0);
  signal ni823_board : std_ulogic_vector (7 downto 0);
  signal ni1056_board : std_ulogic_vector (7 downto 0);
  signal ni1845_board : std_ulogic_vector (7 downto 0);
  signal ni1933_board : std_ulogic_vector (7 downto 0);
  signal ni1966_board : std_ulogic_vector (7 downto 0);
  signal ni1974_board : std_ulogic_vector (7 downto 0);
  signal ni1981_board : std_ulogic_vector (7 downto 0);
  signal ni1997_board : std_ulogic_vector (7 downto 0);
  signal ni2031_board : std_ulogic_vector (7 downto 0);
  signal ni2039_board : std_ulogic_vector (7 downto 0);
  signal ni2046_board : std_ulogic_vector (7 downto 0);
  signal ni2062_board : std_ulogic_vector (7 downto 0);
  signal ni2096_board : std_ulogic_vector (7 downto 0);
  signal ni2104_board : std_ulogic_vector (7 downto 0);
  signal ni2111_board : std_ulogic_vector (7 downto 0);
  signal ni2127_board : std_ulogic_vector (7 downto 0);
  signal ni2161_board : std_ulogic_vector (7 downto 0);
  signal ni2169_board : std_ulogic_vector (7 downto 0);
  signal ni2176_board : std_ulogic_vector (7 downto 0);
  signal ni2192_board : std_ulogic_vector (7 downto 0);
  signal ni2316_board : std_ulogic_vector (7 downto 0);
  signal ni2349_board : std_ulogic_vector (7 downto 0);
  signal ni2357_board : std_ulogic_vector (7 downto 0);
  signal ni2364_board : std_ulogic_vector (7 downto 0);
  signal ni2380_board : std_ulogic_vector (7 downto 0);
  signal ni2414_board : std_ulogic_vector (7 downto 0);
  signal ni2422_board : std_ulogic_vector (7 downto 0);
  signal ni2429_board : std_ulogic_vector (7 downto 0);
  signal ni2445_board : std_ulogic_vector (7 downto 0);
  signal ni2479_board : std_ulogic_vector (7 downto 0);
  signal ni2487_board : std_ulogic_vector (7 downto 0);
  signal ni2494_board : std_ulogic_vector (7 downto 0);
  signal ni2510_board : std_ulogic_vector (7 downto 0);
  signal ni2544_board : std_ulogic_vector (7 downto 0);
  signal ni2552_board : std_ulogic_vector (7 downto 0);
  signal ni2559_board : std_ulogic_vector (7 downto 0);
  signal ni2575_board : std_ulogic_vector (7 downto 0);
  signal ni2711_board : std_ulogic_vector (7 downto 0);
  signal ni2727_board : std_ulogic_vector (7 downto 0);
  signal p_board_addr : std_ulogic_vector (9 downto 0);
  signal p_board_addr2 : std_ulogic_vector (9 downto 0);
  signal p_board_we : std_ulogic;
  signal p_board_din : std_ulogic_vector (7 downto 0);
  signal p_board_dout : std_ulogic_vector (7 downto 0);
  signal p_board_imm : std_ulogic_vector (7 downto 0);
  signal p_board_re : std_ulogic;
  signal r2_board : std_ulogic_vector (7 downto 0);
  signal p_board_dout2 : std_ulogic_vector (7 downto 0);
  signal p_board_imm2 : std_ulogic_vector (7 downto 0);
  signal p_board_re2 : std_ulogic;
  signal r_score_self : std_ulogic_vector (7 downto 0);
  signal ni2953_score_self : std_ulogic_vector (7 downto 0);
  signal ni2971_score_self : std_ulogic_vector (7 downto 0);
  signal ni3150_score_self : std_ulogic_vector (7 downto 0);
  signal ni3155_score_self : std_ulogic_vector (7 downto 0);
  signal ni3284_score_self : std_ulogic_vector (7 downto 0);
  signal r_score_opp : std_ulogic_vector (7 downto 0);
  signal ni2954_score_opp : std_ulogic_vector (7 downto 0);
  signal ni3209_score_opp : std_ulogic_vector (7 downto 0);
  signal ni3285_score_opp : std_ulogic_vector (7 downto 0);
  signal r_avail_self : std_ulogic_vector (23 downto 0);
  signal ni2951_avail_self : std_ulogic_vector (23 downto 0);
  signal ni2970_avail_self : std_ulogic_vector (23 downto 0);
  signal ni3151_avail_self : std_ulogic_vector (23 downto 0);
  signal ni3154_avail_self : std_ulogic_vector (23 downto 0);
  signal ni3282_avail_self : std_ulogic_vector (23 downto 0);
  signal r_avail_opp : std_ulogic_vector (23 downto 0);
  signal ni2952_avail_opp : std_ulogic_vector (23 downto 0);
  signal ni3208_avail_opp : std_ulogic_vector (23 downto 0);
  signal ni3283_avail_opp : std_ulogic_vector (23 downto 0);
  signal r_x : std_ulogic_vector (7 downto 0);
  signal ni2933_x : std_ulogic_vector (7 downto 0);
  signal ni2947_x : std_ulogic_vector (7 downto 0);
  signal ni2980_x : std_ulogic_vector (7 downto 0);
  signal ni2992_x : std_ulogic_vector (7 downto 0);
  signal ni3004_x : std_ulogic_vector (7 downto 0);
  signal ni3016_x : std_ulogic_vector (7 downto 0);
  signal ni3161_x : std_ulogic_vector (7 downto 0);
  signal ni3171_x : std_ulogic_vector (7 downto 0);
  signal ni3181_x : std_ulogic_vector (7 downto 0);
  signal ni3191_x : std_ulogic_vector (7 downto 0);
  signal ni3215_x : std_ulogic_vector (7 downto 0);
  signal ni3225_x : std_ulogic_vector (7 downto 0);
  signal ni3235_x : std_ulogic_vector (7 downto 0);
  signal ni3245_x : std_ulogic_vector (7 downto 0);
  signal ni3264_x : std_ulogic_vector (7 downto 0);
  signal ni3278_x : std_ulogic_vector (7 downto 0);
  signal r_y : std_ulogic_vector (7 downto 0);
  signal ni2930_y : std_ulogic_vector (7 downto 0);
  signal ni2949_y : std_ulogic_vector (7 downto 0);
  signal ni2979_y : std_ulogic_vector (7 downto 0);
  signal ni2991_y : std_ulogic_vector (7 downto 0);
  signal ni3003_y : std_ulogic_vector (7 downto 0);
  signal ni3015_y : std_ulogic_vector (7 downto 0);
  signal ni3160_y : std_ulogic_vector (7 downto 0);
  signal ni3170_y : std_ulogic_vector (7 downto 0);
  signal ni3180_y : std_ulogic_vector (7 downto 0);
  signal ni3190_y : std_ulogic_vector (7 downto 0);
  signal ni3214_y : std_ulogic_vector (7 downto 0);
  signal ni3224_y : std_ulogic_vector (7 downto 0);
  signal ni3234_y : std_ulogic_vector (7 downto 0);
  signal ni3244_y : std_ulogic_vector (7 downto 0);
  signal ni3261_y : std_ulogic_vector (7 downto 0);
  signal ni3280_y : std_ulogic_vector (7 downto 0);
  signal r_xoff : std_ulogic_vector (7 downto 0);
  signal ni2974_xoff : std_ulogic_vector (7 downto 0);
  signal ni3031_xoff : std_ulogic_vector (7 downto 0);
  signal ni3054_xoff : std_ulogic_vector (7 downto 0);
  signal ni3062_xoff : std_ulogic_vector (7 downto 0);
  signal ni3145_xoff : std_ulogic_vector (7 downto 0);
  signal ni3158_xoff : std_ulogic_vector (7 downto 0);
  signal ni3204_xoff : std_ulogic_vector (7 downto 0);
  signal ni3212_xoff : std_ulogic_vector (7 downto 0);
  signal ni3258_xoff : std_ulogic_vector (7 downto 0);
  signal r_yoff : std_ulogic_vector (7 downto 0);
  signal ni2973_yoff : std_ulogic_vector (7 downto 0);
  signal ni3029_yoff : std_ulogic_vector (7 downto 0);
  signal ni3053_yoff : std_ulogic_vector (7 downto 0);
  signal ni3060_yoff : std_ulogic_vector (7 downto 0);
  signal ni3146_yoff : std_ulogic_vector (7 downto 0);
  signal ni3157_yoff : std_ulogic_vector (7 downto 0);
  signal ni3202_yoff : std_ulogic_vector (7 downto 0);
  signal ni3211_yoff : std_ulogic_vector (7 downto 0);
  signal ni3256_yoff : std_ulogic_vector (7 downto 0);
  signal r_board_t : std_ulogic_vector (7 downto 0);
  signal ni2983_board_t : std_ulogic_vector (7 downto 0);
  signal ni2995_board_t : std_ulogic_vector (7 downto 0);
  signal ni3007_board_t : std_ulogic_vector (7 downto 0);
  signal ni3019_board_t : std_ulogic_vector (7 downto 0);
  signal ni3055_board_t : std_ulogic_vector (7 downto 0);
  signal ni3164_board_t : std_ulogic_vector (7 downto 0);
  signal ni3174_board_t : std_ulogic_vector (7 downto 0);
  signal ni3184_board_t : std_ulogic_vector (7 downto 0);
  signal ni3194_board_t : std_ulogic_vector (7 downto 0);
  signal ni3218_board_t : std_ulogic_vector (7 downto 0);
  signal ni3228_board_t : std_ulogic_vector (7 downto 0);
  signal ni3238_board_t : std_ulogic_vector (7 downto 0);
  signal ni3248_board_t : std_ulogic_vector (7 downto 0);
  signal r_m_piece_min : std_ulogic_vector (7 downto 0);
  signal ni3035_m_piece_min : std_ulogic_vector (7 downto 0);
  signal ni3037_m_piece_min : std_ulogic_vector (7 downto 0);
  signal r_size : std_ulogic_vector (7 downto 0);
  signal ni2969_size : std_ulogic_vector (7 downto 0);
  signal ni2972_size : std_ulogic_vector (7 downto 0);
  signal ni3027_size : std_ulogic_vector (7 downto 0);
  signal ni3052_size : std_ulogic_vector (7 downto 0);
  signal ni3059_size : std_ulogic_vector (7 downto 0);
  signal ni3153_size : std_ulogic_vector (7 downto 0);
  signal ni3156_size : std_ulogic_vector (7 downto 0);
  signal ni3200_size : std_ulogic_vector (7 downto 0);
  signal ni3207_size : std_ulogic_vector (7 downto 0);
  signal ni3210_size : std_ulogic_vector (7 downto 0);
  signal ni3254_size : std_ulogic_vector (7 downto 0);
  signal r_move_type : std_ulogic_vector (7 downto 0);
  signal ni2958_move_type : std_ulogic_vector (7 downto 0);
  signal r_count : std_ulogic_vector (7 downto 0);
  signal ni3039_count : std_ulogic_vector (7 downto 0);
  signal ni3072_count : std_ulogic_vector (7 downto 0);
  signal ni3075_count : std_ulogic_vector (7 downto 0);
  signal ni3078_count : std_ulogic_vector (7 downto 0);
  signal ni3081_count : std_ulogic_vector (7 downto 0);
  signal ni3111_count : std_ulogic_vector (7 downto 0);
  signal ni3117_count : std_ulogic_vector (7 downto 0);
  signal ni3123_count : std_ulogic_vector (7 downto 0);
  signal ni3129_count : std_ulogic_vector (7 downto 0);
  signal r_next_stream : std_ulogic_vector (7 downto 0);
  signal ni3040_next_stream : std_ulogic_vector (7 downto 0);
  signal ni3073_next_stream : std_ulogic_vector (7 downto 0);
  signal ni3076_next_stream : std_ulogic_vector (7 downto 0);
  signal ni3079_next_stream : std_ulogic_vector (7 downto 0);
  signal ni3082_next_stream : std_ulogic_vector (7 downto 0);
  signal r_x1 : std_ulogic_vector (7 downto 0);
  signal ni2982_x1 : std_ulogic_vector (7 downto 0);
  signal ni2994_x1 : std_ulogic_vector (7 downto 0);
  signal ni3006_x1 : std_ulogic_vector (7 downto 0);
  signal ni3018_x1 : std_ulogic_vector (7 downto 0);
  signal ni3163_x1 : std_ulogic_vector (7 downto 0);
  signal ni3173_x1 : std_ulogic_vector (7 downto 0);
  signal ni3183_x1 : std_ulogic_vector (7 downto 0);
  signal ni3193_x1 : std_ulogic_vector (7 downto 0);
  signal ni3217_x1 : std_ulogic_vector (7 downto 0);
  signal ni3227_x1 : std_ulogic_vector (7 downto 0);
  signal ni3237_x1 : std_ulogic_vector (7 downto 0);
  signal ni3247_x1 : std_ulogic_vector (7 downto 0);
  signal r_y1 : std_ulogic_vector (7 downto 0);
  signal ni2981_y1 : std_ulogic_vector (7 downto 0);
  signal ni2993_y1 : std_ulogic_vector (7 downto 0);
  signal ni3005_y1 : std_ulogic_vector (7 downto 0);
  signal ni3017_y1 : std_ulogic_vector (7 downto 0);
  signal ni3162_y1 : std_ulogic_vector (7 downto 0);
  signal ni3172_y1 : std_ulogic_vector (7 downto 0);
  signal ni3182_y1 : std_ulogic_vector (7 downto 0);
  signal ni3192_y1 : std_ulogic_vector (7 downto 0);
  signal ni3216_y1 : std_ulogic_vector (7 downto 0);
  signal ni3226_y1 : std_ulogic_vector (7 downto 0);
  signal ni3236_y1 : std_ulogic_vector (7 downto 0);
  signal ni3246_y1 : std_ulogic_vector (7 downto 0);
  signal r_board_t1 : std_ulogic_vector (7 downto 0);
  signal ni2985_board_t1 : std_ulogic_vector (7 downto 0);
  signal ni2997_board_t1 : std_ulogic_vector (7 downto 0);
  signal ni3009_board_t1 : std_ulogic_vector (7 downto 0);
  signal ni3021_board_t1 : std_ulogic_vector (7 downto 0);
  signal ni3166_board_t1 : std_ulogic_vector (7 downto 0);
  signal ni3176_board_t1 : std_ulogic_vector (7 downto 0);
  signal ni3186_board_t1 : std_ulogic_vector (7 downto 0);
  signal ni3196_board_t1 : std_ulogic_vector (7 downto 0);
  signal ni3220_board_t1 : std_ulogic_vector (7 downto 0);
  signal ni3230_board_t1 : std_ulogic_vector (7 downto 0);
  signal ni3240_board_t1 : std_ulogic_vector (7 downto 0);
  signal ni3250_board_t1 : std_ulogic_vector (7 downto 0);
  signal r_m_x : std_ulogic_vector (7 downto 0);
  signal ni2959_m_x : std_ulogic_vector (7 downto 0);
  signal ni3049_m_x : std_ulogic_vector (7 downto 0);
  signal ni3100_m_x : std_ulogic_vector (7 downto 0);
  signal r_m_y : std_ulogic_vector (7 downto 0);
  signal ni2960_m_y : std_ulogic_vector (7 downto 0);
  signal ni3047_m_y : std_ulogic_vector (7 downto 0);
  signal ni3102_m_y : std_ulogic_vector (7 downto 0);
  signal r_m_piece : std_ulogic_vector (7 downto 0);
  signal ni2961_m_piece : std_ulogic_vector (7 downto 0);
  signal ni3042_m_piece : std_ulogic_vector (7 downto 0);
  signal ni3106_m_piece : std_ulogic_vector (7 downto 0);
  signal r_m_rotate : std_ulogic_vector (7 downto 0);
  signal ni2962_m_rotate : std_ulogic_vector (7 downto 0);
  signal ni3045_m_rotate : std_ulogic_vector (7 downto 0);
  signal ni3104_m_rotate : std_ulogic_vector (7 downto 0);
  signal r_moves_found : std_ulogic_vector (1 downto 0);
  signal ni3033_moves_found : std_ulogic_vector (1 downto 0);
  signal ni3066_moves_found : std_ulogic_vector (1 downto 0);
  signal r_lib_check : std_ulogic_vector (1 downto 0);
  signal ni3051_lib_check : std_ulogic_vector (1 downto 0);
  signal ni3058_lib_check : std_ulogic_vector (1 downto 0);
  signal r_move_valid : std_ulogic_vector (1 downto 0);
  signal ni3057_move_valid : std_ulogic_vector (1 downto 0);
  signal r_avail : std_ulogic_vector (1 downto 0);
  signal ni3044_avail : std_ulogic_vector (1 downto 0);
  signal r_state : std_ulogic_vector (1 downto 0);
  signal ni3038_state : std_ulogic_vector (1 downto 0);
  signal ni3084_state : std_ulogic_vector (1 downto 0);
  signal r_not_prune : std_ulogic_vector (1 downto 0);
  signal ni3041_not_prune : std_ulogic_vector (1 downto 0);
  signal ni3099_not_prune : std_ulogic_vector (1 downto 0);
  signal r_move : std_ulogic_vector (31 downto 0);
  signal ni2957_move : std_ulogic_vector (31 downto 0);
  signal ni3141_move : std_ulogic_vector (31 downto 0);
  signal ni3142_move : std_ulogic_vector (31 downto 0);
  signal r_m : std_ulogic_vector (31 downto 0);
  signal ni2965_m : std_ulogic_vector (31 downto 0);
  signal ni3067_m : std_ulogic_vector (31 downto 0);
  signal ni3134_m : std_ulogic_vector (31 downto 0);
  signal ni3143_m : std_ulogic_vector (31 downto 0);
  signal r_m1 : std_ulogic_vector (31 downto 0);
  signal ni3068_m1 : std_ulogic_vector (31 downto 0);
  signal ni3135_m1 : std_ulogic_vector (31 downto 0);
  signal r_m2 : std_ulogic_vector (31 downto 0);
  signal ni3069_m2 : std_ulogic_vector (31 downto 0);
  signal ni3136_m2 : std_ulogic_vector (31 downto 0);
  signal r_m_recv : std_ulogic_vector (31 downto 0);
  signal ni3088_m_recv : std_ulogic_vector (31 downto 0);
  signal ni3090_m_recv : std_ulogic_vector (31 downto 0);
  signal ni3092_m_recv : std_ulogic_vector (31 downto 0);
  signal ni3094_m_recv : std_ulogic_vector (31 downto 0);
  signal ni3110_m_recv : std_ulogic_vector (31 downto 0);
  signal ni3116_m_recv : std_ulogic_vector (31 downto 0);
  signal ni3122_m_recv : std_ulogic_vector (31 downto 0);
  signal ni3128_m_recv : std_ulogic_vector (31 downto 0);
  signal ni3137_m_recv : std_ulogic_vector (31 downto 0);
  signal r_x_bak : std_ulogic_vector (7 downto 0);
  signal ni397_x_bak : std_ulogic_vector (7 downto 0);
  signal ni506_x_bak : std_ulogic_vector (7 downto 0);
  signal ni529_x_bak : std_ulogic_vector (7 downto 0);
  signal ni617_x_bak : std_ulogic_vector (7 downto 0);
  signal ni640_x_bak : std_ulogic_vector (7 downto 0);
  signal ni728_x_bak : std_ulogic_vector (7 downto 0);
  signal ni751_x_bak : std_ulogic_vector (7 downto 0);
  signal ni839_x_bak : std_ulogic_vector (7 downto 0);
  signal ni862_x_bak : std_ulogic_vector (7 downto 0);
  signal ni1834_x_bak : std_ulogic_vector (7 downto 0);
  signal p_x_bak_waddr : std_ulogic_vector (5 downto 0);
  signal p_x_bak_raddr : std_ulogic_vector (5 downto 0);
  signal p_x_bak_we : std_ulogic;
  signal p_x_bak_din : std_ulogic_vector (7 downto 0);
  signal p_x_bak_dout : std_ulogic_vector (7 downto 0);
  signal p_x_bak_imm2 : std_ulogic_vector (7 downto 0);
  signal p_x_bak_re2 : std_ulogic;
  signal r_y_bak : std_ulogic_vector (7 downto 0);
  signal ni403_y_bak : std_ulogic_vector (7 downto 0);
  signal ni512_y_bak : std_ulogic_vector (7 downto 0);
  signal ni535_y_bak : std_ulogic_vector (7 downto 0);
  signal ni623_y_bak : std_ulogic_vector (7 downto 0);
  signal ni646_y_bak : std_ulogic_vector (7 downto 0);
  signal ni734_y_bak : std_ulogic_vector (7 downto 0);
  signal ni757_y_bak : std_ulogic_vector (7 downto 0);
  signal ni845_y_bak : std_ulogic_vector (7 downto 0);
  signal ni868_y_bak : std_ulogic_vector (7 downto 0);
  signal ni1840_y_bak : std_ulogic_vector (7 downto 0);
  signal p_y_bak_waddr : std_ulogic_vector (5 downto 0);
  signal p_y_bak_raddr : std_ulogic_vector (5 downto 0);
  signal p_y_bak_we : std_ulogic;
  signal p_y_bak_din : std_ulogic_vector (7 downto 0);
  signal p_y_bak_dout : std_ulogic_vector (7 downto 0);
  signal p_y_bak_imm2 : std_ulogic_vector (7 downto 0);
  signal p_y_bak_re2 : std_ulogic;
  signal r_board_bak : std_ulogic_vector (7 downto 0);
  signal ni409_board_bak : std_ulogic_vector (7 downto 0);
  signal ni518_board_bak : std_ulogic_vector (7 downto 0);
  signal ni541_board_bak : std_ulogic_vector (7 downto 0);
  signal ni629_board_bak : std_ulogic_vector (7 downto 0);
  signal ni652_board_bak : std_ulogic_vector (7 downto 0);
  signal ni740_board_bak : std_ulogic_vector (7 downto 0);
  signal ni763_board_bak : std_ulogic_vector (7 downto 0);
  signal ni851_board_bak : std_ulogic_vector (7 downto 0);
  signal ni874_board_bak : std_ulogic_vector (7 downto 0);
  signal ni1852_board_bak : std_ulogic_vector (7 downto 0);
  signal p_board_bak_waddr : std_ulogic_vector (5 downto 0);
  signal p_board_bak_raddr : std_ulogic_vector (5 downto 0);
  signal p_board_bak_we : std_ulogic;
  signal p_board_bak_din : std_ulogic_vector (7 downto 0);
  signal p_board_bak_dout : std_ulogic_vector (7 downto 0);
  signal p_board_bak_imm2 : std_ulogic_vector (7 downto 0);
  signal p_board_bak_re2 : std_ulogic;
  signal r_count_bak : std_ulogic_vector (7 downto 0);
  signal ni2975_count_bak : std_ulogic_vector (7 downto 0);
  signal ni2977_count_bak : std_ulogic_vector (7 downto 0);
  signal ni2989_count_bak : std_ulogic_vector (7 downto 0);
  signal ni2990_count_bak : std_ulogic_vector (7 downto 0);
  signal ni3001_count_bak : std_ulogic_vector (7 downto 0);
  signal ni3002_count_bak : std_ulogic_vector (7 downto 0);
  signal ni3013_count_bak : std_ulogic_vector (7 downto 0);
  signal ni3014_count_bak : std_ulogic_vector (7 downto 0);
  signal ni3025_count_bak : std_ulogic_vector (7 downto 0);
  signal ni3026_count_bak : std_ulogic_vector (7 downto 0);
  signal ni3144_count_bak : std_ulogic_vector (7 downto 0);
  signal ni6266443_count_bak : std_ulogic_vector (7 downto 0);
  signal ni6266444_count_bak : std_ulogic_vector (7 downto 0);
  signal r_score_self_bak : std_ulogic_vector (7 downto 0);
  signal ni2968_score_self_bak : std_ulogic_vector (7 downto 0);
  signal r_avail_self_bak : std_ulogic_vector (23 downto 0);
  signal ni2967_avail_self_bak : std_ulogic_vector (23 downto 0);
  signal r_alpha : std_ulogic_vector (15 downto 0);
  signal ni2966_alpha : std_ulogic_vector (15 downto 0);
  signal r_beta : std_ulogic_vector (15 downto 0);
  signal ni3034_beta : std_ulogic_vector (15 downto 0);
  signal ni3097_beta : std_ulogic_vector (15 downto 0);
  signal ni3114_beta : std_ulogic_vector (15 downto 0);
  signal ni3120_beta : std_ulogic_vector (15 downto 0);
  signal ni3126_beta : std_ulogic_vector (15 downto 0);
  signal ni3132_beta : std_ulogic_vector (15 downto 0);
  signal ni3140_beta : std_ulogic_vector (15 downto 0);
  signal r_utility : std_ulogic_vector (15 downto 0);
  signal ni3095_utility : std_ulogic_vector (15 downto 0);
  signal ni3112_utility : std_ulogic_vector (15 downto 0);
  signal ni3118_utility : std_ulogic_vector (15 downto 0);
  signal ni3124_utility : std_ulogic_vector (15 downto 0);
  signal ni3130_utility : std_ulogic_vector (15 downto 0);
  signal ni3138_utility : std_ulogic_vector (15 downto 0);
  signal r_suif_tmp : std_ulogic_vector (31 downto 0);
  signal ni2950_suif_tmp : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp0 : std_ulogic_vector (31 downto 0);
  signal ni2948_suif_tmp0 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp1 : std_ulogic_vector (31 downto 0);
  signal ni2940_suif_tmp1 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp00 : std_ulogic_vector (31 downto 0);
  signal ni2941_suif_tmp00 : std_ulogic_vector (31 downto 0);
  signal ni2942_suif_tmp00 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp10 : std_ulogic_vector (31 downto 0);
  signal ni2938_suif_tmp10 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp2 : std_ulogic_vector (31 downto 0);
  signal ni2939_suif_tmp2 : std_ulogic_vector (31 downto 0);
  signal ni2943_suif_tmp2 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp3 : std_ulogic_vector (31 downto 0);
  signal ni2936_suif_tmp3 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp4 : std_ulogic_vector (31 downto 0);
  signal ni2937_suif_tmp4 : std_ulogic_vector (31 downto 0);
  signal ni2944_suif_tmp4 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp5 : std_ulogic_vector (31 downto 0);
  signal ni2964_suif_tmp5 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp6 : std_ulogic_vector (31 downto 0);
  signal ni3028_suif_tmp6 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp7 : std_ulogic_vector (31 downto 0);
  signal ni3036_suif_tmp7 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp8 : std_ulogic_vector (31 downto 0);
  signal ni3043_suif_tmp8 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp9 : std_ulogic_vector (31 downto 0);
  signal ni3107_suif_tmp9 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp11 : std_ulogic_vector (31 downto 0);
  signal ni3046_suif_tmp11 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp12 : std_ulogic_vector (31 downto 0);
  signal ni3105_suif_tmp12 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp13 : std_ulogic_vector (31 downto 0);
  signal ni3048_suif_tmp13 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp14 : std_ulogic_vector (31 downto 0);
  signal ni3103_suif_tmp14 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp15 : std_ulogic_vector (31 downto 0);
  signal ni3050_suif_tmp15 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp16 : std_ulogic_vector (31 downto 0);
  signal ni3101_suif_tmp16 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp17 : std_ulogic_vector (31 downto 0);
  signal ni3064_suif_tmp17 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp18 : std_ulogic_vector (31 downto 0);
  signal ni3065_suif_tmp18 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp19 : std_ulogic_vector (31 downto 0);
  signal ni3070_suif_tmp19 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp20 : std_ulogic_vector (31 downto 0);
  signal ni3071_suif_tmp20 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp21 : std_ulogic_vector (31 downto 0);
  signal ni3074_suif_tmp21 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp22 : std_ulogic_vector (31 downto 0);
  signal ni3077_suif_tmp22 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp23 : std_ulogic_vector (31 downto 0);
  signal ni3080_suif_tmp23 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp24 : std_ulogic_vector (31 downto 0);
  signal ni3083_suif_tmp24 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp25 : std_ulogic_vector (31 downto 0);
  signal ni3087_suif_tmp25 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp26 : std_ulogic_vector (31 downto 0);
  signal ni3089_suif_tmp26 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp27 : std_ulogic_vector (31 downto 0);
  signal ni3091_suif_tmp27 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp28 : std_ulogic_vector (31 downto 0);
  signal ni3093_suif_tmp28 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp29 : std_ulogic_vector (31 downto 0);
  signal ni3096_suif_tmp29 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp30 : std_ulogic_vector (31 downto 0);
  signal ni3098_suif_tmp30 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp31 : std_ulogic_vector (31 downto 0);
  signal ni3108_suif_tmp31 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp32 : std_ulogic_vector (31 downto 0);
  signal ni3109_suif_tmp32 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp33 : std_ulogic_vector (31 downto 0);
  signal ni3113_suif_tmp33 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp34 : std_ulogic_vector (31 downto 0);
  signal ni3115_suif_tmp34 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp35 : std_ulogic_vector (31 downto 0);
  signal ni3119_suif_tmp35 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp36 : std_ulogic_vector (31 downto 0);
  signal ni3121_suif_tmp36 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp37 : std_ulogic_vector (31 downto 0);
  signal ni3125_suif_tmp37 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp38 : std_ulogic_vector (31 downto 0);
  signal ni3127_suif_tmp38 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp39 : std_ulogic_vector (31 downto 0);
  signal ni3131_suif_tmp39 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp40 : std_ulogic_vector (31 downto 0);
  signal ni3133_suif_tmp40 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp41 : std_ulogic_vector (31 downto 0);
  signal ni3139_suif_tmp41 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp42 : std_ulogic_vector (31 downto 0);
  signal ni3149_suif_tmp42 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp43 : std_ulogic_vector (31 downto 0);
  signal ni3152_suif_tmp43 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp44 : std_ulogic_vector (31 downto 0);
  signal ni3201_suif_tmp44 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp45 : std_ulogic_vector (31 downto 0);
  signal ni3206_suif_tmp45 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp46 : std_ulogic_vector (31 downto 0);
  signal ni3255_suif_tmp46 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp47 : std_ulogic_vector (31 downto 0);
  signal ni3260_suif_tmp47 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp48 : std_ulogic_vector (31 downto 0);
  signal ni3281_suif_tmp48 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp49 : std_ulogic_vector (31 downto 0);
  signal ni3279_suif_tmp49 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp_0 : std_ulogic_vector (31 downto 0);
  signal ni2963_suif_tmp_0 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp_1 : std_ulogic_vector (31 downto 0);
  signal ni3271_suif_tmp_1 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp0_0 : std_ulogic_vector (31 downto 0);
  signal ni3272_suif_tmp0_0 : std_ulogic_vector (31 downto 0);
  signal ni3273_suif_tmp0_0 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp1_0 : std_ulogic_vector (31 downto 0);
  signal ni3269_suif_tmp1_0 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp2_0 : std_ulogic_vector (31 downto 0);
  signal ni3270_suif_tmp2_0 : std_ulogic_vector (31 downto 0);
  signal ni3274_suif_tmp2_0 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp3_0 : std_ulogic_vector (31 downto 0);
  signal ni3267_suif_tmp3_0 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp4_0 : std_ulogic_vector (31 downto 0);
  signal ni3268_suif_tmp4_0 : std_ulogic_vector (31 downto 0);
  signal ni3275_suif_tmp4_0 : std_ulogic_vector (31 downto 0);
  signal r_switched : std_ulogic_vector (0 downto 0);
  signal ni6266433_switched : std_ulogic_vector (0 downto 0);
  signal r_count_bak0 : std_ulogic_vector (7 downto 0);
  signal ni6266442_count_bak0 : std_ulogic_vector (7 downto 0);
  signal ni3148_count_bak0 : std_ulogic_vector (7 downto 0);
  signal r_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni2945_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni2946_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni2976_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni2984_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni2988_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni2996_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3000_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3008_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3012_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3020_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3024_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3030_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3056_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3147_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3159_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3165_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3169_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3175_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3179_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3185_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3189_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3195_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3199_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3203_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3213_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3219_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3223_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3229_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3233_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3239_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3243_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3249_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3253_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3257_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3276_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3277_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni2978_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni2986_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni2998_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni3010_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni3022_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni3032_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni3061_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni6266265_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni3167_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni3177_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni3187_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni3197_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni3205_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni6266347_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni3221_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni3231_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni3241_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni3251_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni3259_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni2987_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni2999_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni3011_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni3023_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni3063_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni6266268_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni3168_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni3178_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni3188_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni3198_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni6266350_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni3222_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni3232_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni3242_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni3252_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_3 : std_ulogic_vector (1 downto 0);
  signal ni1350_r_e_g_3 : std_ulogic_vector (1 downto 0);
  signal ni1381_r_e_g_3 : std_ulogic_vector (1 downto 0);
  signal ni1412_r_e_g_3 : std_ulogic_vector (1 downto 0);
  signal ni1443_r_e_g_3 : std_ulogic_vector (1 downto 0);
  signal ni1582_r_e_g_3 : std_ulogic_vector (1 downto 0);
  signal ni1613_r_e_g_3 : std_ulogic_vector (1 downto 0);
  signal ni1644_r_e_g_3 : std_ulogic_vector (1 downto 0);
  signal ni1675_r_e_g_3 : std_ulogic_vector (1 downto 0);
  signal r_r_e_g_4 : std_ulogic_vector (7 downto 0);
  signal ni1852_r_e_g_4 : std_ulogic_vector (7 downto 0);
  signal r_r_e_g_5 : std_ulogic_vector (9 downto 0);
  signal ni6266269_r_e_g_5 : std_ulogic_vector (9 downto 0);
  signal ni6266351_r_e_g_5 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_6 : std_ulogic_vector (9 downto 0);
  signal ni6266272_r_e_g_6 : std_ulogic_vector (9 downto 0);
  signal ni6266354_r_e_g_6 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_7 : std_ulogic_vector (9 downto 0);
  signal ni6266273_r_e_g_7 : std_ulogic_vector (9 downto 0);
  signal ni6266355_r_e_g_7 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_8 : std_ulogic_vector (9 downto 0);
  signal ni6266276_r_e_g_8 : std_ulogic_vector (9 downto 0);
  signal ni6266358_r_e_g_8 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_9 : std_ulogic_vector (9 downto 0);
  signal ni6266277_r_e_g_9 : std_ulogic_vector (9 downto 0);
  signal ni6266359_r_e_g_9 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_10 : std_ulogic_vector (9 downto 0);
  signal ni6266280_r_e_g_10 : std_ulogic_vector (9 downto 0);
  signal ni6266362_r_e_g_10 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_11 : std_ulogic_vector (9 downto 0);
  signal ni6266281_r_e_g_11 : std_ulogic_vector (9 downto 0);
  signal ni6266363_r_e_g_11 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_12 : std_ulogic_vector (9 downto 0);
  signal ni6266284_r_e_g_12 : std_ulogic_vector (9 downto 0);
  signal ni6266366_r_e_g_12 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_13 : std_ulogic_vector (9 downto 0);
  signal ni6266285_r_e_g_13 : std_ulogic_vector (9 downto 0);
  signal ni6266367_r_e_g_13 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_14 : std_ulogic_vector (9 downto 0);
  signal ni6266288_r_e_g_14 : std_ulogic_vector (9 downto 0);
  signal ni6266370_r_e_g_14 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_15 : std_ulogic_vector (9 downto 0);
  signal ni6266289_r_e_g_15 : std_ulogic_vector (9 downto 0);
  signal ni6266371_r_e_g_15 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_16 : std_ulogic_vector (9 downto 0);
  signal ni6266292_r_e_g_16 : std_ulogic_vector (9 downto 0);
  signal ni6266374_r_e_g_16 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_17 : std_ulogic_vector (9 downto 0);
  signal ni6266293_r_e_g_17 : std_ulogic_vector (9 downto 0);
  signal ni6266375_r_e_g_17 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_18 : std_ulogic_vector (9 downto 0);
  signal ni6266296_r_e_g_18 : std_ulogic_vector (9 downto 0);
  signal ni6266378_r_e_g_18 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_19 : std_ulogic_vector (9 downto 0);
  signal ni6266297_r_e_g_19 : std_ulogic_vector (9 downto 0);
  signal ni6266379_r_e_g_19 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_20 : std_ulogic_vector (9 downto 0);
  signal ni6266300_r_e_g_20 : std_ulogic_vector (9 downto 0);
  signal ni6266382_r_e_g_20 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_21 : std_ulogic_vector (9 downto 0);
  signal ni6266301_r_e_g_21 : std_ulogic_vector (9 downto 0);
  signal ni6266383_r_e_g_21 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_22 : std_ulogic_vector (9 downto 0);
  signal ni6266304_r_e_g_22 : std_ulogic_vector (9 downto 0);
  signal ni6266386_r_e_g_22 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_23 : std_ulogic_vector (9 downto 0);
  signal ni6266305_r_e_g_23 : std_ulogic_vector (9 downto 0);
  signal ni6266387_r_e_g_23 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_24 : std_ulogic_vector (9 downto 0);
  signal ni6266308_r_e_g_24 : std_ulogic_vector (9 downto 0);
  signal ni6266390_r_e_g_24 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_25 : std_ulogic_vector (9 downto 0);
  signal ni6266309_r_e_g_25 : std_ulogic_vector (9 downto 0);
  signal ni6266391_r_e_g_25 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_26 : std_ulogic_vector (9 downto 0);
  signal ni6266312_r_e_g_26 : std_ulogic_vector (9 downto 0);
  signal ni6266394_r_e_g_26 : std_ulogic_vector (9 downto 0);
  signal ti2282_piece_sizes : std_ulogic_vector (4 downto 0);
  signal ti1899_piece_sizes : std_ulogic_vector (4 downto 0);
  signal ti1852_board_bak : std_ulogic_vector (5 downto 0);
  signal ti1840_y_bak : std_ulogic_vector (5 downto 0);
  signal ti1834_x_bak : std_ulogic_vector (5 downto 0);
  signal ti1043_piece_sizes : std_ulogic_vector (4 downto 0);
  signal t_26 : std_ulogic_vector (5 downto 0);
  signal t_25 : std_ulogic_vector (5 downto 0);
  signal t_24 : std_ulogic_vector (5 downto 0);
  signal t_23 : std_ulogic_vector (5 downto 0);
  signal t_22 : std_ulogic_vector (5 downto 0);
  signal t_21 : std_ulogic_vector (5 downto 0);
  signal t_20 : std_ulogic_vector (5 downto 0);
  signal t_19 : std_ulogic_vector (5 downto 0);
  signal t_18 : std_ulogic_vector (5 downto 0);
  signal t_17 : std_ulogic_vector (5 downto 0);
  signal t_16 : std_ulogic_vector (5 downto 0);
  signal t_15 : std_ulogic_vector (5 downto 0);
  signal t_14 : std_ulogic_vector (5 downto 0);
  signal t_13 : std_ulogic_vector (5 downto 0);
  signal t_12 : std_ulogic_vector (5 downto 0);
  signal t_11 : std_ulogic_vector (5 downto 0);
  signal t_10 : std_ulogic_vector (5 downto 0);
  signal t_9 : std_ulogic_vector (5 downto 0);
  signal t_8 : std_ulogic_vector (5 downto 0);
  signal t_7 : std_ulogic_vector (5 downto 0);
  signal t_6 : std_ulogic_vector (5 downto 0);
  signal t_5 : std_ulogic_vector (5 downto 0);
  signal t_4 : std_ulogic_vector (5 downto 0);
  signal t_3 : std_ulogic_vector (5 downto 0);
  signal t_2 : std_ulogic_vector (5 downto 0);
  signal t_1 : std_ulogic_vector (5 downto 0);
  signal t_0 : std_ulogic_vector (5 downto 0);
  signal ti361_piece_sizes : std_ulogic_vector (4 downto 0);
  signal s_b70_state : pipeStateType;
  signal s_b70_0 : t_b70_0;
  signal s_b70_1 : t_b70_1;
  signal s_b70_stall : std_ulogic;
  signal s_b70_break : std_ulogic;
  signal s_b70_final : std_ulogic;
  signal s_b70_flushing : std_ulogic;
  signal s_b70_flushed : std_ulogic;
  signal s_b70_done : std_ulogic;
  signal s_b70_vstall : std_ulogic_vector (2 downto 0);
  signal s_b70_vbreak : std_ulogic_vector (2 downto 0);
  signal s_b70_vlast : std_ulogic_vector (2 downto 0);
  signal s_b70_vflush : std_ulogic_vector (2 downto 0);
  signal s_b70_stage : std_ulogic_vector (2 downto 0);
  signal s_b70_vwrite : std_ulogic_vector (2 downto 0);
  signal s_b70_vcont : std_ulogic_vector (2 downto 0);
  signal s_b16s0_en : std_ulogic;
  signal s_b17s0_en : std_ulogic;
  signal s_b30s0_en : std_ulogic;
  signal s_b30s1_en : std_ulogic;
  signal s_b30s2_en : std_ulogic;
  signal s_b32s0_en : std_ulogic;
  signal s_b32s1_en : std_ulogic;
  signal s_b32s2_en : std_ulogic;
  signal s_b34s0_en : std_ulogic;
  signal s_b34s1_en : std_ulogic;
  signal s_b34s2_en : std_ulogic;
  signal s_b36s0_en : std_ulogic;
  signal s_b36s1_en : std_ulogic;
  signal s_b36s2_en : std_ulogic;
  signal s_b40s0_en : std_ulogic;
  signal s_b40s1_en : std_ulogic;
  signal s_b40s2_en : std_ulogic;
  signal s_b42s0_en : std_ulogic;
  signal s_b42s1_en : std_ulogic;
  signal s_b42s2_en : std_ulogic;
  signal s_b44s0_en : std_ulogic;
  signal s_b44s1_en : std_ulogic;
  signal s_b44s2_en : std_ulogic;
  signal s_b46s0_en : std_ulogic;
  signal s_b46s1_en : std_ulogic;
  signal s_b46s2_en : std_ulogic;
  signal s_b67s0_en : std_ulogic;
  signal s_b67s1_en : std_ulogic;
  signal s_b67s2_en : std_ulogic;
  signal s_b67s3_en : std_ulogic;
  signal s_b69s0_en : std_ulogic;
  signal s_b70s0_en : std_ulogic;
  signal s_b72s0_en : std_ulogic;
  signal s_b74s0_en : std_ulogic;
  signal s_b76s0_en : std_ulogic;
begin
  process (clk,reset)
  begin
    if (reset='1') then
      thisState <= init;
    elsif (clk'event and clk='1') then
      if (stateEn = '1') then
        thisState <= nextState;
      end if;
    end if;
  end process;

  s_b16s0_en <= p_stream0_move_input_rdy;
  s_b17s0_en <= (((p_stream0_move_input_rdy and p_stream_minimax_ex1_output_rdy) and p_stream_minimax_ex2_output_rdy) and p_stream_minimax_ex3_output_rdy) and p_stream_minimax_ex4_output_rdy;
  s_b30s0_en <= p_stream_minimax_ex1_output_rdy;
  s_b30s1_en <= p_stream_minimax_ex1_output_rdy;
  s_b30s2_en <= p_stream_minimax_ex1_output_rdy;
  s_b32s0_en <= p_stream_minimax_ex2_output_rdy;
  s_b32s1_en <= p_stream_minimax_ex2_output_rdy;
  s_b32s2_en <= p_stream_minimax_ex2_output_rdy;
  s_b34s0_en <= p_stream_minimax_ex3_output_rdy;
  s_b34s1_en <= p_stream_minimax_ex3_output_rdy;
  s_b34s2_en <= p_stream_minimax_ex3_output_rdy;
  s_b36s0_en <= p_stream_minimax_ex4_output_rdy;
  s_b36s1_en <= p_stream_minimax_ex4_output_rdy;
  s_b36s2_en <= p_stream_minimax_ex4_output_rdy;
  s_b40s0_en <= p_stream_minimax_ex1_output_rdy;
  s_b40s1_en <= p_stream_minimax_ex1_output_rdy;
  s_b40s2_en <= p_stream_minimax_ex1_output_rdy;
  s_b42s0_en <= p_stream_minimax_ex2_output_rdy;
  s_b42s1_en <= p_stream_minimax_ex2_output_rdy;
  s_b42s2_en <= p_stream_minimax_ex2_output_rdy;
  s_b44s0_en <= p_stream_minimax_ex3_output_rdy;
  s_b44s1_en <= p_stream_minimax_ex3_output_rdy;
  s_b44s2_en <= p_stream_minimax_ex3_output_rdy;
  s_b46s0_en <= p_stream_minimax_ex4_output_rdy;
  s_b46s1_en <= p_stream_minimax_ex4_output_rdy;
  s_b46s2_en <= p_stream_minimax_ex4_output_rdy;
  s_b67s0_en <= p_stream_minimax_ex1_output_rdy;
  s_b67s1_en <= p_stream_minimax_ex1_output_rdy;
  s_b67s2_en <= p_stream_minimax_ex1_output_rdy;
  s_b67s3_en <= p_stream_minimax_ex1_input_rdy;
  s_b69s0_en <= (((p_stream0_move_output_rdy and p_stream_minimax_ex1_output_rdy) and p_stream_minimax_ex2_output_rdy) and p_stream_minimax_ex3_output_rdy) and p_stream_minimax_ex4_output_rdy;
  s_b70s0_en <= s_b70_done;
  s_b72s0_en <= ((p_stream_minimax_ex1_output_rdy and p_stream_minimax_ex2_output_rdy) and p_stream_minimax_ex3_output_rdy) and p_stream_minimax_ex4_output_rdy;
  s_b74s0_en <= ((p_stream_minimax_ex1_output_rdy and p_stream_minimax_ex2_output_rdy) and p_stream_minimax_ex3_output_rdy) and p_stream_minimax_ex4_output_rdy;
  s_b76s0_en <= ((p_stream_minimax_ex1_output_rdy and p_stream_minimax_ex2_output_rdy) and p_stream_minimax_ex3_output_rdy) and p_stream_minimax_ex4_output_rdy;
  stateEn <= 
    '0' when thisState = b16s0 and s_b16s0_en = '0' else
    '0' when thisState = b17s0 and s_b17s0_en = '0' else
    '0' when thisState = b30s0 and s_b30s0_en = '0' else
    '0' when thisState = b30s1 and s_b30s1_en = '0' else
    '0' when thisState = b30s2 and s_b30s2_en = '0' else
    '0' when thisState = b32s0 and s_b32s0_en = '0' else
    '0' when thisState = b32s1 and s_b32s1_en = '0' else
    '0' when thisState = b32s2 and s_b32s2_en = '0' else
    '0' when thisState = b34s0 and s_b34s0_en = '0' else
    '0' when thisState = b34s1 and s_b34s1_en = '0' else
    '0' when thisState = b34s2 and s_b34s2_en = '0' else
    '0' when thisState = b36s0 and s_b36s0_en = '0' else
    '0' when thisState = b36s1 and s_b36s1_en = '0' else
    '0' when thisState = b36s2 and s_b36s2_en = '0' else
    '0' when thisState = b40s0 and s_b40s0_en = '0' else
    '0' when thisState = b40s1 and s_b40s1_en = '0' else
    '0' when thisState = b40s2 and s_b40s2_en = '0' else
    '0' when thisState = b42s0 and s_b42s0_en = '0' else
    '0' when thisState = b42s1 and s_b42s1_en = '0' else
    '0' when thisState = b42s2 and s_b42s2_en = '0' else
    '0' when thisState = b44s0 and s_b44s0_en = '0' else
    '0' when thisState = b44s1 and s_b44s1_en = '0' else
    '0' when thisState = b44s2 and s_b44s2_en = '0' else
    '0' when thisState = b46s0 and s_b46s0_en = '0' else
    '0' when thisState = b46s1 and s_b46s1_en = '0' else
    '0' when thisState = b46s2 and s_b46s2_en = '0' else
    '0' when thisState = b67s0 and s_b67s0_en = '0' else
    '0' when thisState = b67s1 and s_b67s1_en = '0' else
    '0' when thisState = b67s2 and s_b67s2_en = '0' else
    '0' when thisState = b67s3 and s_b67s3_en = '0' else
    '0' when thisState = b69s0 and s_b69s0_en = '0' else
    '0' when thisState = b70s0 and s_b70s0_en = '0' else
    '0' when thisState = b72s0 and s_b72s0_en = '0' else
    '0' when thisState = b74s0 and s_b74s0_en = '0' else
    '0' when thisState = b76s0 and s_b76s0_en = '0' else
    '1';

  process (ni3281_suif_tmp48,ni3279_suif_tmp49,ni3275_suif_tmp4_0,ni3271_suif_tmp_1,ni3269_suif_tmp1_0,ni3268_suif_tmp4_0,ni3267_suif_tmp3_0,r_suif_tmp46,r_suif_tmp44,ni3139_suif_tmp41,ni3133_suif_tmp40,ni3131_suif_tmp39,ni3127_suif_tmp38,ni3125_suif_tmp37,ni3121_suif_tmp36,ni3119_suif_tmp35,ni3115_suif_tmp34,ni3113_suif_tmp33,ni3109_suif_tmp32,ni3108_suif_tmp31,ni3107_suif_tmp9,ni3105_suif_tmp12,ni3103_suif_tmp14,ni3101_suif_tmp16,ni3098_suif_tmp30,ni3096_suif_tmp29,ni3093_suif_tmp28,ni3091_suif_tmp27,ni3089_suif_tmp26,ni3087_suif_tmp25,r_suif_tmp24,ni3080_suif_tmp23,ni3077_suif_tmp22,ni3074_suif_tmp21,ni3071_suif_tmp20,ni3070_suif_tmp19,ni3065_suif_tmp18,ni3064_suif_tmp17,ni3050_suif_tmp15,ni3048_suif_tmp13,ni3046_suif_tmp11,ni3043_suif_tmp8,ni3036_suif_tmp7,r_suif_tmp6,ni6266433_switched,ni3260_suif_tmp47,ni3206_suif_tmp45,ni3152_suif_tmp43,ni2964_suif_tmp5,ni2950_suif_tmp,ni2948_suif_tmp0,ni2944_suif_tmp4,ni2940_suif_tmp1,ni2938_suif_tmp10,ni2937_suif_tmp4,ni2936_suif_tmp3,thisState)
  begin
    case thisState is
    when init =>
      nextState <= b0s0;
    when b0s0 =>
      nextState <= b1s0;
    when b1s0 =>
      nextState <= b2s0;
    when b2s0 =>
      if (ni2936_suif_tmp3(0) = '1') then
        nextState <= b3s0;
      elsif ((not ni2936_suif_tmp3(0)) = '1') then
        nextState <= b4s0;
      else
        nextState <= b2s0;
      end if;
    when b3s0 =>
      if (ni2937_suif_tmp4(0) = '1') then
        nextState <= b11s0;
      elsif ((not ni2937_suif_tmp4(0)) = '1') then
        nextState <= b12s0;
      else
        nextState <= b3s0;
      end if;
    when b4s0 =>
      if (ni2938_suif_tmp10(0) = '1') then
        nextState <= b5s0;
      elsif ((not ni2938_suif_tmp10(0)) = '1') then
        nextState <= b6s0;
      else
        nextState <= b4s0;
      end if;
    when b5s0 =>
      nextState <= b10s0;
    when b6s0 =>
      if (ni2940_suif_tmp1(0) = '1') then
        nextState <= b7s0;
      elsif ((not ni2940_suif_tmp1(0)) = '1') then
        nextState <= b8s0;
      else
        nextState <= b6s0;
      end if;
    when b7s0 =>
      nextState <= b9s0;
    when b8s0 =>
      nextState <= b9s0;
    when b9s0 =>
      nextState <= b10s0;
    when b10s0 =>
      if (ni2944_suif_tmp4(0) = '1') then
        nextState <= b11s0;
      elsif ((not ni2944_suif_tmp4(0)) = '1') then
        nextState <= b12s0;
      else
        nextState <= b10s0;
      end if;
    when b11s0 =>
      nextState <= b11s1;
    when b11s1 =>
      nextState <= b13s0;
    when b12s0 =>
      nextState <= b12s1;
    when b12s1 =>
      nextState <= b13s0;
    when b13s0 =>
      if (ni2948_suif_tmp0(0) = '1') then
        nextState <= b2s0;
      elsif ((not ni2948_suif_tmp0(0)) = '1') then
        nextState <= b14s0;
      else
        nextState <= b13s0;
      end if;
    when b14s0 =>
      if (ni2950_suif_tmp(0) = '1') then
        nextState <= b1s0;
      elsif ((not ni2950_suif_tmp(0)) = '1') then
        nextState <= b15s0;
      else
        nextState <= b14s0;
      end if;
    when b15s0 =>
      nextState <= b16s0;
    when b16s0 =>
      nextState <= b16s1;
    when b16s1 =>
      if (ni2964_suif_tmp5(0) = '1') then
        nextState <= b17s0;
      elsif (ni3152_suif_tmp43(0) = '1') then
        nextState <= b72s0;
      elsif (ni3206_suif_tmp45(0) = '1') then
        nextState <= b74s0;
      elsif (ni3260_suif_tmp47(0) = '1') then
        nextState <= b76s0;
      elsif ((not ni6266433_switched(0)) = '1') then
        nextState <= b92s0;
      else
        nextState <= b16s1;
      end if;
    when b17s0 =>
      nextState <= b17s1;
    when b17s1 =>
      nextState <= b18s0;
    when b18s0 =>
      nextState <= b18s1;
    when b18s1 =>
      nextState <= b18s2;
    when b18s2 =>
      nextState <= b18s3;
    when b18s3 =>
      nextState <= b18s4;
    when b18s4 =>
      nextState <= b18s5;
    when b18s5 =>
      nextState <= b18s6;
    when b18s6 =>
      nextState <= b18s7;
    when b18s7 =>
      nextState <= b18s8;
    when b18s8 =>
      nextState <= b18s9;
    when b18s9 =>
      nextState <= b18s10;
    when b18s10 =>
      nextState <= b18s11;
    when b18s11 =>
      nextState <= b18s12;
    when b18s12 =>
      nextState <= b18s13;
    when b18s13 =>
      if (r_suif_tmp6(0) = '1') then
        nextState <= b19s0;
      else
        nextState <= b18s14;
      end if;
    when b18s14 =>
      nextState <= b18s15;
    when b18s15 =>
      nextState <= b18s0;
    when b19s0 =>
      if (ni3036_suif_tmp7(0) = '1') then
        nextState <= b20s0;
      elsif ((not ni3036_suif_tmp7(0)) = '1') then
        nextState <= b21s0;
      else
        nextState <= b19s0;
      end if;
    when b20s0 =>
      nextState <= b21s0;
    when b21s0 =>
      if (ni3043_suif_tmp8(0) = '1') then
        nextState <= b22s0;
      elsif ((not ni3043_suif_tmp8(0)) = '1') then
        nextState <= b54s0;
      else
        nextState <= b21s0;
      end if;
    when b22s0 =>
      if (ni3046_suif_tmp11(0) = '1') then
        nextState <= b23s0;
      elsif ((not ni3046_suif_tmp11(0)) = '1') then
        nextState <= b53s0;
      else
        nextState <= b22s0;
      end if;
    when b23s0 =>
      if (ni3048_suif_tmp13(0) = '1') then
        nextState <= b24s0;
      elsif ((not ni3048_suif_tmp13(0)) = '1') then
        nextState <= b52s0;
      else
        nextState <= b23s0;
      end if;
    when b24s0 =>
      if (ni3050_suif_tmp15(0) = '1') then
        nextState <= b25s0;
      elsif ((not ni3050_suif_tmp15(0)) = '1') then
        nextState <= b51s0;
      else
        nextState <= b24s0;
      end if;
    when b25s0 =>
      nextState <= b25s1;
    when b25s1 =>
      nextState <= b26s0;
    when b26s0 =>
      nextState <= b26s1;
    when b26s1 =>
      if (ni3064_suif_tmp17(0) = '1') then
        nextState <= b26s0;
      elsif ((not ni3064_suif_tmp17(0)) = '1') then
        nextState <= b27s0;
      else
        nextState <= b26s1;
      end if;
    when b27s0 =>
      if (ni3065_suif_tmp18(0) = '1') then
        nextState <= b28s0;
      elsif ((not ni3065_suif_tmp18(0)) = '1') then
        nextState <= b50s0;
      else
        nextState <= b27s0;
      end if;
    when b28s0 =>
      if (ni3070_suif_tmp19(0) = '1') then
        nextState <= b29s0;
      elsif ((not ni3070_suif_tmp19(0)) = '1') then
        nextState <= b38s0;
      else
        nextState <= b28s0;
      end if;
    when b29s0 =>
      if (ni3071_suif_tmp20(0) = '1') then
        nextState <= b30s0;
      elsif ((not ni3071_suif_tmp20(0)) = '1') then
        nextState <= b31s0;
      else
        nextState <= b29s0;
      end if;
    when b30s0 =>
      nextState <= b30s1;
    when b30s1 =>
      nextState <= b30s2;
    when b30s2 =>
      nextState <= b31s0;
    when b31s0 =>
      if (ni3074_suif_tmp21(0) = '1') then
        nextState <= b32s0;
      elsif ((not ni3074_suif_tmp21(0)) = '1') then
        nextState <= b33s0;
      else
        nextState <= b31s0;
      end if;
    when b32s0 =>
      nextState <= b32s1;
    when b32s1 =>
      nextState <= b32s2;
    when b32s2 =>
      nextState <= b33s0;
    when b33s0 =>
      if (ni3077_suif_tmp22(0) = '1') then
        nextState <= b34s0;
      elsif ((not ni3077_suif_tmp22(0)) = '1') then
        nextState <= b35s0;
      else
        nextState <= b33s0;
      end if;
    when b34s0 =>
      nextState <= b34s1;
    when b34s1 =>
      nextState <= b34s2;
    when b34s2 =>
      nextState <= b35s0;
    when b35s0 =>
      if (ni3080_suif_tmp23(0) = '1') then
        nextState <= b36s0;
      elsif ((not ni3080_suif_tmp23(0)) = '1') then
        nextState <= b50s0;
      else
        nextState <= b35s0;
      end if;
    when b36s0 =>
      nextState <= b36s1;
    when b36s1 =>
      nextState <= b36s2;
    when b36s2 =>
      if (r_suif_tmp24(0) = '1') then
        nextState <= b37s0;
      elsif ((not r_suif_tmp24(0)) = '1') then
        nextState <= b50s0;
      else
        nextState <= b36s2;
      end if;
    when b37s0 =>
      nextState <= b50s0;
    when b38s0 =>
      nextState <= b39s0;
    when b39s0 =>
      nextState <= b39s1;
    when b39s1 =>
      if (ni3087_suif_tmp25(0) = '1') then
        nextState <= b40s0;
      elsif ((not ni3087_suif_tmp25(0)) = '1') then
        nextState <= b41s0;
      else
        nextState <= b39s1;
      end if;
    when b40s0 =>
      nextState <= b40s1;
    when b40s1 =>
      nextState <= b40s2;
    when b40s2 =>
      nextState <= b47s0;
    when b41s0 =>
      nextState <= b41s1;
    when b41s1 =>
      if (ni3089_suif_tmp26(0) = '1') then
        nextState <= b42s0;
      elsif ((not ni3089_suif_tmp26(0)) = '1') then
        nextState <= b43s0;
      else
        nextState <= b41s1;
      end if;
    when b42s0 =>
      nextState <= b42s1;
    when b42s1 =>
      nextState <= b42s2;
    when b42s2 =>
      nextState <= b47s0;
    when b43s0 =>
      nextState <= b43s1;
    when b43s1 =>
      if (ni3091_suif_tmp27(0) = '1') then
        nextState <= b44s0;
      elsif ((not ni3091_suif_tmp27(0)) = '1') then
        nextState <= b45s0;
      else
        nextState <= b43s1;
      end if;
    when b44s0 =>
      nextState <= b44s1;
    when b44s1 =>
      nextState <= b44s2;
    when b44s2 =>
      nextState <= b47s0;
    when b45s0 =>
      nextState <= b45s1;
    when b45s1 =>
      if (ni3093_suif_tmp28(0) = '1') then
        nextState <= b46s0;
      elsif ((not ni3093_suif_tmp28(0)) = '1') then
        nextState <= b39s0;
      else
        nextState <= b45s1;
      end if;
    when b46s0 =>
      nextState <= b46s1;
    when b46s1 =>
      nextState <= b46s2;
    when b46s2 =>
      nextState <= b47s0;
    when b47s0 =>
      if (ni3096_suif_tmp29(0) = '1') then
        nextState <= b48s0;
      elsif ((not ni3096_suif_tmp29(0)) = '1') then
        nextState <= b50s0;
      else
        nextState <= b47s0;
      end if;
    when b48s0 =>
      if (ni3098_suif_tmp30(0) = '1') then
        nextState <= b49s0;
      elsif ((not ni3098_suif_tmp30(0)) = '1') then
        nextState <= b50s0;
      else
        nextState <= b48s0;
      end if;
    when b49s0 =>
      nextState <= b50s0;
    when b50s0 =>
      if (ni3101_suif_tmp16(0) = '1') then
        nextState <= b25s0;
      elsif ((not ni3101_suif_tmp16(0)) = '1') then
        nextState <= b51s0;
      else
        nextState <= b50s0;
      end if;
    when b51s0 =>
      if (ni3103_suif_tmp14(0) = '1') then
        nextState <= b24s0;
      elsif ((not ni3103_suif_tmp14(0)) = '1') then
        nextState <= b52s0;
      else
        nextState <= b51s0;
      end if;
    when b52s0 =>
      if (ni3105_suif_tmp12(0) = '1') then
        nextState <= b23s0;
      elsif ((not ni3105_suif_tmp12(0)) = '1') then
        nextState <= b53s0;
      else
        nextState <= b52s0;
      end if;
    when b53s0 =>
      if (ni3107_suif_tmp9(0) = '1') then
        nextState <= b22s0;
      elsif ((not ni3107_suif_tmp9(0)) = '1') then
        nextState <= b54s0;
      else
        nextState <= b53s0;
      end if;
    when b54s0 =>
      if ((not ni3108_suif_tmp31(0)) = '1') then
        nextState <= b66s0;
      else
        nextState <= b54s1;
      end if;
    when b54s1 =>
      nextState <= b54s2;
    when b54s2 =>
      if (ni3109_suif_tmp32(0) = '1') then
        nextState <= b55s0;
      elsif ((not ni3109_suif_tmp32(0)) = '1') then
        nextState <= b57s0;
      else
        nextState <= b54s2;
      end if;
    when b55s0 =>
      if (ni3113_suif_tmp33(0) = '1') then
        nextState <= b56s0;
      elsif ((not ni3113_suif_tmp33(0)) = '1') then
        nextState <= b57s0;
      else
        nextState <= b55s0;
      end if;
    when b56s0 =>
      nextState <= b57s0;
    when b57s0 =>
      nextState <= b57s1;
    when b57s1 =>
      if (ni3115_suif_tmp34(0) = '1') then
        nextState <= b58s0;
      elsif ((not ni3115_suif_tmp34(0)) = '1') then
        nextState <= b60s0;
      else
        nextState <= b57s1;
      end if;
    when b58s0 =>
      if (ni3119_suif_tmp35(0) = '1') then
        nextState <= b59s0;
      elsif ((not ni3119_suif_tmp35(0)) = '1') then
        nextState <= b60s0;
      else
        nextState <= b58s0;
      end if;
    when b59s0 =>
      nextState <= b60s0;
    when b60s0 =>
      nextState <= b60s1;
    when b60s1 =>
      if (ni3121_suif_tmp36(0) = '1') then
        nextState <= b61s0;
      elsif ((not ni3121_suif_tmp36(0)) = '1') then
        nextState <= b63s0;
      else
        nextState <= b60s1;
      end if;
    when b61s0 =>
      if (ni3125_suif_tmp37(0) = '1') then
        nextState <= b62s0;
      elsif ((not ni3125_suif_tmp37(0)) = '1') then
        nextState <= b63s0;
      else
        nextState <= b61s0;
      end if;
    when b62s0 =>
      nextState <= b63s0;
    when b63s0 =>
      nextState <= b63s1;
    when b63s1 =>
      if (ni3127_suif_tmp38(0) = '1') then
        nextState <= b64s0;
      elsif ((not ni3127_suif_tmp38(0)) = '1') then
        nextState <= b54s0;
      else
        nextState <= b63s1;
      end if;
    when b64s0 =>
      if (ni3131_suif_tmp39(0) = '1') then
        nextState <= b65s0;
      elsif ((not ni3131_suif_tmp39(0)) = '1') then
        nextState <= b54s0;
      else
        nextState <= b64s0;
      end if;
    when b65s0 =>
      nextState <= b54s0;
    when b66s0 =>
      if (ni3133_suif_tmp40(0) = '1') then
        nextState <= b67s0;
      elsif ((not ni3133_suif_tmp40(0)) = '1') then
        nextState <= b69s0;
      else
        nextState <= b66s0;
      end if;
    when b67s0 =>
      nextState <= b67s1;
    when b67s1 =>
      nextState <= b67s2;
    when b67s2 =>
      nextState <= b67s3;
    when b67s3 =>
      nextState <= b67s4;
    when b67s4 =>
      if (ni3139_suif_tmp41(0) = '1') then
        nextState <= b68s0;
      elsif ((not ni3139_suif_tmp41(0)) = '1') then
        nextState <= b69s0;
      else
        nextState <= b67s4;
      end if;
    when b68s0 =>
      nextState <= b69s0;
    when b69s0 =>
      nextState <= b70s0;
    when b70s0 =>
      nextState <= b71s0;
    when b71s0 =>
      nextState <= b16s0;
    when b72s0 =>
      nextState <= b72s1;
    when b72s1 =>
      nextState <= b73s0;
    when b73s0 =>
      nextState <= b73s1;
    when b73s1 =>
      nextState <= b73s2;
    when b73s2 =>
      nextState <= b73s3;
    when b73s3 =>
      nextState <= b73s4;
    when b73s4 =>
      nextState <= b73s5;
    when b73s5 =>
      nextState <= b73s6;
    when b73s6 =>
      nextState <= b73s7;
    when b73s7 =>
      nextState <= b73s8;
    when b73s8 =>
      nextState <= b73s9;
    when b73s9 =>
      nextState <= b73s10;
    when b73s10 =>
      nextState <= b73s11;
    when b73s11 =>
      nextState <= b73s12;
    when b73s12 =>
      nextState <= b73s13;
    when b73s13 =>
      if (r_suif_tmp44(0) = '1') then
        nextState <= b16s0;
      else
        nextState <= b73s14;
      end if;
    when b73s14 =>
      nextState <= b73s15;
    when b73s15 =>
      nextState <= b73s0;
    when b74s0 =>
      nextState <= b74s1;
    when b74s1 =>
      nextState <= b75s0;
    when b75s0 =>
      nextState <= b75s1;
    when b75s1 =>
      nextState <= b75s2;
    when b75s2 =>
      nextState <= b75s3;
    when b75s3 =>
      nextState <= b75s4;
    when b75s4 =>
      nextState <= b75s5;
    when b75s5 =>
      nextState <= b75s6;
    when b75s6 =>
      nextState <= b75s7;
    when b75s7 =>
      nextState <= b75s8;
    when b75s8 =>
      nextState <= b75s9;
    when b75s9 =>
      nextState <= b75s10;
    when b75s10 =>
      nextState <= b75s11;
    when b75s11 =>
      nextState <= b75s12;
    when b75s12 =>
      nextState <= b75s13;
    when b75s13 =>
      if (r_suif_tmp46(0) = '1') then
        nextState <= b16s0;
      else
        nextState <= b75s14;
      end if;
    when b75s14 =>
      nextState <= b75s15;
    when b75s15 =>
      nextState <= b75s0;
    when b76s0 =>
      nextState <= b77s0;
    when b77s0 =>
      nextState <= b78s0;
    when b78s0 =>
      if (ni3267_suif_tmp3_0(0) = '1') then
        nextState <= b79s0;
      elsif ((not ni3267_suif_tmp3_0(0)) = '1') then
        nextState <= b80s0;
      else
        nextState <= b78s0;
      end if;
    when b79s0 =>
      if (ni3268_suif_tmp4_0(0) = '1') then
        nextState <= b87s0;
      elsif ((not ni3268_suif_tmp4_0(0)) = '1') then
        nextState <= b88s0;
      else
        nextState <= b79s0;
      end if;
    when b80s0 =>
      if (ni3269_suif_tmp1_0(0) = '1') then
        nextState <= b81s0;
      elsif ((not ni3269_suif_tmp1_0(0)) = '1') then
        nextState <= b82s0;
      else
        nextState <= b80s0;
      end if;
    when b81s0 =>
      nextState <= b86s0;
    when b82s0 =>
      if (ni3271_suif_tmp_1(0) = '1') then
        nextState <= b83s0;
      elsif ((not ni3271_suif_tmp_1(0)) = '1') then
        nextState <= b84s0;
      else
        nextState <= b82s0;
      end if;
    when b83s0 =>
      nextState <= b85s0;
    when b84s0 =>
      nextState <= b85s0;
    when b85s0 =>
      nextState <= b86s0;
    when b86s0 =>
      if (ni3275_suif_tmp4_0(0) = '1') then
        nextState <= b87s0;
      elsif ((not ni3275_suif_tmp4_0(0)) = '1') then
        nextState <= b88s0;
      else
        nextState <= b86s0;
      end if;
    when b87s0 =>
      nextState <= b87s1;
    when b87s1 =>
      nextState <= b89s0;
    when b88s0 =>
      nextState <= b88s1;
    when b88s1 =>
      nextState <= b89s0;
    when b89s0 =>
      if (ni3279_suif_tmp49(0) = '1') then
        nextState <= b78s0;
      elsif ((not ni3279_suif_tmp49(0)) = '1') then
        nextState <= b90s0;
      else
        nextState <= b89s0;
      end if;
    when b90s0 =>
      if (ni3281_suif_tmp48(0) = '1') then
        nextState <= b77s0;
      elsif ((not ni3281_suif_tmp48(0)) = '1') then
        nextState <= b91s0;
      else
        nextState <= b90s0;
      end if;
    when b91s0 =>
      nextState <= b16s0;
    when b92s0 =>
      nextState <= b16s0;
    when b93s0 =>
      nextState <= finished;
    when finished =>
      nextState <= finished;
    when others =>
      nextState <= init;
    end case;
  end process;

  process (clk,reset)
  begin
    if (reset='1') then
      newState <= '1';
    elsif (clk'event and clk='1') then
      case thisState is
      when b70s0 =>
       newState <= not s_b70_stall;
      when  others =>
       newState <= stateEn;
      end case;
    end if;
  end process;

-- b0s0
  ni2930_y <= X"00";

-- b1s0
  ni2933_x <= X"00";

-- b2s0
  ni2936_suif_tmp3 <= "0000000000000000000000000000000" & cmp_less_s(r_x, X"04");

-- b3s0
  ni2937_suif_tmp4 <= r_suif_tmp3;

-- b4s0
  ni2938_suif_tmp10 <= "0000000000000000000000000000000" & cmp_less_s(r_y, X"04");

-- b5s0
  ni2939_suif_tmp2 <= r_suif_tmp10;

-- b6s0
  ni2940_suif_tmp1 <= "0000000000000000000000000000000" & cmp_less_s(X"11", r_x);

-- b7s0
  ni2941_suif_tmp00 <= r_suif_tmp1;

-- b8s0
  ni2942_suif_tmp00 <= "0000000000000000000000000000000" & cmp_less_s(X"11", r_y);

-- b9s0
  ni2943_suif_tmp2 <= r_suif_tmp00;

-- b10s0
  ni2944_suif_tmp4 <= r_suif_tmp2;

-- b11s0
  ni2945_r_e_g_0 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));

-- b11s1
  ni193_board <= X"0f";

-- b12s0
  ni2946_r_e_g_0 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));

-- b12s1
  ni209_board <= X"00";

-- b13s0
  ni2947_x <= add(r_x, X"01");
  ni2948_suif_tmp0 <= "0000000000000000000000000000000" & cmp_less_s(ni2947_x, X"20");

-- b14s0
  ni2949_y <= add(r_y, X"01");
  ni2950_suif_tmp <= "0000000000000000000000000000000" & cmp_less_s(ni2949_y, X"20");

-- b15s0
  ni2951_avail_self <= X"7fffff";
  ni2952_avail_opp <= X"7fffff";
  ni2953_score_self <= X"00";
  ni2954_score_opp <= X"00";

-- b16s0

-- b16s1
  ni2957_move <= r_stream0_move_input;
  ni2958_move_type <= ashr(ni2957_move, 24)(7 downto 0) and X"ff";
  ni2959_m_x <= add(ashr(ni2957_move(7 downto 0), 0) and X"0f", X"03");
  ni2960_m_y <= add(ashr(ni2957_move(11 downto 0), 4)(7 downto 0) and X"0f", X"03");
  ni2961_m_piece <= ashr(ni2957_move(15 downto 0), 8)(7 downto 0) and X"1f";
  ni2962_m_rotate <= ashr(ni2957_move(20 downto 0), 13)(7 downto 0) and X"07";
  ni2963_suif_tmp_0 <= sign_ext(ni2958_move_type, 32);
  ni2964_suif_tmp5 <= "0000000000000000000000000000000" & eq(ni2963_suif_tmp_0(7 downto 0), X"03");
  ni3152_suif_tmp43 <= "0000000000000000000000000000000" & eq(ni2963_suif_tmp_0(7 downto 0), X"01");
  ni3206_suif_tmp45 <= "0000000000000000000000000000000" & eq(ni2963_suif_tmp_0(7 downto 0), X"02");
  ni3260_suif_tmp47 <= "0000000000000000000000000000000" & eq(ni2963_suif_tmp_0(7 downto 0), X"0a");
  ni6266433_switched <= ni3260_suif_tmp47(0 downto 0) or ni3206_suif_tmp45(0 downto 0) or ni3152_suif_tmp43(0 downto 0) or ni2964_suif_tmp5(0 downto 0);

-- b17s0
  ni2967_avail_self_bak <= r_avail_self;
  ni2968_score_self_bak <= r_score_self;
  ni2970_avail_self <= r_avail_self and not shl(X"000001", sign_ext(r_m_piece, 24));
  ni2973_yoff <= r_m_y;
  ni2974_xoff <= r_m_x;
  ni2975_count_bak <= X"00";

-- b17s1
  ni2965_m <= r_stream0_move_input;
  ni2966_alpha <= ashr(ni2965_m, 16)(15 downto 0) and X"ffff";
  ti361_piece_sizes <= r_m_piece(4 downto 0);
  ni361_piece_sizes <= p_piece_sizes_imm2;
  ni2969_size <= ni361_piece_sizes;
  ni2971_score_self <= add(r_score_self, ni2969_size);
  ni2972_size <= sub(ni2969_size, X"01");

-- b18s0
  ni397_x_bak <= r_xoff;
  t_0 <= r_count_bak(5 downto 0);
  ni403_y_bak <= r_yoff;
  t_1 <= r_count_bak(5 downto 0);
  ni2979_y <= add(r_yoff, X"01");
  ni2980_x <= r_xoff;
  ni2981_y1 <= add(r_yoff, X"01");
  ni2982_x1 <= add(r_xoff, X"01");
  ni3027_size <= sub(r_size, X"01");
  ni3028_suif_tmp6 <= "0000000000000000000000000000000" & cmp_less_s(ni3027_size, X"00");
  ni2976_r_e_g_0 <= add(shl(sign_ext(r_yoff, 10), 5), sign_ext(r_xoff, 10));
  ni2978_r_e_g_1 <= add(shl(sign_ext(r_yoff, 10), 5), sign_ext(r_xoff, 10));

-- b18s1
  ni414_board <= p_board_imm2;
  ni409_board_bak <= ni414_board;
  t_2 <= r_count_bak(5 downto 0);
  ni2977_count_bak <= add(r_count_bak, X"01");
  ni426_board <= X"0d";

-- b18s2
  ni506_x_bak <= r_x;
  t_3 <= r_count_bak(5 downto 0);
  ni512_y_bak <= r_y;
  t_4 <= r_count_bak(5 downto 0);
  ni2991_y <= sub(r_yoff, X"01");
  ni2992_x <= r_xoff;
  ni2984_r_e_g_0 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));
  ni2986_r_e_g_1 <= add(shl(sign_ext(r_y1, 10), 5), sign_ext(r_x1, 10));
  ni2987_r_e_g_2 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));

-- b18s3
  ni459_board <= p_board_imm2;
  ni2983_board_t <= ni459_board;
  ni467_board <= p_board_imm;
  ni2985_board_t1 <= ni467_board;
  ni474_board <= ni2983_board_t or X"04";
  ni518_board_bak <= ni2983_board_t;
  t_5 <= r_count_bak(5 downto 0);
  ni2989_count_bak <= add(r_count_bak, X"01");
  ni2988_r_e_g_0 <= add(shl(sign_ext(r_y1, 10), 5), sign_ext(r_x1, 10));

-- b18s4
  ni490_board <= r_board_t1 or X"10";
  ni529_x_bak <= r_x1;
  t_6 <= r_count_bak(5 downto 0);
  ni535_y_bak <= r_y1;
  t_7 <= r_count_bak(5 downto 0);
  ni541_board_bak <= r_board_t1;
  t_8 <= r_count_bak(5 downto 0);
  ni2990_count_bak <= add(r_count_bak, X"01");
  ni2993_y1 <= sub(r_yoff, X"01");
  ni2994_x1 <= sub(r_xoff, X"01");

-- b18s5
  ni617_x_bak <= r_x;
  t_9 <= r_count_bak(5 downto 0);
  ni623_y_bak <= r_y;
  t_10 <= r_count_bak(5 downto 0);
  ni3003_y <= r_yoff;
  ni3004_x <= add(r_xoff, X"01");
  ni2996_r_e_g_0 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));
  ni2998_r_e_g_1 <= add(shl(sign_ext(r_y1, 10), 5), sign_ext(r_x1, 10));
  ni2999_r_e_g_2 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));

-- b18s6
  ni570_board <= p_board_imm2;
  ni2995_board_t <= ni570_board;
  ni578_board <= p_board_imm;
  ni2997_board_t1 <= ni578_board;
  ni585_board <= ni2995_board_t or X"04";
  ni629_board_bak <= ni2995_board_t;
  t_11 <= r_count_bak(5 downto 0);
  ni3001_count_bak <= add(r_count_bak, X"01");
  ni3000_r_e_g_0 <= add(shl(sign_ext(r_y1, 10), 5), sign_ext(r_x1, 10));

-- b18s7
  ni601_board <= r_board_t1 or X"10";
  ni640_x_bak <= r_x1;
  t_12 <= r_count_bak(5 downto 0);
  ni646_y_bak <= r_y1;
  t_13 <= r_count_bak(5 downto 0);
  ni652_board_bak <= r_board_t1;
  t_14 <= r_count_bak(5 downto 0);
  ni3002_count_bak <= add(r_count_bak, X"01");
  ni3005_y1 <= sub(r_yoff, X"01");
  ni3006_x1 <= add(r_xoff, X"01");

-- b18s8
  ni728_x_bak <= r_x;
  t_15 <= r_count_bak(5 downto 0);
  ni734_y_bak <= r_y;
  t_16 <= r_count_bak(5 downto 0);
  ni3015_y <= r_yoff;
  ni3016_x <= sub(r_xoff, X"01");
  ni3008_r_e_g_0 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));
  ni3010_r_e_g_1 <= add(shl(sign_ext(r_y1, 10), 5), sign_ext(r_x1, 10));
  ni3011_r_e_g_2 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));

-- b18s9
  ni681_board <= p_board_imm2;
  ni3007_board_t <= ni681_board;
  ni689_board <= p_board_imm;
  ni3009_board_t1 <= ni689_board;
  ni696_board <= ni3007_board_t or X"04";
  ni740_board_bak <= ni3007_board_t;
  t_17 <= r_count_bak(5 downto 0);
  ni3013_count_bak <= add(r_count_bak, X"01");
  ni3012_r_e_g_0 <= add(shl(sign_ext(r_y1, 10), 5), sign_ext(r_x1, 10));

-- b18s10
  ni712_board <= r_board_t1 or X"10";
  ni751_x_bak <= r_x1;
  t_18 <= r_count_bak(5 downto 0);
  ni757_y_bak <= r_y1;
  t_19 <= r_count_bak(5 downto 0);
  ni763_board_bak <= r_board_t1;
  t_20 <= r_count_bak(5 downto 0);
  ni3014_count_bak <= add(r_count_bak, X"01");
  ni3017_y1 <= add(r_yoff, X"01");
  ni3018_x1 <= sub(r_xoff, X"01");

-- b18s11
  ni839_x_bak <= r_x;
  t_21 <= r_count_bak(5 downto 0);
  ni845_y_bak <= r_y;
  t_22 <= r_count_bak(5 downto 0);
  ni3020_r_e_g_0 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));
  ni3022_r_e_g_1 <= add(shl(sign_ext(r_y1, 10), 5), sign_ext(r_x1, 10));
  ni3023_r_e_g_2 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));

-- b18s12
  ni792_board <= p_board_imm2;
  ni3019_board_t <= ni792_board;
  ni800_board <= p_board_imm;
  ni3021_board_t1 <= ni800_board;
  ni807_board <= ni3019_board_t or X"04";
  ni851_board_bak <= ni3019_board_t;
  t_23 <= r_count_bak(5 downto 0);
  ni3025_count_bak <= add(r_count_bak, X"01");
  ni3024_r_e_g_0 <= add(shl(sign_ext(r_y1, 10), 5), sign_ext(r_x1, 10));

-- b18s13
  ni823_board <= r_board_t1 or X"10";
  ni862_x_bak <= r_x1;
  t_24 <= r_count_bak(5 downto 0);
  ni868_y_bak <= r_y1;
  t_25 <= r_count_bak(5 downto 0);
  ni874_board_bak <= r_board_t1;
  t_26 <= r_count_bak(5 downto 0);
  ni3026_count_bak <= add(r_count_bak, X"01");

-- b18s14
  ni3030_r_e_g_0 <= add(shl(add(shl(sign_ext(r_m_piece, 10), 3), sign_ext(r_m_rotate, 10)), 2), sign_ext(r_size, 10));
  ni3032_r_e_g_1 <= add(shl(add(shl(sign_ext(r_m_piece, 10), 3), sign_ext(r_m_rotate, 10)), 2), sign_ext(r_size, 10));

-- b18s15
  ni903_piece_y <= p_piece_y_imm2;
  ni3029_yoff <= add(r_m_y, ni903_piece_y);
  ni917_piece_x <= p_piece_x_imm2;
  ni3031_xoff <= add(r_m_x, ni917_piece_x);

-- b19s0
  ni3033_moves_found <= "00";
  ni3034_beta <= X"7fff";
  ni3035_m_piece_min <= X"00";
  ni3036_suif_tmp7 <= "0000000000000000000000000000000" & cmp_less_s(r_score_opp, X"19");

-- b20s0
  ni3037_m_piece_min <= X"09";

-- b21s0
  ni3038_state <= "00";
  ni3039_count <= X"00";
  ni3040_next_stream <= X"01";
  ni3041_not_prune <= "01";
  ni3042_m_piece <= X"14";
  ni3043_suif_tmp8 <= "0000000000000000000000000000000" & neq("0000000000000000000000000000000" & cmp_less_equal_s(r_m_piece_min(5 downto 0), "010100") and X"00000001", X"00000000");

-- b22s0
  ni3044_avail <= "0" & neq(sign_ext(r_avail_opp, 32) and shl(X"00000001", sign_ext(r_m_piece, 32)), X"00000000");
  ni3045_m_rotate <= X"00";
  ni3046_suif_tmp11 <= "0000000000000000000000000000000" & neq((X"00000001" and sign_ext(ni3044_avail, 32)) and sign_ext(r_not_prune, 32), X"00000000");

-- b23s0
  ni3047_m_y <= X"04";
  ni3048_suif_tmp13 <= "0000000000000000000000000000000" & neq(X"00000001" and sign_ext(r_not_prune, 32), X"00000000");

-- b24s0
  ni3049_m_x <= X"04";
  ni3050_suif_tmp15 <= "0000000000000000000000000000000" & neq(X"00000001" and sign_ext(r_not_prune, 32), X"00000000");

-- b25s0
  ni3051_lib_check <= "00";
  ni3053_yoff <= r_m_y;
  ni3054_xoff <= r_m_x;

-- b25s1
  ti1043_piece_sizes <= r_m_piece(4 downto 0);
  ni1043_piece_sizes <= p_piece_sizes_imm2;
  ni3052_size <= sub(ni1043_piece_sizes, X"01");

-- b26s0
  ni3059_size <= sub(r_size, X"01");
  ni3056_r_e_g_0 <= add(shl(sign_ext(r_yoff, 10), 5), sign_ext(r_xoff, 10));
  ni3061_r_e_g_1 <= add(shl(add(shl(sign_ext(r_m_piece, 10), 3), sign_ext(r_m_rotate, 10)), 2), sign_ext(ni3059_size, 10));
  ni3063_r_e_g_2 <= add(shl(add(shl(sign_ext(r_m_piece, 10), 3), sign_ext(r_m_rotate, 10)), 2), sign_ext(ni3059_size, 10));

-- b26s1
  ni1056_board <= p_board_imm2;
  ni3055_board_t <= ni1056_board;
  ni3057_move_valid <= "0" & eq(sign_ext(ni3055_board_t, 32) and X"00000008", X"00000000");
  ni3058_lib_check <= r_lib_check or "0" & neq(sign_ext(ni3055_board_t, 32) and X"00000020", X"00000000");
  ni1099_piece_y <= p_piece_y_imm2;
  ni3060_yoff <= add(r_m_y, ni1099_piece_y);
  ni1113_piece_x <= p_piece_x_imm2;
  ni3062_xoff <= add(r_m_x, ni1113_piece_x);
  ni3064_suif_tmp17 <= "0000000000000000000000000000000" & neq("0000000000000000000000000000000" & eq(ni3057_move_valid, "01") and "0000000000000000000000000000000" & cmp_less_equal_s(X"00", r_size), X"00000000");

-- b27s0
  ni3065_suif_tmp18 <= "0000000000000000000000000000000" & neq(r_move_valid and r_lib_check, "00");

-- b28s0
  ni3066_moves_found <= "01";
  ni3067_m <= (((shl(sign_ext(r_m_piece, 32), 8) or shl(sign_ext(r_m_rotate, 32), 13)) or shl(sub(sign_ext(r_m_x, 32), X"00000003"), 0)) or shl(sub(sign_ext(r_m_y, 32), X"00000003"), 4)) or X"04000000";
  ni3068_m1 <= shl(sign_ext(r_alpha, 32), 16);
  ni3069_m2 <= shl(sign_ext(r_beta, 32), 16);
  ni3070_suif_tmp19 <= "0000000000000000000000000000000" & eq(r_state, "00");

-- b29s0
  ni3071_suif_tmp20 <= "0000000000000000000000000000000" & eq(r_next_stream(3 downto 0), X"1");

-- b30s0
  ni3072_count <= add(r_count, X"01");
  ni3073_next_stream <= X"02";

-- b30s1

-- b30s2

-- b31s0
  ni3074_suif_tmp21 <= "0000000000000000000000000000000" & eq(r_next_stream(3 downto 0), X"2");

-- b32s0
  ni3075_count <= add(r_count, X"01");
  ni3076_next_stream <= X"03";

-- b32s1

-- b32s2

-- b33s0
  ni3077_suif_tmp22 <= "0000000000000000000000000000000" & eq(r_next_stream(3 downto 0), X"3");

-- b34s0
  ni3078_count <= add(r_count, X"01");
  ni3079_next_stream <= X"04";

-- b34s1

-- b34s2

-- b35s0
  ni3080_suif_tmp23 <= "0000000000000000000000000000000" & eq(r_next_stream(3 downto 0), X"4");

-- b36s0
  ni3081_count <= add(r_count, X"01");
  ni3082_next_stream <= X"01";
  ni3083_suif_tmp24 <= "0000000000000000000000000000000" & eq(ni3081_count, X"08");

-- b36s1

-- b36s2

-- b37s0
  ni3084_state <= "01";

-- b38s0

-- b39s0
  ni1350_r_e_g_3 <= "0" & mkvec(p_stream_minimax_ex1_input_rdy) and not ("0" & mkvec(p_stream_minimax_ex1_input_eos));

-- b39s1
  ni3088_m_recv <= r_stream_minimax_ex1_input;
  ni3087_suif_tmp25 <= "0000000000000000000000000000000" & neq(r_r_e_g_3, "00");

-- b40s0

-- b40s1

-- b40s2

-- b41s0
  ni1381_r_e_g_3 <= "0" & mkvec(p_stream_minimax_ex2_input_rdy) and not ("0" & mkvec(p_stream_minimax_ex2_input_eos));

-- b41s1
  ni3090_m_recv <= r_stream_minimax_ex2_input;
  ni3089_suif_tmp26 <= "0000000000000000000000000000000" & neq(r_r_e_g_3, "00");

-- b42s0

-- b42s1

-- b42s2

-- b43s0
  ni1412_r_e_g_3 <= "0" & mkvec(p_stream_minimax_ex3_input_rdy) and not ("0" & mkvec(p_stream_minimax_ex3_input_eos));

-- b43s1
  ni3092_m_recv <= r_stream_minimax_ex3_input;
  ni3091_suif_tmp27 <= "0000000000000000000000000000000" & neq(r_r_e_g_3, "00");

-- b44s0

-- b44s1

-- b44s2

-- b45s0
  ni1443_r_e_g_3 <= "0" & mkvec(p_stream_minimax_ex4_input_rdy) and not ("0" & mkvec(p_stream_minimax_ex4_input_eos));

-- b45s1
  ni3094_m_recv <= r_stream_minimax_ex4_input;
  ni3093_suif_tmp28 <= "0000000000000000000000000000000" & neq(r_r_e_g_3, "00");

-- b46s0

-- b46s1

-- b46s2

-- b47s0
  ni3095_utility <= ashr(r_m_recv, 16)(15 downto 0) and X"ffff";
  ni3096_suif_tmp29 <= "0000000000000000000000000000000" & cmp_less_s(ni3095_utility, r_beta);

-- b48s0
  ni3097_beta <= r_utility;
  ni3098_suif_tmp30 <= "0000000000000000000000000000000" & cmp_less_equal_s(ni3097_beta, r_alpha);

-- b49s0
  ni3099_not_prune <= "00";

-- b50s0
  ni3100_m_x <= add(r_m_x, X"01");
  ni3101_suif_tmp16 <= "0000000000000000000000000000000" & neq("0000000000000000000000000000000" & cmp_less_s(ni3100_m_x, X"12") and sign_ext(r_not_prune, 32), X"00000000");

-- b51s0
  ni3102_m_y <= add(r_m_y, X"01");
  ni3103_suif_tmp14 <= "0000000000000000000000000000000" & neq("0000000000000000000000000000000" & cmp_less_s(ni3102_m_y, X"12") and sign_ext(r_not_prune, 32), X"00000000");

-- b52s0
  ni3104_m_rotate <= add(r_m_rotate, X"01");
  ni3105_suif_tmp12 <= "0000000000000000000000000000000" & neq(("0000000000000000000000000000000" & cmp_less_s(ni3104_m_rotate, X"08") and sign_ext(r_avail, 32)) and sign_ext(r_not_prune, 32), X"00000000");

-- b53s0
  ni3106_m_piece <= sub(r_m_piece, X"01");
  ni3107_suif_tmp9 <= "0000000000000000000000000000000" & neq("0000000000000000000000000000000" & cmp_less_equal_s(r_m_piece_min, ni3106_m_piece) and sign_ext(r_not_prune, 32), X"00000000");

-- b54s0
  ni3108_suif_tmp31 <= "0000000000000000000000000000000" & cmp_less_s(X"00", r_count);

-- b54s1
  ni1582_r_e_g_3 <= "0" & mkvec(p_stream_minimax_ex1_input_rdy) and not ("0" & mkvec(p_stream_minimax_ex1_input_eos));

-- b54s2
  ni3110_m_recv <= r_stream_minimax_ex1_input;
  ni3109_suif_tmp32 <= "0000000000000000000000000000000" & neq(r_r_e_g_3, "00");

-- b55s0
  ni3111_count <= sub(r_count, X"01");
  ni3112_utility <= ashr(r_m_recv, 16)(15 downto 0) and X"ffff";
  ni3113_suif_tmp33 <= "0000000000000000000000000000000" & cmp_less_s(ni3112_utility, r_beta);

-- b56s0
  ni3114_beta <= r_utility;

-- b57s0
  ni1613_r_e_g_3 <= "0" & mkvec(p_stream_minimax_ex2_input_rdy) and not ("0" & mkvec(p_stream_minimax_ex2_input_eos));

-- b57s1
  ni3116_m_recv <= r_stream_minimax_ex2_input;
  ni3115_suif_tmp34 <= "0000000000000000000000000000000" & neq(r_r_e_g_3, "00");

-- b58s0
  ni3117_count <= sub(r_count, X"01");
  ni3118_utility <= ashr(r_m_recv, 16)(15 downto 0) and X"ffff";
  ni3119_suif_tmp35 <= "0000000000000000000000000000000" & cmp_less_s(ni3118_utility, r_beta);

-- b59s0
  ni3120_beta <= r_utility;

-- b60s0
  ni1644_r_e_g_3 <= "0" & mkvec(p_stream_minimax_ex3_input_rdy) and not ("0" & mkvec(p_stream_minimax_ex3_input_eos));

-- b60s1
  ni3122_m_recv <= r_stream_minimax_ex3_input;
  ni3121_suif_tmp36 <= "0000000000000000000000000000000" & neq(r_r_e_g_3, "00");

-- b61s0
  ni3123_count <= sub(r_count, X"01");
  ni3124_utility <= ashr(r_m_recv, 16)(15 downto 0) and X"ffff";
  ni3125_suif_tmp37 <= "0000000000000000000000000000000" & cmp_less_s(ni3124_utility, r_beta);

-- b62s0
  ni3126_beta <= r_utility;

-- b63s0
  ni1675_r_e_g_3 <= "0" & mkvec(p_stream_minimax_ex4_input_rdy) and not ("0" & mkvec(p_stream_minimax_ex4_input_eos));

-- b63s1
  ni3128_m_recv <= r_stream_minimax_ex4_input;
  ni3127_suif_tmp38 <= "0000000000000000000000000000000" & neq(r_r_e_g_3, "00");

-- b64s0
  ni3129_count <= sub(r_count, X"01");
  ni3130_utility <= ashr(r_m_recv, 16)(15 downto 0) and X"ffff";
  ni3131_suif_tmp39 <= "0000000000000000000000000000000" & cmp_less_s(ni3130_utility, r_beta);

-- b65s0
  ni3132_beta <= r_utility;

-- b66s0
  ni3133_suif_tmp40 <= "0000000000000000000000000000000" & eq(r_moves_found, "00");

-- b67s0
  ni3134_m <= X"04000000";
  ni3135_m1 <= shl(sign_ext(r_alpha, 32), 16);
  ni3136_m2 <= shl(sign_ext(r_beta, 32), 16);

-- b67s1

-- b67s2

-- b67s3

-- b67s4
  ni3137_m_recv <= r_stream_minimax_ex1_input;
  ni3138_utility <= ashr(ni3137_m_recv, 16)(15 downto 0) and X"ffff";
  ni3139_suif_tmp41 <= "0000000000000000000000000000000" & cmp_less_s(ni3138_utility, r_beta);

-- b68s0
  ni3140_beta <= r_utility;

-- b69s0
  ni3141_move <= r_move and X"0000ffff";
  ni3142_move <= ni3141_move or shl(sign_ext(r_beta, 32), 16);
  ni3143_m <= X"07000000";
  ni3144_count_bak <= sub(r_count_bak, X"01");
  ni6266442_count_bak0 <= ni3144_count_bak;

  process (clk,reset)
  begin
    if (reset='1') then
      s_b70_state <= idle;
    elsif (clk'event and clk='1') then
      case s_b70_state is
      when idle =>
        if (stateEn = '1' and nextState = b70s0) then
          s_b70_state <= init;
        else
          s_b70_state <= idle;
        end if;
      when init =>
        s_b70_state <= run;
      when run =>
        if (s_b70_final = '1' and s_b70_stall = '0') then
          s_b70_state <= flush;
        elsif (s_b70_break = '1') then
          s_b70_state <= flush;
        else
          s_b70_state <= run;
        end if;
      when flush =>
        if (s_b70_flushed = '1') then
          s_b70_state <= idle;
        else
          s_b70_state <= flush;
        end if;
      when others => null;
      end case;
    end if;
  end process;

-- b70 stage 0
  s_b70_vstall(0) <= '0';
  ni6266443_count_bak <= r_count_bak0;
  ni3148_count_bak0 <= sub(r_count_bak0, X"01");
  ni3149_suif_tmp42 <= "0000000000000000000000000000000" & cmp_less_equal_s(X"00", ni3148_count_bak0);
  s_b70_vbreak(0) <= '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (s_b70_vwrite(0) = '1') then
        s_b70_0.f_count_bak0 <= ni3148_count_bak0;
        s_b70_0.f_count_bak <= ni6266443_count_bak;
      end if;
    end if;
  end process;

-- b70 stage 1
  s_b70_vstall(1) <= '0';
  ti1834_x_bak <= s_b70_0.f_count_bak(5 downto 0);
  ni1834_x_bak <= p_x_bak_imm2;
  ni3145_xoff <= ni1834_x_bak;
  ti1840_y_bak <= s_b70_0.f_count_bak(5 downto 0);
  ni1840_y_bak <= p_y_bak_imm2;
  ni3146_yoff <= ni1840_y_bak;
  ti1852_board_bak <= s_b70_0.f_count_bak(5 downto 0);
  ni1852_board_bak <= p_board_bak_imm2;
  ni6266444_count_bak <= s_b70_0.f_count_bak0;
  ni3147_r_e_g_0 <= add(shl(sign_ext(ni3146_yoff, 10), 5), sign_ext(ni3145_xoff, 10));
  s_b70_vbreak(1) <= '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (s_b70_vwrite(1) = '1') then
        s_b70_1.f_r_e_g_0 <= ni3147_r_e_g_0;
        s_b70_1.f_r_e_g_4 <= ni1852_board_bak;
      end if;
    end if;
  end process;

-- b70 stage 2
  s_b70_vstall(2) <= '0';
  ni1845_board <= s_b70_1.f_r_e_g_4;
  s_b70_vbreak(2) <= '0';
  process (clk,reset)
  begin
    if (reset='1') then
      s_b70_vlast <= "000";
    elsif (clk'event and clk='1') then
      if (s_b70_state = idle) then
        s_b70_vlast <= "000";
      end if;
    end if;
  end process;

  with s_b70_state select
    s_b70_break <= 
      '1' when flush,
      '0' when others;
  process (clk,reset)
  begin
    if (reset='1') then
      s_b70_stage <= "000";
    elsif (clk'event and clk='1') then
      if (s_b70_state = idle) then
       s_b70_stage <= "000";
      elsif (thisState = b70s0 and s_b70_stall = '0') then
       s_b70_stage <= s_b70_vcont(1 downto 0) & (not s_b70_break and not s_b70_flushing);
      end if;    end if;
  end process;

  process (clk,reset)
  begin
    if (reset='1') then
      s_b70_vflush <= "000";
    elsif (clk'event and clk='1') then
      if (s_b70_state = idle) then
       s_b70_vflush <= "000";
      elsif (s_b70_stall = '0') then
       s_b70_vflush <= (s_b70_vflush(1 downto 0) or s_b70_vbreak(1 downto 0)) & '0';
      end if;    end if;
  end process;

  s_b70_stall <= 
    '0' when (s_b70_vstall and s_b70_stage) = "000" else
    '1';
  s_b70_vwrite(0) <= 
    s_b70_stage(0) when s_b70_stall = '0' else
    '0';
  s_b70_vwrite(1) <= 
    s_b70_stage(1) when s_b70_stall = '0' else
    '0';
  s_b70_vwrite(2) <= 
    s_b70_stage(2) when s_b70_stall = '0' else
    '0';
  s_b70_vcont(0) <= s_b70_stage(0);
  s_b70_vcont(1) <= s_b70_stage(1);
  s_b70_vcont(2) <= '0';
  s_b70_final <= 
    '1' when (s_b70_stage(0) and not ni3149_suif_tmp42(0)) = '1' else
    '0';
  s_b70_flushing <= 
    '1' when s_b70_state = flush else
    s_b70_final;
  s_b70_flushed <= 
    '1' when s_b70_stall = '0' and (s_b70_vflush or s_b70_stage) = "000" else
    '1' when s_b70_vflush(2) = '1' else
    '0';
  with s_b70_state select
    s_b70_done <= 
      '0' when init,
      '0' when run,
      s_b70_flushed when flush,
      '0' when others;
-- b71s0
  ni3150_score_self <= r_score_self_bak;
  ni3151_avail_self <= r_avail_self_bak;

-- b72s0
  ni3154_avail_self <= r_avail_self and not shl(X"000001", sign_ext(r_m_piece, 24));
  ni3157_yoff <= r_m_y;
  ni3158_xoff <= r_m_x;

-- b72s1
  ti1899_piece_sizes <= r_m_piece(4 downto 0);
  ni1899_piece_sizes <= p_piece_sizes_imm2;
  ni3153_size <= ni1899_piece_sizes;
  ni3155_score_self <= add(r_score_self, ni3153_size);
  ni3156_size <= sub(ni3153_size, X"01");

-- b73s0
  ni3160_y <= add(r_yoff, X"01");
  ni3161_x <= r_xoff;
  ni3162_y1 <= add(r_yoff, X"01");
  ni3163_x1 <= add(r_xoff, X"01");
  ni3170_y <= sub(r_yoff, X"01");
  ni3171_x <= r_xoff;
  ni3172_y1 <= sub(r_yoff, X"01");
  ni3173_x1 <= sub(r_xoff, X"01");
  ni3180_y <= r_yoff;
  ni3181_x <= add(r_xoff, X"01");
  ni3182_y1 <= sub(r_yoff, X"01");
  ni3183_x1 <= add(r_xoff, X"01");
  ni3190_y <= r_yoff;
  ni3191_x <= sub(r_xoff, X"01");
  ni3192_y1 <= add(r_yoff, X"01");
  ni3193_x1 <= sub(r_xoff, X"01");
  ni3200_size <= sub(r_size, X"01");
  ni3201_suif_tmp44 <= "0000000000000000000000000000000" & cmp_less_s(ni3200_size, X"00");
  ni3159_r_e_g_0 <= add(shl(sign_ext(r_yoff, 10), 5), sign_ext(r_xoff, 10));
  ni6266265_r_e_g_1 <= sign_ext(ni3160_y, 10);
  ni6266268_r_e_g_2 <= sign_ext(ni3161_x, 10);
  ni6266269_r_e_g_5 <= sign_ext(ni3162_y1, 10);
  ni6266272_r_e_g_6 <= sign_ext(ni3163_x1, 10);
  ni6266273_r_e_g_7 <= sign_ext(ni3160_y, 10);
  ni6266276_r_e_g_8 <= sign_ext(ni3161_x, 10);
  ni6266277_r_e_g_9 <= sign_ext(ni3162_y1, 10);
  ni6266280_r_e_g_10 <= sign_ext(ni3163_x1, 10);
  ni6266281_r_e_g_11 <= sign_ext(ni3170_y, 10);
  ni6266284_r_e_g_12 <= sign_ext(ni3171_x, 10);
  ni6266285_r_e_g_13 <= sign_ext(ni3172_y1, 10);
  ni6266288_r_e_g_14 <= sign_ext(ni3173_x1, 10);
  ni6266289_r_e_g_15 <= sign_ext(ni3170_y, 10);
  ni6266292_r_e_g_16 <= sign_ext(ni3171_x, 10);
  ni6266293_r_e_g_17 <= sign_ext(ni3172_y1, 10);
  ni6266296_r_e_g_18 <= sign_ext(ni3173_x1, 10);
  ni6266297_r_e_g_19 <= sign_ext(ni3180_y, 10);
  ni6266300_r_e_g_20 <= sign_ext(ni3181_x, 10);
  ni6266301_r_e_g_21 <= sign_ext(ni3182_y1, 10);
  ni6266304_r_e_g_22 <= sign_ext(ni3183_x1, 10);
  ni6266305_r_e_g_23 <= sign_ext(ni3180_y, 10);
  ni6266308_r_e_g_24 <= sign_ext(ni3181_x, 10);
  ni6266309_r_e_g_25 <= sign_ext(ni3182_y1, 10);
  ni6266312_r_e_g_26 <= sign_ext(ni3183_x1, 10);

-- b73s1
  ni1933_board <= X"0d";

-- b73s2
  ni3165_r_e_g_0 <= add(shl(r_r_e_g_1, 5), r_r_e_g_2);
  ni3167_r_e_g_1 <= add(shl(r_r_e_g_5, 5), r_r_e_g_6);
  ni3168_r_e_g_2 <= add(shl(r_r_e_g_7, 5), r_r_e_g_8);

-- b73s3
  ni1966_board <= p_board_imm2;
  ni3164_board_t <= ni1966_board;
  ni1974_board <= p_board_imm;
  ni3166_board_t1 <= ni1974_board;
  ni1981_board <= ni3164_board_t or X"04";
  ni3169_r_e_g_0 <= add(shl(r_r_e_g_9, 5), r_r_e_g_10);

-- b73s4
  ni1997_board <= r_board_t1 or X"10";

-- b73s5
  ni3175_r_e_g_0 <= add(shl(r_r_e_g_11, 5), r_r_e_g_12);
  ni3177_r_e_g_1 <= add(shl(r_r_e_g_13, 5), r_r_e_g_14);
  ni3178_r_e_g_2 <= add(shl(r_r_e_g_15, 5), r_r_e_g_16);

-- b73s6
  ni2031_board <= p_board_imm2;
  ni3174_board_t <= ni2031_board;
  ni2039_board <= p_board_imm;
  ni3176_board_t1 <= ni2039_board;
  ni2046_board <= ni3174_board_t or X"04";
  ni3179_r_e_g_0 <= add(shl(r_r_e_g_17, 5), r_r_e_g_18);

-- b73s7
  ni2062_board <= r_board_t1 or X"10";

-- b73s8
  ni3185_r_e_g_0 <= add(shl(r_r_e_g_19, 5), r_r_e_g_20);
  ni3187_r_e_g_1 <= add(shl(r_r_e_g_21, 5), r_r_e_g_22);
  ni3188_r_e_g_2 <= add(shl(r_r_e_g_23, 5), r_r_e_g_24);

-- b73s9
  ni2096_board <= p_board_imm2;
  ni3184_board_t <= ni2096_board;
  ni2104_board <= p_board_imm;
  ni3186_board_t1 <= ni2104_board;
  ni2111_board <= ni3184_board_t or X"04";
  ni3189_r_e_g_0 <= add(shl(r_r_e_g_25, 5), r_r_e_g_26);

-- b73s10
  ni2127_board <= r_board_t1 or X"10";

-- b73s11
  ni3195_r_e_g_0 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));
  ni3197_r_e_g_1 <= add(shl(sign_ext(r_y1, 10), 5), sign_ext(r_x1, 10));
  ni3198_r_e_g_2 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));

-- b73s12
  ni2161_board <= p_board_imm2;
  ni3194_board_t <= ni2161_board;
  ni2169_board <= p_board_imm;
  ni3196_board_t1 <= ni2169_board;
  ni2176_board <= ni3194_board_t or X"04";
  ni3199_r_e_g_0 <= add(shl(sign_ext(r_y1, 10), 5), sign_ext(r_x1, 10));

-- b73s13
  ni2192_board <= r_board_t1 or X"10";

-- b73s14
  ni3203_r_e_g_0 <= add(shl(add(shl(sign_ext(r_m_piece, 10), 3), sign_ext(r_m_rotate, 10)), 2), sign_ext(r_size, 10));
  ni3205_r_e_g_1 <= add(shl(add(shl(sign_ext(r_m_piece, 10), 3), sign_ext(r_m_rotate, 10)), 2), sign_ext(r_size, 10));

-- b73s15
  ni2226_piece_y <= p_piece_y_imm2;
  ni3202_yoff <= add(r_m_y, ni2226_piece_y);
  ni2240_piece_x <= p_piece_x_imm2;
  ni3204_xoff <= add(r_m_x, ni2240_piece_x);

-- b74s0
  ni3208_avail_opp <= r_avail_opp and not shl(X"000001", sign_ext(r_m_piece, 24));
  ni3211_yoff <= r_m_y;
  ni3212_xoff <= r_m_x;

-- b74s1
  ti2282_piece_sizes <= r_m_piece(4 downto 0);
  ni2282_piece_sizes <= p_piece_sizes_imm2;
  ni3207_size <= ni2282_piece_sizes;
  ni3209_score_opp <= add(r_score_opp, ni3207_size);
  ni3210_size <= sub(ni3207_size, X"01");

-- b75s0
  ni3214_y <= add(r_yoff, X"01");
  ni3215_x <= r_xoff;
  ni3216_y1 <= add(r_yoff, X"01");
  ni3217_x1 <= add(r_xoff, X"01");
  ni3224_y <= sub(r_yoff, X"01");
  ni3225_x <= r_xoff;
  ni3226_y1 <= sub(r_yoff, X"01");
  ni3227_x1 <= sub(r_xoff, X"01");
  ni3234_y <= r_yoff;
  ni3235_x <= add(r_xoff, X"01");
  ni3236_y1 <= sub(r_yoff, X"01");
  ni3237_x1 <= add(r_xoff, X"01");
  ni3244_y <= r_yoff;
  ni3245_x <= sub(r_xoff, X"01");
  ni3246_y1 <= add(r_yoff, X"01");
  ni3247_x1 <= sub(r_xoff, X"01");
  ni3254_size <= sub(r_size, X"01");
  ni3255_suif_tmp46 <= "0000000000000000000000000000000" & cmp_less_s(ni3254_size, X"00");
  ni3213_r_e_g_0 <= add(shl(sign_ext(r_yoff, 10), 5), sign_ext(r_xoff, 10));
  ni6266347_r_e_g_1 <= sign_ext(ni3214_y, 10);
  ni6266350_r_e_g_2 <= sign_ext(ni3215_x, 10);
  ni6266351_r_e_g_5 <= sign_ext(ni3216_y1, 10);
  ni6266354_r_e_g_6 <= sign_ext(ni3217_x1, 10);
  ni6266355_r_e_g_7 <= sign_ext(ni3214_y, 10);
  ni6266358_r_e_g_8 <= sign_ext(ni3215_x, 10);
  ni6266359_r_e_g_9 <= sign_ext(ni3216_y1, 10);
  ni6266362_r_e_g_10 <= sign_ext(ni3217_x1, 10);
  ni6266363_r_e_g_11 <= sign_ext(ni3224_y, 10);
  ni6266366_r_e_g_12 <= sign_ext(ni3225_x, 10);
  ni6266367_r_e_g_13 <= sign_ext(ni3226_y1, 10);
  ni6266370_r_e_g_14 <= sign_ext(ni3227_x1, 10);
  ni6266371_r_e_g_15 <= sign_ext(ni3224_y, 10);
  ni6266374_r_e_g_16 <= sign_ext(ni3225_x, 10);
  ni6266375_r_e_g_17 <= sign_ext(ni3226_y1, 10);
  ni6266378_r_e_g_18 <= sign_ext(ni3227_x1, 10);
  ni6266379_r_e_g_19 <= sign_ext(ni3234_y, 10);
  ni6266382_r_e_g_20 <= sign_ext(ni3235_x, 10);
  ni6266383_r_e_g_21 <= sign_ext(ni3236_y1, 10);
  ni6266386_r_e_g_22 <= sign_ext(ni3237_x1, 10);
  ni6266387_r_e_g_23 <= sign_ext(ni3234_y, 10);
  ni6266390_r_e_g_24 <= sign_ext(ni3235_x, 10);
  ni6266391_r_e_g_25 <= sign_ext(ni3236_y1, 10);
  ni6266394_r_e_g_26 <= sign_ext(ni3237_x1, 10);

-- b75s1
  ni2316_board <= X"0e";

-- b75s2
  ni3219_r_e_g_0 <= add(shl(r_r_e_g_1, 5), r_r_e_g_2);
  ni3221_r_e_g_1 <= add(shl(r_r_e_g_5, 5), r_r_e_g_6);
  ni3222_r_e_g_2 <= add(shl(r_r_e_g_7, 5), r_r_e_g_8);

-- b75s3
  ni2349_board <= p_board_imm2;
  ni3218_board_t <= ni2349_board;
  ni2357_board <= p_board_imm;
  ni3220_board_t1 <= ni2357_board;
  ni2364_board <= ni3218_board_t or X"08";
  ni3223_r_e_g_0 <= add(shl(r_r_e_g_9, 5), r_r_e_g_10);

-- b75s4
  ni2380_board <= r_board_t1 or X"20";

-- b75s5
  ni3229_r_e_g_0 <= add(shl(r_r_e_g_11, 5), r_r_e_g_12);
  ni3231_r_e_g_1 <= add(shl(r_r_e_g_13, 5), r_r_e_g_14);
  ni3232_r_e_g_2 <= add(shl(r_r_e_g_15, 5), r_r_e_g_16);

-- b75s6
  ni2414_board <= p_board_imm2;
  ni3228_board_t <= ni2414_board;
  ni2422_board <= p_board_imm;
  ni3230_board_t1 <= ni2422_board;
  ni2429_board <= ni3228_board_t or X"08";
  ni3233_r_e_g_0 <= add(shl(r_r_e_g_17, 5), r_r_e_g_18);

-- b75s7
  ni2445_board <= r_board_t1 or X"20";

-- b75s8
  ni3239_r_e_g_0 <= add(shl(r_r_e_g_19, 5), r_r_e_g_20);
  ni3241_r_e_g_1 <= add(shl(r_r_e_g_21, 5), r_r_e_g_22);
  ni3242_r_e_g_2 <= add(shl(r_r_e_g_23, 5), r_r_e_g_24);

-- b75s9
  ni2479_board <= p_board_imm2;
  ni3238_board_t <= ni2479_board;
  ni2487_board <= p_board_imm;
  ni3240_board_t1 <= ni2487_board;
  ni2494_board <= ni3238_board_t or X"08";
  ni3243_r_e_g_0 <= add(shl(r_r_e_g_25, 5), r_r_e_g_26);

-- b75s10
  ni2510_board <= r_board_t1 or X"20";

-- b75s11
  ni3249_r_e_g_0 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));
  ni3251_r_e_g_1 <= add(shl(sign_ext(r_y1, 10), 5), sign_ext(r_x1, 10));
  ni3252_r_e_g_2 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));

-- b75s12
  ni2544_board <= p_board_imm2;
  ni3248_board_t <= ni2544_board;
  ni2552_board <= p_board_imm;
  ni3250_board_t1 <= ni2552_board;
  ni2559_board <= ni3248_board_t or X"08";
  ni3253_r_e_g_0 <= add(shl(sign_ext(r_y1, 10), 5), sign_ext(r_x1, 10));

-- b75s13
  ni2575_board <= r_board_t1 or X"20";

-- b75s14
  ni3257_r_e_g_0 <= add(shl(add(shl(sign_ext(r_m_piece, 10), 3), sign_ext(r_m_rotate, 10)), 2), sign_ext(r_size, 10));
  ni3259_r_e_g_1 <= add(shl(add(shl(sign_ext(r_m_piece, 10), 3), sign_ext(r_m_rotate, 10)), 2), sign_ext(r_size, 10));

-- b75s15
  ni2609_piece_y <= p_piece_y_imm2;
  ni3256_yoff <= add(r_m_y, ni2609_piece_y);
  ni2623_piece_x <= p_piece_x_imm2;
  ni3258_xoff <= add(r_m_x, ni2623_piece_x);

-- b76s0
  ni3261_y <= X"00";

-- b77s0
  ni3264_x <= X"00";

-- b78s0
  ni3267_suif_tmp3_0 <= "0000000000000000000000000000000" & cmp_less_s(r_x, X"04");

-- b79s0
  ni3268_suif_tmp4_0 <= r_suif_tmp3_0;

-- b80s0
  ni3269_suif_tmp1_0 <= "0000000000000000000000000000000" & cmp_less_s(r_y, X"04");

-- b81s0
  ni3270_suif_tmp2_0 <= r_suif_tmp1_0;

-- b82s0
  ni3271_suif_tmp_1 <= "0000000000000000000000000000000" & cmp_less_s(X"11", r_x);

-- b83s0
  ni3272_suif_tmp0_0 <= r_suif_tmp_1;

-- b84s0
  ni3273_suif_tmp0_0 <= "0000000000000000000000000000000" & cmp_less_s(X"11", r_y);

-- b85s0
  ni3274_suif_tmp2_0 <= r_suif_tmp0_0;

-- b86s0
  ni3275_suif_tmp4_0 <= r_suif_tmp2_0;

-- b87s0
  ni3276_r_e_g_0 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));

-- b87s1
  ni2711_board <= X"0f";

-- b88s0
  ni3277_r_e_g_0 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));

-- b88s1
  ni2727_board <= X"00";

-- b89s0
  ni3278_x <= add(r_x, X"01");
  ni3279_suif_tmp49 <= "0000000000000000000000000000000" & cmp_less_s(ni3278_x, X"20");

-- b90s0
  ni3280_y <= add(r_y, X"01");
  ni3281_suif_tmp48 <= "0000000000000000000000000000000" & cmp_less_s(ni3280_y, X"20");

-- b91s0
  ni3282_avail_self <= X"7fffff";
  ni3283_avail_opp <= X"7fffff";
  ni3284_score_self <= X"00";
  ni3285_score_opp <= X"00";

-- b92s0

-- b93s0

-- 


  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b0s0 =>
        r_y <= ni2930_y;
      when b14s0 =>
        r_y <= ni2949_y;
      when b18s0 =>
        r_y <= ni2979_y;
      when b18s2 =>
        r_y <= ni2991_y;
      when b18s5 =>
        r_y <= ni3003_y;
      when b18s8 =>
        r_y <= ni3015_y;
      when b73s0 =>
        r_y <= ni3190_y;
      when b75s0 =>
        r_y <= ni3244_y;
      when b76s0 =>
        if (s_b76s0_en = '1') then
          r_y <= ni3261_y;
        end if;
      when b90s0 =>
        r_y <= ni3280_y;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b1s0 =>
        r_x <= ni2933_x;
      when b13s0 =>
        r_x <= ni2947_x;
      when b18s0 =>
        r_x <= ni2980_x;
      when b18s2 =>
        r_x <= ni2992_x;
      when b18s5 =>
        r_x <= ni3004_x;
      when b18s8 =>
        r_x <= ni3016_x;
      when b73s0 =>
        r_x <= ni3191_x;
      when b75s0 =>
        r_x <= ni3245_x;
      when b77s0 =>
        r_x <= ni3264_x;
      when b89s0 =>
        r_x <= ni3278_x;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b2s0 =>
        r_suif_tmp3 <= ni2936_suif_tmp3;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b3s0 =>
        r_suif_tmp4 <= ni2937_suif_tmp4;
      when b10s0 =>
        r_suif_tmp4 <= ni2944_suif_tmp4;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b4s0 =>
        r_suif_tmp10 <= ni2938_suif_tmp10;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b5s0 =>
        r_suif_tmp2 <= ni2939_suif_tmp2;
      when b9s0 =>
        r_suif_tmp2 <= ni2943_suif_tmp2;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b6s0 =>
        r_suif_tmp1 <= ni2940_suif_tmp1;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b7s0 =>
        r_suif_tmp00 <= ni2941_suif_tmp00;
      when b8s0 =>
        r_suif_tmp00 <= ni2942_suif_tmp00;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b11s0 =>
        r_r_e_g_0 <= ni2945_r_e_g_0;
      when b12s0 =>
        r_r_e_g_0 <= ni2946_r_e_g_0;
      when b18s0 =>
        r_r_e_g_0 <= ni2976_r_e_g_0;
      when b18s2 =>
        r_r_e_g_0 <= ni2984_r_e_g_0;
      when b18s3 =>
        r_r_e_g_0 <= ni2988_r_e_g_0;
      when b18s5 =>
        r_r_e_g_0 <= ni2996_r_e_g_0;
      when b18s6 =>
        r_r_e_g_0 <= ni3000_r_e_g_0;
      when b18s8 =>
        r_r_e_g_0 <= ni3008_r_e_g_0;
      when b18s9 =>
        r_r_e_g_0 <= ni3012_r_e_g_0;
      when b18s11 =>
        r_r_e_g_0 <= ni3020_r_e_g_0;
      when b18s12 =>
        r_r_e_g_0 <= ni3024_r_e_g_0;
      when b18s14 =>
        r_r_e_g_0 <= ni3030_r_e_g_0;
      when b26s0 =>
        r_r_e_g_0 <= ni3056_r_e_g_0;
      when b73s0 =>
        r_r_e_g_0 <= ni3159_r_e_g_0;
      when b73s2 =>
        r_r_e_g_0 <= ni3165_r_e_g_0;
      when b73s3 =>
        r_r_e_g_0 <= ni3169_r_e_g_0;
      when b73s5 =>
        r_r_e_g_0 <= ni3175_r_e_g_0;
      when b73s6 =>
        r_r_e_g_0 <= ni3179_r_e_g_0;
      when b73s8 =>
        r_r_e_g_0 <= ni3185_r_e_g_0;
      when b73s9 =>
        r_r_e_g_0 <= ni3189_r_e_g_0;
      when b73s11 =>
        r_r_e_g_0 <= ni3195_r_e_g_0;
      when b73s12 =>
        r_r_e_g_0 <= ni3199_r_e_g_0;
      when b73s14 =>
        r_r_e_g_0 <= ni3203_r_e_g_0;
      when b75s0 =>
        r_r_e_g_0 <= ni3213_r_e_g_0;
      when b75s2 =>
        r_r_e_g_0 <= ni3219_r_e_g_0;
      when b75s3 =>
        r_r_e_g_0 <= ni3223_r_e_g_0;
      when b75s5 =>
        r_r_e_g_0 <= ni3229_r_e_g_0;
      when b75s6 =>
        r_r_e_g_0 <= ni3233_r_e_g_0;
      when b75s8 =>
        r_r_e_g_0 <= ni3239_r_e_g_0;
      when b75s9 =>
        r_r_e_g_0 <= ni3243_r_e_g_0;
      when b75s11 =>
        r_r_e_g_0 <= ni3249_r_e_g_0;
      when b75s12 =>
        r_r_e_g_0 <= ni3253_r_e_g_0;
      when b75s14 =>
        r_r_e_g_0 <= ni3257_r_e_g_0;
      when b87s0 =>
        r_r_e_g_0 <= ni3276_r_e_g_0;
      when b88s0 =>
        r_r_e_g_0 <= ni3277_r_e_g_0;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b13s0 =>
        r_suif_tmp0 <= ni2948_suif_tmp0;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b14s0 =>
        r_suif_tmp <= ni2950_suif_tmp;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b15s0 =>
        r_avail_self <= ni2951_avail_self;
      when b17s0 =>
        if (s_b17s0_en = '1') then
          r_avail_self <= ni2970_avail_self;
        end if;
      when b71s0 =>
        r_avail_self <= ni3151_avail_self;
      when b72s0 =>
        if (s_b72s0_en = '1') then
          r_avail_self <= ni3154_avail_self;
        end if;
      when b91s0 =>
        r_avail_self <= ni3282_avail_self;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b15s0 =>
        r_avail_opp <= ni2952_avail_opp;
      when b74s0 =>
        if (s_b74s0_en = '1') then
          r_avail_opp <= ni3208_avail_opp;
        end if;
      when b91s0 =>
        r_avail_opp <= ni3283_avail_opp;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b15s0 =>
        r_score_self <= ni2953_score_self;
      when b17s1 =>
        r_score_self <= ni2971_score_self;
      when b71s0 =>
        r_score_self <= ni3150_score_self;
      when b72s1 =>
        r_score_self <= ni3155_score_self;
      when b91s0 =>
        r_score_self <= ni3284_score_self;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b15s0 =>
        r_score_opp <= ni2954_score_opp;
      when b74s1 =>
        r_score_opp <= ni3209_score_opp;
      when b91s0 =>
        r_score_opp <= ni3285_score_opp;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b16s1 =>
        r_move <= ni2957_move;
      when b69s0 =>
        if (s_b69s0_en = '1') then
          r_move <= ni3142_move;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b16s1 =>
        r_move_type <= ni2958_move_type;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b16s1 =>
        r_m_x <= ni2959_m_x;
      when b24s0 =>
        r_m_x <= ni3049_m_x;
      when b50s0 =>
        r_m_x <= ni3100_m_x;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b16s1 =>
        r_m_y <= ni2960_m_y;
      when b23s0 =>
        r_m_y <= ni3047_m_y;
      when b51s0 =>
        r_m_y <= ni3102_m_y;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b16s1 =>
        r_m_piece <= ni2961_m_piece;
      when b21s0 =>
        r_m_piece <= ni3042_m_piece;
      when b53s0 =>
        r_m_piece <= ni3106_m_piece;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b16s1 =>
        r_m_rotate <= ni2962_m_rotate;
      when b22s0 =>
        r_m_rotate <= ni3045_m_rotate;
      when b52s0 =>
        r_m_rotate <= ni3104_m_rotate;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b16s1 =>
        r_suif_tmp_0 <= ni2963_suif_tmp_0;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b16s1 =>
        r_suif_tmp5 <= ni2964_suif_tmp5;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b16s1 =>
        r_suif_tmp43 <= ni3152_suif_tmp43;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b16s1 =>
        r_suif_tmp45 <= ni3206_suif_tmp45;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b16s1 =>
        r_suif_tmp47 <= ni3260_suif_tmp47;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b16s1 =>
        r_switched <= ni6266433_switched;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b17s0 =>
        if (s_b17s0_en = '1') then
          r_avail_self_bak <= ni2967_avail_self_bak;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b17s0 =>
        if (s_b17s0_en = '1') then
          r_score_self_bak <= ni2968_score_self_bak;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b17s0 =>
        if (s_b17s0_en = '1') then
          r_yoff <= ni2973_yoff;
        end if;
      when b18s15 =>
        r_yoff <= ni3029_yoff;
      when b25s0 =>
        r_yoff <= ni3053_yoff;
      when b26s1 =>
        r_yoff <= ni3060_yoff;
      when b72s0 =>
        if (s_b72s0_en = '1') then
          r_yoff <= ni3157_yoff;
        end if;
      when b73s15 =>
        r_yoff <= ni3202_yoff;
      when b74s0 =>
        if (s_b74s0_en = '1') then
          r_yoff <= ni3211_yoff;
        end if;
      when b75s15 =>
        r_yoff <= ni3256_yoff;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b17s0 =>
        if (s_b17s0_en = '1') then
          r_xoff <= ni2974_xoff;
        end if;
      when b18s15 =>
        r_xoff <= ni3031_xoff;
      when b25s0 =>
        r_xoff <= ni3054_xoff;
      when b26s1 =>
        r_xoff <= ni3062_xoff;
      when b72s0 =>
        if (s_b72s0_en = '1') then
          r_xoff <= ni3158_xoff;
        end if;
      when b73s15 =>
        r_xoff <= ni3204_xoff;
      when b74s0 =>
        if (s_b74s0_en = '1') then
          r_xoff <= ni3212_xoff;
        end if;
      when b75s15 =>
        r_xoff <= ni3258_xoff;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b17s0 =>
        if (s_b17s0_en = '1') then
          r_count_bak <= ni2975_count_bak;
        end if;
      when b18s1 =>
        r_count_bak <= ni2977_count_bak;
      when b18s3 =>
        r_count_bak <= ni2989_count_bak;
      when b18s4 =>
        r_count_bak <= ni2990_count_bak;
      when b18s6 =>
        r_count_bak <= ni3001_count_bak;
      when b18s7 =>
        r_count_bak <= ni3002_count_bak;
      when b18s9 =>
        r_count_bak <= ni3013_count_bak;
      when b18s10 =>
        r_count_bak <= ni3014_count_bak;
      when b18s12 =>
        r_count_bak <= ni3025_count_bak;
      when b18s13 =>
        r_count_bak <= ni3026_count_bak;
      when b69s0 =>
        if (s_b69s0_en = '1') then
          r_count_bak <= ni3144_count_bak;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b17s1 =>
        r_m <= ni2965_m;
      when b28s0 =>
        r_m <= ni3067_m;
      when b67s0 =>
        if (s_b67s0_en = '1') then
          r_m <= ni3134_m;
        end if;
      when b69s0 =>
        if (s_b69s0_en = '1') then
          r_m <= ni3143_m;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b17s1 =>
        r_alpha <= ni2966_alpha;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b17s1 =>
        r_size <= ni2972_size;
      when b18s0 =>
        r_size <= ni3027_size;
      when b25s1 =>
        r_size <= ni3052_size;
      when b26s0 =>
        r_size <= ni3059_size;
      when b72s1 =>
        r_size <= ni3156_size;
      when b73s0 =>
        r_size <= ni3200_size;
      when b74s1 =>
        r_size <= ni3210_size;
      when b75s0 =>
        r_size <= ni3254_size;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b18s0 =>
        r_y1 <= ni2981_y1;
      when b18s4 =>
        r_y1 <= ni2993_y1;
      when b18s7 =>
        r_y1 <= ni3005_y1;
      when b18s10 =>
        r_y1 <= ni3017_y1;
      when b73s0 =>
        r_y1 <= ni3192_y1;
      when b75s0 =>
        r_y1 <= ni3246_y1;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b18s0 =>
        r_x1 <= ni2982_x1;
      when b18s4 =>
        r_x1 <= ni2994_x1;
      when b18s7 =>
        r_x1 <= ni3006_x1;
      when b18s10 =>
        r_x1 <= ni3018_x1;
      when b73s0 =>
        r_x1 <= ni3193_x1;
      when b75s0 =>
        r_x1 <= ni3247_x1;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b18s0 =>
        r_suif_tmp6 <= ni3028_suif_tmp6;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b18s0 =>
        r_r_e_g_1 <= ni2978_r_e_g_1;
      when b18s2 =>
        r_r_e_g_1 <= ni2986_r_e_g_1;
      when b18s5 =>
        r_r_e_g_1 <= ni2998_r_e_g_1;
      when b18s8 =>
        r_r_e_g_1 <= ni3010_r_e_g_1;
      when b18s11 =>
        r_r_e_g_1 <= ni3022_r_e_g_1;
      when b18s14 =>
        r_r_e_g_1 <= ni3032_r_e_g_1;
      when b26s0 =>
        r_r_e_g_1 <= ni3061_r_e_g_1;
      when b73s0 =>
        r_r_e_g_1 <= ni6266265_r_e_g_1;
      when b73s2 =>
        r_r_e_g_1 <= ni3167_r_e_g_1;
      when b73s5 =>
        r_r_e_g_1 <= ni3177_r_e_g_1;
      when b73s8 =>
        r_r_e_g_1 <= ni3187_r_e_g_1;
      when b73s11 =>
        r_r_e_g_1 <= ni3197_r_e_g_1;
      when b73s14 =>
        r_r_e_g_1 <= ni3205_r_e_g_1;
      when b75s0 =>
        r_r_e_g_1 <= ni6266347_r_e_g_1;
      when b75s2 =>
        r_r_e_g_1 <= ni3221_r_e_g_1;
      when b75s5 =>
        r_r_e_g_1 <= ni3231_r_e_g_1;
      when b75s8 =>
        r_r_e_g_1 <= ni3241_r_e_g_1;
      when b75s11 =>
        r_r_e_g_1 <= ni3251_r_e_g_1;
      when b75s14 =>
        r_r_e_g_1 <= ni3259_r_e_g_1;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b18s2 =>
        r_r_e_g_2 <= ni2987_r_e_g_2;
      when b18s5 =>
        r_r_e_g_2 <= ni2999_r_e_g_2;
      when b18s8 =>
        r_r_e_g_2 <= ni3011_r_e_g_2;
      when b18s11 =>
        r_r_e_g_2 <= ni3023_r_e_g_2;
      when b26s0 =>
        r_r_e_g_2 <= ni3063_r_e_g_2;
      when b73s0 =>
        r_r_e_g_2 <= ni6266268_r_e_g_2;
      when b73s2 =>
        r_r_e_g_2 <= ni3168_r_e_g_2;
      when b73s5 =>
        r_r_e_g_2 <= ni3178_r_e_g_2;
      when b73s8 =>
        r_r_e_g_2 <= ni3188_r_e_g_2;
      when b73s11 =>
        r_r_e_g_2 <= ni3198_r_e_g_2;
      when b75s0 =>
        r_r_e_g_2 <= ni6266350_r_e_g_2;
      when b75s2 =>
        r_r_e_g_2 <= ni3222_r_e_g_2;
      when b75s5 =>
        r_r_e_g_2 <= ni3232_r_e_g_2;
      when b75s8 =>
        r_r_e_g_2 <= ni3242_r_e_g_2;
      when b75s11 =>
        r_r_e_g_2 <= ni3252_r_e_g_2;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b18s3 =>
        r_board_t <= ni2983_board_t;
      when b18s6 =>
        r_board_t <= ni2995_board_t;
      when b18s9 =>
        r_board_t <= ni3007_board_t;
      when b18s12 =>
        r_board_t <= ni3019_board_t;
      when b26s1 =>
        r_board_t <= ni3055_board_t;
      when b73s3 =>
        r_board_t <= ni3164_board_t;
      when b73s6 =>
        r_board_t <= ni3174_board_t;
      when b73s9 =>
        r_board_t <= ni3184_board_t;
      when b73s12 =>
        r_board_t <= ni3194_board_t;
      when b75s3 =>
        r_board_t <= ni3218_board_t;
      when b75s6 =>
        r_board_t <= ni3228_board_t;
      when b75s9 =>
        r_board_t <= ni3238_board_t;
      when b75s12 =>
        r_board_t <= ni3248_board_t;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b18s3 =>
        r_board_t1 <= ni2985_board_t1;
      when b18s6 =>
        r_board_t1 <= ni2997_board_t1;
      when b18s9 =>
        r_board_t1 <= ni3009_board_t1;
      when b18s12 =>
        r_board_t1 <= ni3021_board_t1;
      when b73s3 =>
        r_board_t1 <= ni3166_board_t1;
      when b73s6 =>
        r_board_t1 <= ni3176_board_t1;
      when b73s9 =>
        r_board_t1 <= ni3186_board_t1;
      when b73s12 =>
        r_board_t1 <= ni3196_board_t1;
      when b75s3 =>
        r_board_t1 <= ni3220_board_t1;
      when b75s6 =>
        r_board_t1 <= ni3230_board_t1;
      when b75s9 =>
        r_board_t1 <= ni3240_board_t1;
      when b75s12 =>
        r_board_t1 <= ni3250_board_t1;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b19s0 =>
        r_moves_found <= ni3033_moves_found;
      when b28s0 =>
        r_moves_found <= ni3066_moves_found;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b19s0 =>
        r_beta <= ni3034_beta;
      when b48s0 =>
        r_beta <= ni3097_beta;
      when b56s0 =>
        r_beta <= ni3114_beta;
      when b59s0 =>
        r_beta <= ni3120_beta;
      when b62s0 =>
        r_beta <= ni3126_beta;
      when b65s0 =>
        r_beta <= ni3132_beta;
      when b68s0 =>
        r_beta <= ni3140_beta;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b19s0 =>
        r_m_piece_min <= ni3035_m_piece_min;
      when b20s0 =>
        r_m_piece_min <= ni3037_m_piece_min;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b19s0 =>
        r_suif_tmp7 <= ni3036_suif_tmp7;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b21s0 =>
        r_state <= ni3038_state;
      when b37s0 =>
        r_state <= ni3084_state;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b21s0 =>
        r_count <= ni3039_count;
      when b30s0 =>
        if (s_b30s0_en = '1') then
          r_count <= ni3072_count;
        end if;
      when b32s0 =>
        if (s_b32s0_en = '1') then
          r_count <= ni3075_count;
        end if;
      when b34s0 =>
        if (s_b34s0_en = '1') then
          r_count <= ni3078_count;
        end if;
      when b36s0 =>
        if (s_b36s0_en = '1') then
          r_count <= ni3081_count;
        end if;
      when b55s0 =>
        r_count <= ni3111_count;
      when b58s0 =>
        r_count <= ni3117_count;
      when b61s0 =>
        r_count <= ni3123_count;
      when b64s0 =>
        r_count <= ni3129_count;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b21s0 =>
        r_next_stream <= ni3040_next_stream;
      when b30s0 =>
        if (s_b30s0_en = '1') then
          r_next_stream <= ni3073_next_stream;
        end if;
      when b32s0 =>
        if (s_b32s0_en = '1') then
          r_next_stream <= ni3076_next_stream;
        end if;
      when b34s0 =>
        if (s_b34s0_en = '1') then
          r_next_stream <= ni3079_next_stream;
        end if;
      when b36s0 =>
        if (s_b36s0_en = '1') then
          r_next_stream <= ni3082_next_stream;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b21s0 =>
        r_not_prune <= ni3041_not_prune;
      when b49s0 =>
        r_not_prune <= ni3099_not_prune;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b21s0 =>
        r_suif_tmp8 <= ni3043_suif_tmp8;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b22s0 =>
        r_avail <= ni3044_avail;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b22s0 =>
        r_suif_tmp11 <= ni3046_suif_tmp11;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b23s0 =>
        r_suif_tmp13 <= ni3048_suif_tmp13;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b24s0 =>
        r_suif_tmp15 <= ni3050_suif_tmp15;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b25s0 =>
        r_lib_check <= ni3051_lib_check;
      when b26s1 =>
        r_lib_check <= ni3058_lib_check;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b26s1 =>
        r_move_valid <= ni3057_move_valid;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b26s1 =>
        r_suif_tmp17 <= ni3064_suif_tmp17;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b27s0 =>
        r_suif_tmp18 <= ni3065_suif_tmp18;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b28s0 =>
        r_m1 <= ni3068_m1;
      when b67s0 =>
        if (s_b67s0_en = '1') then
          r_m1 <= ni3135_m1;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b28s0 =>
        r_m2 <= ni3069_m2;
      when b67s0 =>
        if (s_b67s0_en = '1') then
          r_m2 <= ni3136_m2;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b28s0 =>
        r_suif_tmp19 <= ni3070_suif_tmp19;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b29s0 =>
        r_suif_tmp20 <= ni3071_suif_tmp20;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b31s0 =>
        r_suif_tmp21 <= ni3074_suif_tmp21;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b33s0 =>
        r_suif_tmp22 <= ni3077_suif_tmp22;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b35s0 =>
        r_suif_tmp23 <= ni3080_suif_tmp23;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b36s0 =>
        if (s_b36s0_en = '1') then
          r_suif_tmp24 <= ni3083_suif_tmp24;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b39s0 =>
        r_r_e_g_3 <= ni1350_r_e_g_3;
      when b41s0 =>
        r_r_e_g_3 <= ni1381_r_e_g_3;
      when b43s0 =>
        r_r_e_g_3 <= ni1412_r_e_g_3;
      when b45s0 =>
        r_r_e_g_3 <= ni1443_r_e_g_3;
      when b54s1 =>
        r_r_e_g_3 <= ni1582_r_e_g_3;
      when b57s0 =>
        r_r_e_g_3 <= ni1613_r_e_g_3;
      when b60s0 =>
        r_r_e_g_3 <= ni1644_r_e_g_3;
      when b63s0 =>
        r_r_e_g_3 <= ni1675_r_e_g_3;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b39s1 =>
        r_m_recv <= ni3088_m_recv;
      when b41s1 =>
        r_m_recv <= ni3090_m_recv;
      when b43s1 =>
        r_m_recv <= ni3092_m_recv;
      when b45s1 =>
        r_m_recv <= ni3094_m_recv;
      when b54s2 =>
        r_m_recv <= ni3110_m_recv;
      when b57s1 =>
        r_m_recv <= ni3116_m_recv;
      when b60s1 =>
        r_m_recv <= ni3122_m_recv;
      when b63s1 =>
        r_m_recv <= ni3128_m_recv;
      when b67s4 =>
        r_m_recv <= ni3137_m_recv;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b39s1 =>
        r_suif_tmp25 <= ni3087_suif_tmp25;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b41s1 =>
        r_suif_tmp26 <= ni3089_suif_tmp26;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b43s1 =>
        r_suif_tmp27 <= ni3091_suif_tmp27;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b45s1 =>
        r_suif_tmp28 <= ni3093_suif_tmp28;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b47s0 =>
        r_utility <= ni3095_utility;
      when b55s0 =>
        r_utility <= ni3112_utility;
      when b58s0 =>
        r_utility <= ni3118_utility;
      when b61s0 =>
        r_utility <= ni3124_utility;
      when b64s0 =>
        r_utility <= ni3130_utility;
      when b67s4 =>
        r_utility <= ni3138_utility;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b47s0 =>
        r_suif_tmp29 <= ni3096_suif_tmp29;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b48s0 =>
        r_suif_tmp30 <= ni3098_suif_tmp30;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b50s0 =>
        r_suif_tmp16 <= ni3101_suif_tmp16;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b51s0 =>
        r_suif_tmp14 <= ni3103_suif_tmp14;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b52s0 =>
        r_suif_tmp12 <= ni3105_suif_tmp12;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b53s0 =>
        r_suif_tmp9 <= ni3107_suif_tmp9;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b54s0 =>
        r_suif_tmp31 <= ni3108_suif_tmp31;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b54s2 =>
        r_suif_tmp32 <= ni3109_suif_tmp32;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b55s0 =>
        r_suif_tmp33 <= ni3113_suif_tmp33;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b57s1 =>
        r_suif_tmp34 <= ni3115_suif_tmp34;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b58s0 =>
        r_suif_tmp35 <= ni3119_suif_tmp35;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b60s1 =>
        r_suif_tmp36 <= ni3121_suif_tmp36;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b61s0 =>
        r_suif_tmp37 <= ni3125_suif_tmp37;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b63s1 =>
        r_suif_tmp38 <= ni3127_suif_tmp38;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b64s0 =>
        r_suif_tmp39 <= ni3131_suif_tmp39;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b66s0 =>
        r_suif_tmp40 <= ni3133_suif_tmp40;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b67s4 =>
        r_suif_tmp41 <= ni3139_suif_tmp41;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b69s0 =>
        if (s_b69s0_en = '1') then
          r_count_bak0 <= ni6266442_count_bak0;
        end if;
      when b70s0 =>
        if (s_b70_vwrite(0) = '1') then
          r_count_bak0 <= ni3148_count_bak0;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b73s0 =>
        r_suif_tmp44 <= ni3201_suif_tmp44;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b73s0 =>
        r_r_e_g_5 <= ni6266269_r_e_g_5;
      when b75s0 =>
        r_r_e_g_5 <= ni6266351_r_e_g_5;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b73s0 =>
        r_r_e_g_6 <= ni6266272_r_e_g_6;
      when b75s0 =>
        r_r_e_g_6 <= ni6266354_r_e_g_6;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b73s0 =>
        r_r_e_g_7 <= ni6266273_r_e_g_7;
      when b75s0 =>
        r_r_e_g_7 <= ni6266355_r_e_g_7;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b73s0 =>
        r_r_e_g_8 <= ni6266276_r_e_g_8;
      when b75s0 =>
        r_r_e_g_8 <= ni6266358_r_e_g_8;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b73s0 =>
        r_r_e_g_9 <= ni6266277_r_e_g_9;
      when b75s0 =>
        r_r_e_g_9 <= ni6266359_r_e_g_9;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b73s0 =>
        r_r_e_g_10 <= ni6266280_r_e_g_10;
      when b75s0 =>
        r_r_e_g_10 <= ni6266362_r_e_g_10;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b73s0 =>
        r_r_e_g_11 <= ni6266281_r_e_g_11;
      when b75s0 =>
        r_r_e_g_11 <= ni6266363_r_e_g_11;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b73s0 =>
        r_r_e_g_12 <= ni6266284_r_e_g_12;
      when b75s0 =>
        r_r_e_g_12 <= ni6266366_r_e_g_12;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b73s0 =>
        r_r_e_g_13 <= ni6266285_r_e_g_13;
      when b75s0 =>
        r_r_e_g_13 <= ni6266367_r_e_g_13;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b73s0 =>
        r_r_e_g_14 <= ni6266288_r_e_g_14;
      when b75s0 =>
        r_r_e_g_14 <= ni6266370_r_e_g_14;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b73s0 =>
        r_r_e_g_15 <= ni6266289_r_e_g_15;
      when b75s0 =>
        r_r_e_g_15 <= ni6266371_r_e_g_15;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b73s0 =>
        r_r_e_g_16 <= ni6266292_r_e_g_16;
      when b75s0 =>
        r_r_e_g_16 <= ni6266374_r_e_g_16;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b73s0 =>
        r_r_e_g_17 <= ni6266293_r_e_g_17;
      when b75s0 =>
        r_r_e_g_17 <= ni6266375_r_e_g_17;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b73s0 =>
        r_r_e_g_18 <= ni6266296_r_e_g_18;
      when b75s0 =>
        r_r_e_g_18 <= ni6266378_r_e_g_18;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b73s0 =>
        r_r_e_g_19 <= ni6266297_r_e_g_19;
      when b75s0 =>
        r_r_e_g_19 <= ni6266379_r_e_g_19;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b73s0 =>
        r_r_e_g_20 <= ni6266300_r_e_g_20;
      when b75s0 =>
        r_r_e_g_20 <= ni6266382_r_e_g_20;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b73s0 =>
        r_r_e_g_21 <= ni6266301_r_e_g_21;
      when b75s0 =>
        r_r_e_g_21 <= ni6266383_r_e_g_21;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b73s0 =>
        r_r_e_g_22 <= ni6266304_r_e_g_22;
      when b75s0 =>
        r_r_e_g_22 <= ni6266386_r_e_g_22;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b73s0 =>
        r_r_e_g_23 <= ni6266305_r_e_g_23;
      when b75s0 =>
        r_r_e_g_23 <= ni6266387_r_e_g_23;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b73s0 =>
        r_r_e_g_24 <= ni6266308_r_e_g_24;
      when b75s0 =>
        r_r_e_g_24 <= ni6266390_r_e_g_24;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b73s0 =>
        r_r_e_g_25 <= ni6266309_r_e_g_25;
      when b75s0 =>
        r_r_e_g_25 <= ni6266391_r_e_g_25;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b73s0 =>
        r_r_e_g_26 <= ni6266312_r_e_g_26;
      when b75s0 =>
        r_r_e_g_26 <= ni6266394_r_e_g_26;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b75s0 =>
        r_suif_tmp46 <= ni3255_suif_tmp46;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b78s0 =>
        r_suif_tmp3_0 <= ni3267_suif_tmp3_0;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b79s0 =>
        r_suif_tmp4_0 <= ni3268_suif_tmp4_0;
      when b86s0 =>
        r_suif_tmp4_0 <= ni3275_suif_tmp4_0;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b80s0 =>
        r_suif_tmp1_0 <= ni3269_suif_tmp1_0;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b81s0 =>
        r_suif_tmp2_0 <= ni3270_suif_tmp2_0;
      when b85s0 =>
        r_suif_tmp2_0 <= ni3274_suif_tmp2_0;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b82s0 =>
        r_suif_tmp_1 <= ni3271_suif_tmp_1;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b83s0 =>
        r_suif_tmp0_0 <= ni3272_suif_tmp0_0;
      when b84s0 =>
        r_suif_tmp0_0 <= ni3273_suif_tmp0_0;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b89s0 =>
        r_suif_tmp49 <= ni3279_suif_tmp49;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b90s0 =>
        r_suif_tmp48 <= ni3281_suif_tmp48;
      when others =>
      end case;
    end if;
  end process;

-- "stream0_move_input" interface signals
  process (clk)
  begin
    if (clk'event and clk='1') then
      if ((p_stream0_move_input_en and p_stream0_move_input_rdy) = '1') then
        r_stream0_move_input <= p_stream0_move_input_data;
      end if;
    end if;
  end process;

  p_stream0_move_input_en <= 
    s_b16s0_en and not p_stream0_move_input_eos when thisState = b16s0 else
    s_b17s0_en and not p_stream0_move_input_eos when thisState = b17s0 else
    '0';

-- "stream0_move_output" interface signals
  p_stream0_move_output_en <= 
    s_b69s0_en when thisState = b69s0 else
    '0';
  p_stream0_move_output_data <= ni3142_move;
  p_stream0_move_output_eos <= '0';

-- "stream_minimax_ex1_output" interface signals
  p_stream_minimax_ex1_output_en <= 
    s_b17s0_en when thisState = b17s0 else
    s_b30s0_en when thisState = b30s0 else
    s_b30s1_en when thisState = b30s1 else
    s_b30s2_en when thisState = b30s2 else
    s_b40s0_en when thisState = b40s0 else
    s_b40s1_en when thisState = b40s1 else
    s_b40s2_en when thisState = b40s2 else
    s_b67s0_en when thisState = b67s0 else
    s_b67s1_en when thisState = b67s1 else
    s_b67s2_en when thisState = b67s2 else
    s_b69s0_en when thisState = b69s0 else
    s_b72s0_en when thisState = b72s0 else
    s_b74s0_en when thisState = b74s0 else
    s_b76s0_en when thisState = b76s0 else
    '0';
  p_stream_minimax_ex1_output_data <= 
    r_move when thisState = b17s0 else
    r_m when thisState = b30s0 else
    r_m1 when thisState = b30s1 else
    r_m2 when thisState = b30s2 else
    r_m when thisState = b40s0 else
    r_m1 when thisState = b40s1 else
    r_m2 when thisState = b40s2 else
    ni3134_m when thisState = b67s0 else
    r_m1 when thisState = b67s1 else
    r_m2 when thisState = b67s2 else
    ni3143_m when thisState = b69s0 else
    r_move when thisState = b72s0 else
    r_move when thisState = b74s0 else
    r_move when thisState = b76s0 else
    (others => 'X');
  p_stream_minimax_ex1_output_eos <= '0';

-- "stream_minimax_ex1_input" interface signals
  process (clk)
  begin
    if (clk'event and clk='1') then
      if ((p_stream_minimax_ex1_input_en and p_stream_minimax_ex1_input_rdy) = '1') then
        r_stream_minimax_ex1_input <= p_stream_minimax_ex1_input_data;
      end if;
    end if;
  end process;

  p_stream_minimax_ex1_input_en <= 
    '1' and not p_stream_minimax_ex1_input_eos when thisState = b39s0 else
    '1' and not p_stream_minimax_ex1_input_eos when thisState = b54s1 else
    s_b67s3_en and not p_stream_minimax_ex1_input_eos when thisState = b67s3 else
    '0';

-- "stream_minimax_ex2_output" interface signals
  p_stream_minimax_ex2_output_en <= 
    s_b17s0_en when thisState = b17s0 else
    s_b32s0_en when thisState = b32s0 else
    s_b32s1_en when thisState = b32s1 else
    s_b32s2_en when thisState = b32s2 else
    s_b42s0_en when thisState = b42s0 else
    s_b42s1_en when thisState = b42s1 else
    s_b42s2_en when thisState = b42s2 else
    s_b69s0_en when thisState = b69s0 else
    s_b72s0_en when thisState = b72s0 else
    s_b74s0_en when thisState = b74s0 else
    s_b76s0_en when thisState = b76s0 else
    '0';
  p_stream_minimax_ex2_output_data <= 
    r_move when thisState = b17s0 else
    r_m when thisState = b32s0 else
    r_m1 when thisState = b32s1 else
    r_m2 when thisState = b32s2 else
    r_m when thisState = b42s0 else
    r_m1 when thisState = b42s1 else
    r_m2 when thisState = b42s2 else
    ni3143_m when thisState = b69s0 else
    r_move when thisState = b72s0 else
    r_move when thisState = b74s0 else
    r_move when thisState = b76s0 else
    (others => 'X');
  p_stream_minimax_ex2_output_eos <= '0';

-- "stream_minimax_ex2_input" interface signals
  process (clk)
  begin
    if (clk'event and clk='1') then
      if ((p_stream_minimax_ex2_input_en and p_stream_minimax_ex2_input_rdy) = '1') then
        r_stream_minimax_ex2_input <= p_stream_minimax_ex2_input_data;
      end if;
    end if;
  end process;

  p_stream_minimax_ex2_input_en <= 
    '1' and not p_stream_minimax_ex2_input_eos when thisState = b41s0 else
    '1' and not p_stream_minimax_ex2_input_eos when thisState = b57s0 else
    '0';

-- "stream_minimax_ex3_output" interface signals
  p_stream_minimax_ex3_output_en <= 
    s_b17s0_en when thisState = b17s0 else
    s_b34s0_en when thisState = b34s0 else
    s_b34s1_en when thisState = b34s1 else
    s_b34s2_en when thisState = b34s2 else
    s_b44s0_en when thisState = b44s0 else
    s_b44s1_en when thisState = b44s1 else
    s_b44s2_en when thisState = b44s2 else
    s_b69s0_en when thisState = b69s0 else
    s_b72s0_en when thisState = b72s0 else
    s_b74s0_en when thisState = b74s0 else
    s_b76s0_en when thisState = b76s0 else
    '0';
  p_stream_minimax_ex3_output_data <= 
    r_move when thisState = b17s0 else
    r_m when thisState = b34s0 else
    r_m1 when thisState = b34s1 else
    r_m2 when thisState = b34s2 else
    r_m when thisState = b44s0 else
    r_m1 when thisState = b44s1 else
    r_m2 when thisState = b44s2 else
    ni3143_m when thisState = b69s0 else
    r_move when thisState = b72s0 else
    r_move when thisState = b74s0 else
    r_move when thisState = b76s0 else
    (others => 'X');
  p_stream_minimax_ex3_output_eos <= '0';

-- "stream_minimax_ex3_input" interface signals
  process (clk)
  begin
    if (clk'event and clk='1') then
      if ((p_stream_minimax_ex3_input_en and p_stream_minimax_ex3_input_rdy) = '1') then
        r_stream_minimax_ex3_input <= p_stream_minimax_ex3_input_data;
      end if;
    end if;
  end process;

  p_stream_minimax_ex3_input_en <= 
    '1' and not p_stream_minimax_ex3_input_eos when thisState = b43s0 else
    '1' and not p_stream_minimax_ex3_input_eos when thisState = b60s0 else
    '0';

-- "stream_minimax_ex4_output" interface signals
  p_stream_minimax_ex4_output_en <= 
    s_b17s0_en when thisState = b17s0 else
    s_b36s0_en when thisState = b36s0 else
    s_b36s1_en when thisState = b36s1 else
    s_b36s2_en when thisState = b36s2 else
    s_b46s0_en when thisState = b46s0 else
    s_b46s1_en when thisState = b46s1 else
    s_b46s2_en when thisState = b46s2 else
    s_b69s0_en when thisState = b69s0 else
    s_b72s0_en when thisState = b72s0 else
    s_b74s0_en when thisState = b74s0 else
    s_b76s0_en when thisState = b76s0 else
    '0';
  p_stream_minimax_ex4_output_data <= 
    r_move when thisState = b17s0 else
    r_m when thisState = b36s0 else
    r_m1 when thisState = b36s1 else
    r_m2 when thisState = b36s2 else
    r_m when thisState = b46s0 else
    r_m1 when thisState = b46s1 else
    r_m2 when thisState = b46s2 else
    ni3143_m when thisState = b69s0 else
    r_move when thisState = b72s0 else
    r_move when thisState = b74s0 else
    r_move when thisState = b76s0 else
    (others => 'X');
  p_stream_minimax_ex4_output_eos <= '0';

-- "stream_minimax_ex4_input" interface signals
  process (clk)
  begin
    if (clk'event and clk='1') then
      if ((p_stream_minimax_ex4_input_en and p_stream_minimax_ex4_input_rdy) = '1') then
        r_stream_minimax_ex4_input <= p_stream_minimax_ex4_input_data;
      end if;
    end if;
  end process;

  p_stream_minimax_ex4_input_en <= 
    '1' and not p_stream_minimax_ex4_input_eos when thisState = b45s0 else
    '1' and not p_stream_minimax_ex4_input_eos when thisState = b63s0 else
    '0';

-- "piece_sizes" memory signals
  ram_0: minimax_func_piece_sizes_RAM
    port map (
      rst => reset, 
      clk => clk, 
      we => p_piece_sizes_we, 
      w_addr => p_piece_sizes_waddr, 
      r_addr => p_piece_sizes_raddr, 
      din => p_piece_sizes_din, 
      dout => p_piece_sizes_dout);

  p_piece_sizes_raddr <= 
    r_m_piece(4 downto 0) when thisState = b17s0 else
    r_m_piece(4 downto 0) when thisState = b25s0 else
    r_m_piece(4 downto 0) when thisState = b72s0 else
    r_m_piece(4 downto 0) when thisState = b74s0 else
    (others => 'X');
  p_piece_sizes_re2 <= 
    newState when thisState = b17s1 else
    newState when thisState = b25s1 else
    newState when thisState = b72s1 else
    newState when thisState = b74s1 else
    '0';
  p_piece_sizes_we <= '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (p_piece_sizes_re2 = '1') then
        r_piece_sizes <= p_piece_sizes_dout;
      end if;
    end if;
  end process;

  p_piece_sizes_imm2 <= 
    p_piece_sizes_dout when newState = '1' else
    r_piece_sizes;
-- "piece_y" memory signals
  ram_1: minimax_func_piece_y_RAM
    port map (
      rst => reset, 
      clk => clk, 
      we => p_piece_y_we, 
      w_addr => p_piece_y_waddr, 
      r_addr => p_piece_y_raddr, 
      din => p_piece_y_din, 
      dout => p_piece_y_dout);

  p_piece_y_raddr <= 
    ni3030_r_e_g_0 when thisState = b18s14 else
    ni3061_r_e_g_1 when thisState = b26s0 else
    ni3203_r_e_g_0 when thisState = b73s14 else
    ni3257_r_e_g_0 when thisState = b75s14 else
    (others => 'X');
  p_piece_y_re2 <= 
    newState when thisState = b18s15 else
    newState when thisState = b26s1 else
    newState when thisState = b73s15 else
    newState when thisState = b75s15 else
    '0';
  p_piece_y_we <= '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (p_piece_y_re2 = '1') then
        r_piece_y <= p_piece_y_dout;
      end if;
    end if;
  end process;

  p_piece_y_imm2 <= 
    p_piece_y_dout when newState = '1' else
    r_piece_y;
-- "piece_x" memory signals
  ram_2: minimax_func_piece_x_RAM
    port map (
      rst => reset, 
      clk => clk, 
      we => p_piece_x_we, 
      w_addr => p_piece_x_waddr, 
      r_addr => p_piece_x_raddr, 
      din => p_piece_x_din, 
      dout => p_piece_x_dout);

  p_piece_x_raddr <= 
    ni3032_r_e_g_1 when thisState = b18s14 else
    ni3063_r_e_g_2 when thisState = b26s0 else
    ni3205_r_e_g_1 when thisState = b73s14 else
    ni3259_r_e_g_1 when thisState = b75s14 else
    (others => 'X');
  p_piece_x_re2 <= 
    newState when thisState = b18s15 else
    newState when thisState = b26s1 else
    newState when thisState = b73s15 else
    newState when thisState = b75s15 else
    '0';
  p_piece_x_we <= '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (p_piece_x_re2 = '1') then
        r_piece_x <= p_piece_x_dout;
      end if;
    end if;
  end process;

  p_piece_x_imm2 <= 
    p_piece_x_dout when newState = '1' else
    r_piece_x;
-- "board" memory signals
  ram_3: minimax_func_board_RAM
    port map (
      rst => reset, 
      clk => clk, 
      we => p_board_we, 
      addr => p_board_addr, 
      addr2 => p_board_addr2, 
      din => p_board_din, 
      we2 => '0', 
      din2 => X"00", 
      dout => p_board_dout, 
      dout2 => p_board_dout2);

  p_board_addr <= 
    r_r_e_g_0 when thisState = b11s1 else
    r_r_e_g_0 when thisState = b12s1 else
    r_r_e_g_1 when thisState = b18s1 else
    ni2986_r_e_g_1 when thisState = b18s2 else
    r_r_e_g_2 when thisState = b18s3 else
    r_r_e_g_0 when thisState = b18s4 else
    ni2998_r_e_g_1 when thisState = b18s5 else
    r_r_e_g_2 when thisState = b18s6 else
    r_r_e_g_0 when thisState = b18s7 else
    ni3010_r_e_g_1 when thisState = b18s8 else
    r_r_e_g_2 when thisState = b18s9 else
    r_r_e_g_0 when thisState = b18s10 else
    ni3022_r_e_g_1 when thisState = b18s11 else
    r_r_e_g_2 when thisState = b18s12 else
    r_r_e_g_0 when thisState = b18s13 else
    s_b70_1.f_r_e_g_0 when thisState = b70s0 and s_b70_stage(2) = '1' else
    r_r_e_g_0 when thisState = b73s1 else
    ni3167_r_e_g_1 when thisState = b73s2 else
    r_r_e_g_2 when thisState = b73s3 else
    r_r_e_g_0 when thisState = b73s4 else
    ni3177_r_e_g_1 when thisState = b73s5 else
    r_r_e_g_2 when thisState = b73s6 else
    r_r_e_g_0 when thisState = b73s7 else
    ni3187_r_e_g_1 when thisState = b73s8 else
    r_r_e_g_2 when thisState = b73s9 else
    r_r_e_g_0 when thisState = b73s10 else
    ni3197_r_e_g_1 when thisState = b73s11 else
    r_r_e_g_2 when thisState = b73s12 else
    r_r_e_g_0 when thisState = b73s13 else
    r_r_e_g_0 when thisState = b75s1 else
    ni3221_r_e_g_1 when thisState = b75s2 else
    r_r_e_g_2 when thisState = b75s3 else
    r_r_e_g_0 when thisState = b75s4 else
    ni3231_r_e_g_1 when thisState = b75s5 else
    r_r_e_g_2 when thisState = b75s6 else
    r_r_e_g_0 when thisState = b75s7 else
    ni3241_r_e_g_1 when thisState = b75s8 else
    r_r_e_g_2 when thisState = b75s9 else
    r_r_e_g_0 when thisState = b75s10 else
    ni3251_r_e_g_1 when thisState = b75s11 else
    r_r_e_g_2 when thisState = b75s12 else
    r_r_e_g_0 when thisState = b75s13 else
    r_r_e_g_0 when thisState = b87s1 else
    r_r_e_g_0 when thisState = b88s1 else
    (others => 'X');
  p_board_re <= 
    newState when thisState = b18s3 else
    newState when thisState = b18s6 else
    newState when thisState = b18s9 else
    newState when thisState = b18s12 else
    newState when thisState = b73s3 else
    newState when thisState = b73s6 else
    newState when thisState = b73s9 else
    newState when thisState = b73s12 else
    newState when thisState = b75s3 else
    newState when thisState = b75s6 else
    newState when thisState = b75s9 else
    newState when thisState = b75s12 else
    '0';
  p_board_re2 <= 
    newState when thisState = b18s1 else
    newState when thisState = b18s3 else
    newState when thisState = b18s6 else
    newState when thisState = b18s9 else
    newState when thisState = b18s12 else
    newState when thisState = b26s1 else
    newState when thisState = b73s3 else
    newState when thisState = b73s6 else
    newState when thisState = b73s9 else
    newState when thisState = b73s12 else
    newState when thisState = b75s3 else
    newState when thisState = b75s6 else
    newState when thisState = b75s9 else
    newState when thisState = b75s12 else
    '0';
  p_board_addr2 <= 
    ni2976_r_e_g_0 when thisState = b18s0 else
    ni2984_r_e_g_0 when thisState = b18s2 else
    ni2996_r_e_g_0 when thisState = b18s5 else
    ni3008_r_e_g_0 when thisState = b18s8 else
    ni3020_r_e_g_0 when thisState = b18s11 else
    ni3056_r_e_g_0 when thisState = b26s0 else
    ni3165_r_e_g_0 when thisState = b73s2 else
    ni3175_r_e_g_0 when thisState = b73s5 else
    ni3185_r_e_g_0 when thisState = b73s8 else
    ni3195_r_e_g_0 when thisState = b73s11 else
    ni3219_r_e_g_0 when thisState = b75s2 else
    ni3229_r_e_g_0 when thisState = b75s5 else
    ni3239_r_e_g_0 when thisState = b75s8 else
    ni3249_r_e_g_0 when thisState = b75s11 else
    (others => 'X');
  p_board_we <= 
    '1' when thisState = b11s1 else
    '1' when thisState = b12s1 else
    '1' when thisState = b18s1 else
    '1' when thisState = b18s3 else
    '1' when thisState = b18s4 else
    '1' when thisState = b18s6 else
    '1' when thisState = b18s7 else
    '1' when thisState = b18s9 else
    '1' when thisState = b18s10 else
    '1' when thisState = b18s12 else
    '1' when thisState = b18s13 else
    '1' when thisState = b70s0 and s_b70_stage(2) = '1' else
    '1' when thisState = b73s1 else
    '1' when thisState = b73s3 else
    '1' when thisState = b73s4 else
    '1' when thisState = b73s6 else
    '1' when thisState = b73s7 else
    '1' when thisState = b73s9 else
    '1' when thisState = b73s10 else
    '1' when thisState = b73s12 else
    '1' when thisState = b73s13 else
    '1' when thisState = b75s1 else
    '1' when thisState = b75s3 else
    '1' when thisState = b75s4 else
    '1' when thisState = b75s6 else
    '1' when thisState = b75s7 else
    '1' when thisState = b75s9 else
    '1' when thisState = b75s10 else
    '1' when thisState = b75s12 else
    '1' when thisState = b75s13 else
    '1' when thisState = b87s1 else
    '1' when thisState = b88s1 else
    '0';
  p_board_din <= 
    ni193_board when thisState = b11s1 else
    ni209_board when thisState = b12s1 else
    ni426_board when thisState = b18s1 else
    ni474_board when thisState = b18s3 else
    ni490_board when thisState = b18s4 else
    ni585_board when thisState = b18s6 else
    ni601_board when thisState = b18s7 else
    ni696_board when thisState = b18s9 else
    ni712_board when thisState = b18s10 else
    ni807_board when thisState = b18s12 else
    ni823_board when thisState = b18s13 else
    s_b70_1.f_r_e_g_4 when thisState = b70s0 and s_b70_stage(2) = '1' else
    ni1933_board when thisState = b73s1 else
    ni1981_board when thisState = b73s3 else
    ni1997_board when thisState = b73s4 else
    ni2046_board when thisState = b73s6 else
    ni2062_board when thisState = b73s7 else
    ni2111_board when thisState = b73s9 else
    ni2127_board when thisState = b73s10 else
    ni2176_board when thisState = b73s12 else
    ni2192_board when thisState = b73s13 else
    ni2316_board when thisState = b75s1 else
    ni2364_board when thisState = b75s3 else
    ni2380_board when thisState = b75s4 else
    ni2429_board when thisState = b75s6 else
    ni2445_board when thisState = b75s7 else
    ni2494_board when thisState = b75s9 else
    ni2510_board when thisState = b75s10 else
    ni2559_board when thisState = b75s12 else
    ni2575_board when thisState = b75s13 else
    ni2711_board when thisState = b87s1 else
    ni2727_board when thisState = b88s1 else
    (others => 'X');
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (p_board_re = '1') then
        r_board <= p_board_dout;
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (p_board_re2 = '1') then
        r2_board <= p_board_dout2;
      end if;
    end if;
  end process;

  p_board_imm <= 
    p_board_dout when newState = '1' else
    r_board;
  p_board_imm2 <= 
    p_board_dout2 when newState = '1' else
    r2_board;
-- "x_bak" memory signals
  ram_4: minimax_func_x_bak_RAM
    port map (
      rst => reset, 
      clk => clk, 
      we => p_x_bak_we, 
      w_addr => p_x_bak_waddr, 
      r_addr => p_x_bak_raddr, 
      din => p_x_bak_din, 
      dout => p_x_bak_dout);

  p_x_bak_waddr <= 
    r_count_bak(5 downto 0) when thisState = b18s0 else
    r_count_bak(5 downto 0) when thisState = b18s2 else
    r_count_bak(5 downto 0) when thisState = b18s4 else
    r_count_bak(5 downto 0) when thisState = b18s5 else
    r_count_bak(5 downto 0) when thisState = b18s7 else
    r_count_bak(5 downto 0) when thisState = b18s8 else
    r_count_bak(5 downto 0) when thisState = b18s10 else
    r_count_bak(5 downto 0) when thisState = b18s11 else
    r_count_bak(5 downto 0) when thisState = b18s13 else
    (others => 'X');
  p_x_bak_raddr <= ni6266443_count_bak(5 downto 0);
  p_x_bak_re2 <= 
    newState when thisState = b70s0 and s_b70_stage(1) = '1' else
    '0';
  p_x_bak_we <= 
    '1' when thisState = b18s0 else
    '1' when thisState = b18s2 else
    '1' when thisState = b18s4 else
    '1' when thisState = b18s5 else
    '1' when thisState = b18s7 else
    '1' when thisState = b18s8 else
    '1' when thisState = b18s10 else
    '1' when thisState = b18s11 else
    '1' when thisState = b18s13 else
    '0';
  p_x_bak_din <= 
    r_xoff when thisState = b18s0 else
    r_x when thisState = b18s2 else
    r_x1 when thisState = b18s4 else
    r_x when thisState = b18s5 else
    r_x1 when thisState = b18s7 else
    r_x when thisState = b18s8 else
    r_x1 when thisState = b18s10 else
    r_x when thisState = b18s11 else
    r_x1 when thisState = b18s13 else
    (others => 'X');
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (p_x_bak_re2 = '1') then
        r_x_bak <= p_x_bak_dout;
      end if;
    end if;
  end process;

  p_x_bak_imm2 <= 
    p_x_bak_dout when newState = '1' else
    r_x_bak;
-- "y_bak" memory signals
  ram_5: minimax_func_y_bak_RAM
    port map (
      rst => reset, 
      clk => clk, 
      we => p_y_bak_we, 
      w_addr => p_y_bak_waddr, 
      r_addr => p_y_bak_raddr, 
      din => p_y_bak_din, 
      dout => p_y_bak_dout);

  p_y_bak_waddr <= 
    r_count_bak(5 downto 0) when thisState = b18s0 else
    r_count_bak(5 downto 0) when thisState = b18s2 else
    r_count_bak(5 downto 0) when thisState = b18s4 else
    r_count_bak(5 downto 0) when thisState = b18s5 else
    r_count_bak(5 downto 0) when thisState = b18s7 else
    r_count_bak(5 downto 0) when thisState = b18s8 else
    r_count_bak(5 downto 0) when thisState = b18s10 else
    r_count_bak(5 downto 0) when thisState = b18s11 else
    r_count_bak(5 downto 0) when thisState = b18s13 else
    (others => 'X');
  p_y_bak_raddr <= ni6266443_count_bak(5 downto 0);
  p_y_bak_re2 <= 
    newState when thisState = b70s0 and s_b70_stage(1) = '1' else
    '0';
  p_y_bak_we <= 
    '1' when thisState = b18s0 else
    '1' when thisState = b18s2 else
    '1' when thisState = b18s4 else
    '1' when thisState = b18s5 else
    '1' when thisState = b18s7 else
    '1' when thisState = b18s8 else
    '1' when thisState = b18s10 else
    '1' when thisState = b18s11 else
    '1' when thisState = b18s13 else
    '0';
  p_y_bak_din <= 
    r_yoff when thisState = b18s0 else
    r_y when thisState = b18s2 else
    r_y1 when thisState = b18s4 else
    r_y when thisState = b18s5 else
    r_y1 when thisState = b18s7 else
    r_y when thisState = b18s8 else
    r_y1 when thisState = b18s10 else
    r_y when thisState = b18s11 else
    r_y1 when thisState = b18s13 else
    (others => 'X');
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (p_y_bak_re2 = '1') then
        r_y_bak <= p_y_bak_dout;
      end if;
    end if;
  end process;

  p_y_bak_imm2 <= 
    p_y_bak_dout when newState = '1' else
    r_y_bak;
-- "board_bak" memory signals
  ram_6: minimax_func_board_bak_RAM
    port map (
      rst => reset, 
      clk => clk, 
      we => p_board_bak_we, 
      w_addr => p_board_bak_waddr, 
      r_addr => p_board_bak_raddr, 
      din => p_board_bak_din, 
      dout => p_board_bak_dout);

  p_board_bak_waddr <= 
    r_count_bak(5 downto 0) when thisState = b18s1 else
    r_count_bak(5 downto 0) when thisState = b18s3 else
    r_count_bak(5 downto 0) when thisState = b18s4 else
    r_count_bak(5 downto 0) when thisState = b18s6 else
    r_count_bak(5 downto 0) when thisState = b18s7 else
    r_count_bak(5 downto 0) when thisState = b18s9 else
    r_count_bak(5 downto 0) when thisState = b18s10 else
    r_count_bak(5 downto 0) when thisState = b18s12 else
    r_count_bak(5 downto 0) when thisState = b18s13 else
    (others => 'X');
  p_board_bak_raddr <= ni6266443_count_bak(5 downto 0);
  p_board_bak_re2 <= 
    newState when thisState = b70s0 and s_b70_stage(1) = '1' else
    '0';
  p_board_bak_we <= 
    '1' when thisState = b18s1 else
    '1' when thisState = b18s3 else
    '1' when thisState = b18s4 else
    '1' when thisState = b18s6 else
    '1' when thisState = b18s7 else
    '1' when thisState = b18s9 else
    '1' when thisState = b18s10 else
    '1' when thisState = b18s12 else
    '1' when thisState = b18s13 else
    '0';
  p_board_bak_din <= 
    ni414_board when thisState = b18s1 else
    ni2983_board_t when thisState = b18s3 else
    r_board_t1 when thisState = b18s4 else
    ni2995_board_t when thisState = b18s6 else
    r_board_t1 when thisState = b18s7 else
    ni3007_board_t when thisState = b18s9 else
    r_board_t1 when thisState = b18s10 else
    ni3019_board_t when thisState = b18s12 else
    r_board_t1 when thisState = b18s13 else
    (others => 'X');
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (p_board_bak_re2 = '1') then
        r_board_bak <= p_board_bak_dout;
      end if;
    end if;
  end process;

  p_board_bak_imm2 <= 
    p_board_bak_dout when newState = '1' else
    r_board_bak;
end rtl;
library ieee;
use ieee.std_logic_1164.all;
library altera_mf;
use altera_mf.altera_mf_components.all;

entity minimax_ex_func_piece_sizes_RAM is
  port (
    rst,clk : in std_ulogic;
    we : in std_ulogic;
    w_addr : in std_ulogic_vector(4 downto 0);
    r_addr : in std_ulogic_vector(4 downto 0);
    din : in std_ulogic_vector(7 downto 0);
    dout : out std_ulogic_vector(7 downto 0)
  );
end minimax_ex_func_piece_sizes_RAM;

architecture sync of minimax_ex_func_piece_sizes_RAM is
  signal q_b : std_logic_vector (7 downto 0);
  signal data_a : std_logic_vector (7 downto 0);
  signal address_a : std_logic_vector (4 downto 0);
  signal address_b : std_logic_vector (4 downto 0);
begin
	address_a <= std_logic_vector(w_addr);
	address_b <= std_logic_vector(r_addr);
	data_a <= std_logic_vector(din);
	i0 : altsyncram
	GENERIC MAP (
		operation_mode => "DUAL_PORT",
		width_a => 8,
		widthad_a => 5,
		numwords_a => 21,
		width_b => 8,
		widthad_b => 5,
		numwords_b => 21,
		lpm_type => "altsyncram",
		width_byteena_a => 1,
		outdata_reg_b => "UNREGISTERED",
		indata_aclr_a => "NONE",
		wrcontrol_aclr_a => "NONE",
		address_aclr_a => "NONE",
		address_reg_b => "CLOCK0",
		address_aclr_b => "NONE",
		outdata_aclr_b => "NONE",
		read_during_write_mode_mixed_ports => "DONT_CARE",
		ram_block_type => "AUTO",
		init_file => "minimax_ex_func_piece_sizes_RAM.mif",
		intended_device_family => "Stratix"
	)
	PORT MAP (
		wren_a => we,
		clock0 => clk,
		address_a => address_a,
		address_b => address_b,
		data_a => data_a,
		q_b => q_b
	);
	dout <= std_ulogic_vector(q_b);
end sync;

library ieee;
use ieee.std_logic_1164.all;
library altera_mf;
use altera_mf.altera_mf_components.all;

entity minimax_ex_func_piece_y_RAM is
  port (
    rst,clk : in std_ulogic;
    we : in std_ulogic;
    w_addr : in std_ulogic_vector(9 downto 0);
    r_addr : in std_ulogic_vector(9 downto 0);
    din : in std_ulogic_vector(7 downto 0);
    dout : out std_ulogic_vector(7 downto 0)
  );
end minimax_ex_func_piece_y_RAM;

architecture sync of minimax_ex_func_piece_y_RAM is
  signal q_b : std_logic_vector (7 downto 0);
  signal data_a : std_logic_vector (7 downto 0);
  signal address_a : std_logic_vector (9 downto 0);
  signal address_b : std_logic_vector (9 downto 0);
begin
	address_a <= std_logic_vector(w_addr);
	address_b <= std_logic_vector(r_addr);
	data_a <= std_logic_vector(din);
	i0 : altsyncram
	GENERIC MAP (
		operation_mode => "DUAL_PORT",
		width_a => 8,
		widthad_a => 10,
		numwords_a => 672,
		width_b => 8,
		widthad_b => 10,
		numwords_b => 672,
		lpm_type => "altsyncram",
		width_byteena_a => 1,
		outdata_reg_b => "UNREGISTERED",
		indata_aclr_a => "NONE",
		wrcontrol_aclr_a => "NONE",
		address_aclr_a => "NONE",
		address_reg_b => "CLOCK0",
		address_aclr_b => "NONE",
		outdata_aclr_b => "NONE",
		read_during_write_mode_mixed_ports => "DONT_CARE",
		ram_block_type => "AUTO",
		init_file => "minimax_ex_func_piece_y_RAM.mif",
		intended_device_family => "Stratix"
	)
	PORT MAP (
		wren_a => we,
		clock0 => clk,
		address_a => address_a,
		address_b => address_b,
		data_a => data_a,
		q_b => q_b
	);
	dout <= std_ulogic_vector(q_b);
end sync;

library ieee;
use ieee.std_logic_1164.all;
library altera_mf;
use altera_mf.altera_mf_components.all;

entity minimax_ex_func_piece_x_RAM is
  port (
    rst,clk : in std_ulogic;
    we : in std_ulogic;
    w_addr : in std_ulogic_vector(9 downto 0);
    r_addr : in std_ulogic_vector(9 downto 0);
    din : in std_ulogic_vector(7 downto 0);
    dout : out std_ulogic_vector(7 downto 0)
  );
end minimax_ex_func_piece_x_RAM;

architecture sync of minimax_ex_func_piece_x_RAM is
  signal q_b : std_logic_vector (7 downto 0);
  signal data_a : std_logic_vector (7 downto 0);
  signal address_a : std_logic_vector (9 downto 0);
  signal address_b : std_logic_vector (9 downto 0);
begin
	address_a <= std_logic_vector(w_addr);
	address_b <= std_logic_vector(r_addr);
	data_a <= std_logic_vector(din);
	i0 : altsyncram
	GENERIC MAP (
		operation_mode => "DUAL_PORT",
		width_a => 8,
		widthad_a => 10,
		numwords_a => 672,
		width_b => 8,
		widthad_b => 10,
		numwords_b => 672,
		lpm_type => "altsyncram",
		width_byteena_a => 1,
		outdata_reg_b => "UNREGISTERED",
		indata_aclr_a => "NONE",
		wrcontrol_aclr_a => "NONE",
		address_aclr_a => "NONE",
		address_reg_b => "CLOCK0",
		address_aclr_b => "NONE",
		outdata_aclr_b => "NONE",
		read_during_write_mode_mixed_ports => "DONT_CARE",
		ram_block_type => "AUTO",
		init_file => "minimax_ex_func_piece_x_RAM.mif",
		intended_device_family => "Stratix"
	)
	PORT MAP (
		wren_a => we,
		clock0 => clk,
		address_a => address_a,
		address_b => address_b,
		data_a => data_a,
		q_b => q_b
	);
	dout <= std_ulogic_vector(q_b);
end sync;

library ieee;
use ieee.std_logic_1164.all;
library altera_mf;
use altera_mf.altera_mf_components.all;

entity minimax_ex_func_board_RAM is
  port (
    rst,clk : in std_ulogic;
    we : in std_ulogic;
    addr : in std_ulogic_vector(9 downto 0);
    addr2 : in std_ulogic_vector(9 downto 0);
    din : in std_ulogic_vector(7 downto 0);
    we2 : in std_ulogic;
    din2 : in std_ulogic_vector(7 downto 0);
    dout : out std_ulogic_vector(7 downto 0);
    dout2 : out std_ulogic_vector(7 downto 0)
  );
end minimax_ex_func_board_RAM;

architecture dualsync of minimax_ex_func_board_RAM is
  signal q_a,q_b : std_logic_vector (7 downto 0);
  signal data_a,data_b : std_logic_vector (7 downto 0);
  signal address_a : std_logic_vector (9 downto 0);
  signal address_b : std_logic_vector (9 downto 0);
begin
	address_a <= std_logic_vector(addr);
	address_b <= std_logic_vector(addr2);
	data_a <= std_logic_vector(din);
	data_b <= std_logic_vector(din2);
	i0 : altsyncram
	GENERIC MAP (
		operation_mode => "BIDIR_DUAL_PORT",
		width_a => 8,
		widthad_a => 10,
		numwords_a => 1024,
		width_b => 8,
		widthad_b => 10,
		numwords_b => 1024,
		lpm_type => "altsyncram",
		width_byteena_a => 1,
		address_aclr_a => "NONE",
		address_aclr_b => "NONE",
		address_reg_b => "CLOCK0",
		indata_aclr_a => "NONE",
		indata_aclr_b => "NONE",
          indata_reg_b => "CLOCK0",
		outdata_aclr_a => "NONE",
		outdata_aclr_b => "NONE",
		outdata_reg_a => "UNREGISTERED",
		outdata_reg_b => "UNREGISTERED",
		wrcontrol_aclr_a => "NONE",
		wrcontrol_aclr_b => "NONE",
		wrcontrol_wraddress_reg_b => "CLOCK0",
		read_during_write_mode_mixed_ports => "DONT_CARE",
		ram_block_type => "AUTO",
		init_file => "UNUSED",
		intended_device_family => "Stratix"
	)
	PORT MAP (
		wren_a => we,
		clock0 => clk,
		wren_b => we2,
		address_a => address_a,
		address_b => address_b,
		data_a => data_a,
		data_b => data_b,
		q_a => q_a,
		q_b => q_b
	);
	dout <= std_ulogic_vector(q_a);
	dout2 <= std_ulogic_vector(q_b);
end dualsync;

library ieee;
use ieee.std_logic_1164.all;
library altera_mf;
use altera_mf.altera_mf_components.all;

entity minimax_ex_func_x_bak_s_RAM is
  port (
    rst,clk : in std_ulogic;
    we : in std_ulogic;
    w_addr : in std_ulogic_vector(5 downto 0);
    r_addr : in std_ulogic_vector(5 downto 0);
    din : in std_ulogic_vector(7 downto 0);
    dout : out std_ulogic_vector(7 downto 0)
  );
end minimax_ex_func_x_bak_s_RAM;

architecture sync of minimax_ex_func_x_bak_s_RAM is
  signal q_b : std_logic_vector (7 downto 0);
  signal data_a : std_logic_vector (7 downto 0);
  signal address_a : std_logic_vector (5 downto 0);
  signal address_b : std_logic_vector (5 downto 0);
begin
	address_a <= std_logic_vector(w_addr);
	address_b <= std_logic_vector(r_addr);
	data_a <= std_logic_vector(din);
	i0 : altsyncram
	GENERIC MAP (
		operation_mode => "DUAL_PORT",
		width_a => 8,
		widthad_a => 6,
		numwords_a => 50,
		width_b => 8,
		widthad_b => 6,
		numwords_b => 50,
		lpm_type => "altsyncram",
		width_byteena_a => 1,
		outdata_reg_b => "UNREGISTERED",
		indata_aclr_a => "NONE",
		wrcontrol_aclr_a => "NONE",
		address_aclr_a => "NONE",
		address_reg_b => "CLOCK0",
		address_aclr_b => "NONE",
		outdata_aclr_b => "NONE",
		read_during_write_mode_mixed_ports => "DONT_CARE",
		ram_block_type => "AUTO",
		init_file => "UNUSED",
		intended_device_family => "Stratix"
	)
	PORT MAP (
		wren_a => we,
		clock0 => clk,
		address_a => address_a,
		address_b => address_b,
		data_a => data_a,
		q_b => q_b
	);
	dout <= std_ulogic_vector(q_b);
end sync;

library ieee;
use ieee.std_logic_1164.all;
library altera_mf;
use altera_mf.altera_mf_components.all;

entity minimax_ex_func_y_bak_s_RAM is
  port (
    rst,clk : in std_ulogic;
    we : in std_ulogic;
    w_addr : in std_ulogic_vector(5 downto 0);
    r_addr : in std_ulogic_vector(5 downto 0);
    din : in std_ulogic_vector(7 downto 0);
    dout : out std_ulogic_vector(7 downto 0)
  );
end minimax_ex_func_y_bak_s_RAM;

architecture sync of minimax_ex_func_y_bak_s_RAM is
  signal q_b : std_logic_vector (7 downto 0);
  signal data_a : std_logic_vector (7 downto 0);
  signal address_a : std_logic_vector (5 downto 0);
  signal address_b : std_logic_vector (5 downto 0);
begin
	address_a <= std_logic_vector(w_addr);
	address_b <= std_logic_vector(r_addr);
	data_a <= std_logic_vector(din);
	i0 : altsyncram
	GENERIC MAP (
		operation_mode => "DUAL_PORT",
		width_a => 8,
		widthad_a => 6,
		numwords_a => 50,
		width_b => 8,
		widthad_b => 6,
		numwords_b => 50,
		lpm_type => "altsyncram",
		width_byteena_a => 1,
		outdata_reg_b => "UNREGISTERED",
		indata_aclr_a => "NONE",
		wrcontrol_aclr_a => "NONE",
		address_aclr_a => "NONE",
		address_reg_b => "CLOCK0",
		address_aclr_b => "NONE",
		outdata_aclr_b => "NONE",
		read_during_write_mode_mixed_ports => "DONT_CARE",
		ram_block_type => "AUTO",
		init_file => "UNUSED",
		intended_device_family => "Stratix"
	)
	PORT MAP (
		wren_a => we,
		clock0 => clk,
		address_a => address_a,
		address_b => address_b,
		data_a => data_a,
		q_b => q_b
	);
	dout <= std_ulogic_vector(q_b);
end sync;

library ieee;
use ieee.std_logic_1164.all;
library altera_mf;
use altera_mf.altera_mf_components.all;

entity minimax_ex_func_board_bak_s_RAM is
  port (
    rst,clk : in std_ulogic;
    we : in std_ulogic;
    w_addr : in std_ulogic_vector(5 downto 0);
    r_addr : in std_ulogic_vector(5 downto 0);
    din : in std_ulogic_vector(7 downto 0);
    dout : out std_ulogic_vector(7 downto 0)
  );
end minimax_ex_func_board_bak_s_RAM;

architecture sync of minimax_ex_func_board_bak_s_RAM is
  signal q_b : std_logic_vector (7 downto 0);
  signal data_a : std_logic_vector (7 downto 0);
  signal address_a : std_logic_vector (5 downto 0);
  signal address_b : std_logic_vector (5 downto 0);
begin
	address_a <= std_logic_vector(w_addr);
	address_b <= std_logic_vector(r_addr);
	data_a <= std_logic_vector(din);
	i0 : altsyncram
	GENERIC MAP (
		operation_mode => "DUAL_PORT",
		width_a => 8,
		widthad_a => 6,
		numwords_a => 50,
		width_b => 8,
		widthad_b => 6,
		numwords_b => 50,
		lpm_type => "altsyncram",
		width_byteena_a => 1,
		outdata_reg_b => "UNREGISTERED",
		indata_aclr_a => "NONE",
		wrcontrol_aclr_a => "NONE",
		address_aclr_a => "NONE",
		address_reg_b => "CLOCK0",
		address_aclr_b => "NONE",
		outdata_aclr_b => "NONE",
		read_during_write_mode_mixed_ports => "DONT_CARE",
		ram_block_type => "AUTO",
		init_file => "UNUSED",
		intended_device_family => "Stratix"
	)
	PORT MAP (
		wren_a => we,
		clock0 => clk,
		address_a => address_a,
		address_b => address_b,
		data_a => data_a,
		q_b => q_b
	);
	dout <= std_ulogic_vector(q_b);
end sync;

library ieee;
use ieee.std_logic_1164.all;
library altera_mf;
use altera_mf.altera_mf_components.all;

entity minimax_ex_func_x_bak_op_RAM is
  port (
    rst,clk : in std_ulogic;
    we : in std_ulogic;
    w_addr : in std_ulogic_vector(5 downto 0);
    r_addr : in std_ulogic_vector(5 downto 0);
    din : in std_ulogic_vector(7 downto 0);
    dout : out std_ulogic_vector(7 downto 0)
  );
end minimax_ex_func_x_bak_op_RAM;

architecture sync of minimax_ex_func_x_bak_op_RAM is
  signal q_b : std_logic_vector (7 downto 0);
  signal data_a : std_logic_vector (7 downto 0);
  signal address_a : std_logic_vector (5 downto 0);
  signal address_b : std_logic_vector (5 downto 0);
begin
	address_a <= std_logic_vector(w_addr);
	address_b <= std_logic_vector(r_addr);
	data_a <= std_logic_vector(din);
	i0 : altsyncram
	GENERIC MAP (
		operation_mode => "DUAL_PORT",
		width_a => 8,
		widthad_a => 6,
		numwords_a => 50,
		width_b => 8,
		widthad_b => 6,
		numwords_b => 50,
		lpm_type => "altsyncram",
		width_byteena_a => 1,
		outdata_reg_b => "UNREGISTERED",
		indata_aclr_a => "NONE",
		wrcontrol_aclr_a => "NONE",
		address_aclr_a => "NONE",
		address_reg_b => "CLOCK0",
		address_aclr_b => "NONE",
		outdata_aclr_b => "NONE",
		read_during_write_mode_mixed_ports => "DONT_CARE",
		ram_block_type => "AUTO",
		init_file => "UNUSED",
		intended_device_family => "Stratix"
	)
	PORT MAP (
		wren_a => we,
		clock0 => clk,
		address_a => address_a,
		address_b => address_b,
		data_a => data_a,
		q_b => q_b
	);
	dout <= std_ulogic_vector(q_b);
end sync;

library ieee;
use ieee.std_logic_1164.all;
library altera_mf;
use altera_mf.altera_mf_components.all;

entity minimax_ex_func_y_bak_op_RAM is
  port (
    rst,clk : in std_ulogic;
    we : in std_ulogic;
    w_addr : in std_ulogic_vector(5 downto 0);
    r_addr : in std_ulogic_vector(5 downto 0);
    din : in std_ulogic_vector(7 downto 0);
    dout : out std_ulogic_vector(7 downto 0)
  );
end minimax_ex_func_y_bak_op_RAM;

architecture sync of minimax_ex_func_y_bak_op_RAM is
  signal q_b : std_logic_vector (7 downto 0);
  signal data_a : std_logic_vector (7 downto 0);
  signal address_a : std_logic_vector (5 downto 0);
  signal address_b : std_logic_vector (5 downto 0);
begin
	address_a <= std_logic_vector(w_addr);
	address_b <= std_logic_vector(r_addr);
	data_a <= std_logic_vector(din);
	i0 : altsyncram
	GENERIC MAP (
		operation_mode => "DUAL_PORT",
		width_a => 8,
		widthad_a => 6,
		numwords_a => 50,
		width_b => 8,
		widthad_b => 6,
		numwords_b => 50,
		lpm_type => "altsyncram",
		width_byteena_a => 1,
		outdata_reg_b => "UNREGISTERED",
		indata_aclr_a => "NONE",
		wrcontrol_aclr_a => "NONE",
		address_aclr_a => "NONE",
		address_reg_b => "CLOCK0",
		address_aclr_b => "NONE",
		outdata_aclr_b => "NONE",
		read_during_write_mode_mixed_ports => "DONT_CARE",
		ram_block_type => "AUTO",
		init_file => "UNUSED",
		intended_device_family => "Stratix"
	)
	PORT MAP (
		wren_a => we,
		clock0 => clk,
		address_a => address_a,
		address_b => address_b,
		data_a => data_a,
		q_b => q_b
	);
	dout <= std_ulogic_vector(q_b);
end sync;

library ieee;
use ieee.std_logic_1164.all;
library altera_mf;
use altera_mf.altera_mf_components.all;

entity minimax_ex_func_board_bak_op_RAM is
  port (
    rst,clk : in std_ulogic;
    we : in std_ulogic;
    w_addr : in std_ulogic_vector(5 downto 0);
    r_addr : in std_ulogic_vector(5 downto 0);
    din : in std_ulogic_vector(7 downto 0);
    dout : out std_ulogic_vector(7 downto 0)
  );
end minimax_ex_func_board_bak_op_RAM;

architecture sync of minimax_ex_func_board_bak_op_RAM is
  signal q_b : std_logic_vector (7 downto 0);
  signal data_a : std_logic_vector (7 downto 0);
  signal address_a : std_logic_vector (5 downto 0);
  signal address_b : std_logic_vector (5 downto 0);
begin
	address_a <= std_logic_vector(w_addr);
	address_b <= std_logic_vector(r_addr);
	data_a <= std_logic_vector(din);
	i0 : altsyncram
	GENERIC MAP (
		operation_mode => "DUAL_PORT",
		width_a => 8,
		widthad_a => 6,
		numwords_a => 50,
		width_b => 8,
		widthad_b => 6,
		numwords_b => 50,
		lpm_type => "altsyncram",
		width_byteena_a => 1,
		outdata_reg_b => "UNREGISTERED",
		indata_aclr_a => "NONE",
		wrcontrol_aclr_a => "NONE",
		address_aclr_a => "NONE",
		address_reg_b => "CLOCK0",
		address_aclr_b => "NONE",
		outdata_aclr_b => "NONE",
		read_during_write_mode_mixed_ports => "DONT_CARE",
		ram_block_type => "AUTO",
		init_file => "UNUSED",
		intended_device_family => "Stratix"
	)
	PORT MAP (
		wren_a => we,
		clock0 => clk,
		address_a => address_a,
		address_b => address_b,
		data_a => data_a,
		q_b => q_b
	);
	dout <= std_ulogic_vector(q_b);
end sync;

library ieee;
use ieee.std_logic_1164.all;

use work.components.all;
    
entity minimax_ex_func is
  port (signal reset : in std_ulogic;
    signal sclk : in std_ulogic;
    signal clk : in std_ulogic;
    signal p_stream0_move_input_rdy : in std_ulogic;
    signal p_stream0_move_input_en : inout std_ulogic;
    signal p_stream0_move_input_eos : in std_ulogic;
    signal p_stream0_move_input_data : in std_ulogic_vector (31 downto 0);
    signal p_stream0_move_output_rdy : in std_ulogic;
    signal p_stream0_move_output_en : inout std_ulogic;
    signal p_stream0_move_output_eos : out std_ulogic;
    signal p_stream0_move_output_data : out std_ulogic_vector (31 downto 0);
    signal p_stream_eval1_output_rdy : in std_ulogic;
    signal p_stream_eval1_output_en : inout std_ulogic;
    signal p_stream_eval1_output_eos : out std_ulogic;
    signal p_stream_eval1_output_data : out std_ulogic_vector (31 downto 0);
    signal p_stream_eval1_input_rdy : in std_ulogic;
    signal p_stream_eval1_input_en : inout std_ulogic;
    signal p_stream_eval1_input_eos : in std_ulogic;
    signal p_stream_eval1_input_data : in std_ulogic_vector (31 downto 0);
    signal p_stream_eval2_output_rdy : in std_ulogic;
    signal p_stream_eval2_output_en : inout std_ulogic;
    signal p_stream_eval2_output_eos : out std_ulogic;
    signal p_stream_eval2_output_data : out std_ulogic_vector (31 downto 0);
    signal p_stream_eval2_input_rdy : in std_ulogic;
    signal p_stream_eval2_input_en : inout std_ulogic;
    signal p_stream_eval2_input_eos : in std_ulogic;
    signal p_stream_eval2_input_data : in std_ulogic_vector (31 downto 0));
end minimax_ex_func;

use work.external_components_hw_blokus_comp_vhd.all;
architecture rtl of minimax_ex_func is
  function mkvec(b : in std_ulogic) return std_ulogic_vector is
    variable res : std_ulogic_vector(0 downto 0);
  begin
    res(0):=b;
    return(res);
  end;

  component minimax_ex_func_piece_sizes_RAM is
    port (signal rst : in std_ulogic;
      signal clk : in std_ulogic;
      signal we : in std_ulogic;
      signal w_addr : in std_ulogic_vector (4 downto 0);
      signal r_addr : in std_ulogic_vector (4 downto 0);
      signal din : in std_ulogic_vector (7 downto 0);
      signal dout : out std_ulogic_vector (7 downto 0));
  end component;

  component minimax_ex_func_piece_y_RAM is
    port (signal rst : in std_ulogic;
      signal clk : in std_ulogic;
      signal we : in std_ulogic;
      signal w_addr : in std_ulogic_vector (9 downto 0);
      signal r_addr : in std_ulogic_vector (9 downto 0);
      signal din : in std_ulogic_vector (7 downto 0);
      signal dout : out std_ulogic_vector (7 downto 0));
  end component;

  component minimax_ex_func_piece_x_RAM is
    port (signal rst : in std_ulogic;
      signal clk : in std_ulogic;
      signal we : in std_ulogic;
      signal w_addr : in std_ulogic_vector (9 downto 0);
      signal r_addr : in std_ulogic_vector (9 downto 0);
      signal din : in std_ulogic_vector (7 downto 0);
      signal dout : out std_ulogic_vector (7 downto 0));
  end component;

  component minimax_ex_func_board_RAM is
    port (signal rst : in std_ulogic;
      signal clk : in std_ulogic;
      signal we : in std_ulogic;
      signal addr : in std_ulogic_vector (9 downto 0);
      signal addr2 : in std_ulogic_vector (9 downto 0);
      signal din : in std_ulogic_vector (7 downto 0);
      signal we2 : in std_ulogic;
      signal din2 : in std_ulogic_vector (7 downto 0);
      signal dout : out std_ulogic_vector (7 downto 0);
      signal dout2 : out std_ulogic_vector (7 downto 0));
  end component;

  component minimax_ex_func_x_bak_s_RAM is
    port (signal rst : in std_ulogic;
      signal clk : in std_ulogic;
      signal we : in std_ulogic;
      signal w_addr : in std_ulogic_vector (5 downto 0);
      signal r_addr : in std_ulogic_vector (5 downto 0);
      signal din : in std_ulogic_vector (7 downto 0);
      signal dout : out std_ulogic_vector (7 downto 0));
  end component;

  component minimax_ex_func_y_bak_s_RAM is
    port (signal rst : in std_ulogic;
      signal clk : in std_ulogic;
      signal we : in std_ulogic;
      signal w_addr : in std_ulogic_vector (5 downto 0);
      signal r_addr : in std_ulogic_vector (5 downto 0);
      signal din : in std_ulogic_vector (7 downto 0);
      signal dout : out std_ulogic_vector (7 downto 0));
  end component;

  component minimax_ex_func_board_bak_s_RAM is
    port (signal rst : in std_ulogic;
      signal clk : in std_ulogic;
      signal we : in std_ulogic;
      signal w_addr : in std_ulogic_vector (5 downto 0);
      signal r_addr : in std_ulogic_vector (5 downto 0);
      signal din : in std_ulogic_vector (7 downto 0);
      signal dout : out std_ulogic_vector (7 downto 0));
  end component;

  component minimax_ex_func_x_bak_op_RAM is
    port (signal rst : in std_ulogic;
      signal clk : in std_ulogic;
      signal we : in std_ulogic;
      signal w_addr : in std_ulogic_vector (5 downto 0);
      signal r_addr : in std_ulogic_vector (5 downto 0);
      signal din : in std_ulogic_vector (7 downto 0);
      signal dout : out std_ulogic_vector (7 downto 0));
  end component;

  component minimax_ex_func_y_bak_op_RAM is
    port (signal rst : in std_ulogic;
      signal clk : in std_ulogic;
      signal we : in std_ulogic;
      signal w_addr : in std_ulogic_vector (5 downto 0);
      signal r_addr : in std_ulogic_vector (5 downto 0);
      signal din : in std_ulogic_vector (7 downto 0);
      signal dout : out std_ulogic_vector (7 downto 0));
  end component;

  component minimax_ex_func_board_bak_op_RAM is
    port (signal rst : in std_ulogic;
      signal clk : in std_ulogic;
      signal we : in std_ulogic;
      signal w_addr : in std_ulogic_vector (5 downto 0);
      signal r_addr : in std_ulogic_vector (5 downto 0);
      signal din : in std_ulogic_vector (7 downto 0);
      signal dout : out std_ulogic_vector (7 downto 0));
  end component;

  type stateType is (init, b0s0, b1s0, b2s0, b3s0, b4s0, b5s0, b6s0, b7s0, b8s0, b9s0, b10s0, b11s0, b11s1, b12s0, b12s1, b13s0, b14s0, b15s0, b16s0, b16s1, b17s0, b17s1, b17s2, b18s0, b18s1, b19s0, b19s1, b19s2, b19s3, b19s4, b19s5, b19s6, b19s7, b19s8, b19s9, b19s10, b19s11, b19s12, b19s13, b19s14, b19s15, b20s0, b21s0, b22s0, b23s0, b24s0, b25s0, b25s1, b26s0, b26s1, b27s0, b28s0, b29s0, b30s0, b30s1, b30s2, b31s0, b32s0, b32s1, b32s2, b33s0, b34s0, b35s0, b35s1, b36s0, b36s1, b36s2, b37s0, b37s1, b38s0, b38s1, b38s2, b39s0, b40s0, b41s0, b42s0, b43s0, b44s0, b45s0, b46s0, b46s1, b46s2, b47s0, b48s0, b49s0, b49s1, b50s0, b51s0, b52s0, b53s0, b53s1, b53s2, b54s0, b55s0, b56s0, b57s0, b58s0, b59s0, b59s1, b60s0, b60s1, b60s2, b60s3, b60s4, b60s5, b60s6, b60s7, b60s8, b60s9, b60s10, b60s11, b60s12, b60s13, b60s14, b60s15, b61s0, b62s0, b63s0, b64s0, b65s0, b66s0, b67s0, b68s0, b69s0, b69s1, b70s0, b70s1, b70s2, b70s3, b70s4, b70s5, b70s6, b70s7, b70s8, b70s9, b70s10, b70s11, b70s12, b70s13, b70s14, b70s15, b71s0, b72s0, b73s0, b74s0, b75s0, b76s0, b76s1, b77s0, b77s1, b77s2, b77s3, b77s4, b77s5, b77s6, b77s7, b77s8, b77s9, b77s10, b77s11, b77s12, b77s13, b77s14, b77s15, b78s0, b79s0, b80s0, b81s0, b82s0, b83s0, b84s0, b85s0, b86s0, b87s0, b88s0, b89s0, b89s1, b90s0, b90s1, b91s0, b92s0, b93s0, b94s0, b95s0, finished);
  type pipeStateType is (idle, init, run, flush);
  type t_b57_0 is record
     f_count_bak_op : std_ulogic_vector (7 downto 0);
     f_count_bak_op0 : std_ulogic_vector (7 downto 0);
  end record;
  type t_b57_1 is record
     f_count_bak_op : std_ulogic_vector (7 downto 0);
     f_r_e_g_4 : std_ulogic_vector (7 downto 0);
     f_r_e_g_0 : std_ulogic_vector (9 downto 0);
  end record;
  type t_b62_0 is record
     f_count_bak_s : std_ulogic_vector (7 downto 0);
     f_count_bak_s0 : std_ulogic_vector (7 downto 0);
  end record;
  type t_b62_1 is record
     f_count_bak_s : std_ulogic_vector (7 downto 0);
     f_r_e_g_4 : std_ulogic_vector (7 downto 0);
     f_r_e_g_0 : std_ulogic_vector (9 downto 0);
  end record;
  signal thisState : stateType;
  signal nextState : stateType;
  signal stateEn : std_ulogic;
  signal newState : std_ulogic;
  signal r_stream0_move_input : std_ulogic_vector (31 downto 0);
  signal r_stream_eval1_input : std_ulogic_vector (31 downto 0);
  signal r_stream_eval2_input : std_ulogic_vector (31 downto 0);
  signal r_piece_sizes : std_ulogic_vector (7 downto 0);
  signal ni322_piece_sizes : std_ulogic_vector (7 downto 0);
  signal ni1001_piece_sizes : std_ulogic_vector (7 downto 0);
  signal ni1630_piece_sizes : std_ulogic_vector (7 downto 0);
  signal ni2304_piece_sizes : std_ulogic_vector (7 downto 0);
  signal ni2696_piece_sizes : std_ulogic_vector (7 downto 0);
  signal p_piece_sizes_waddr : std_ulogic_vector (4 downto 0);
  signal p_piece_sizes_raddr : std_ulogic_vector (4 downto 0);
  signal p_piece_sizes_we : std_ulogic;
  signal p_piece_sizes_din : std_ulogic_vector (7 downto 0);
  signal p_piece_sizes_dout : std_ulogic_vector (7 downto 0);
  signal p_piece_sizes_imm2 : std_ulogic_vector (7 downto 0);
  signal p_piece_sizes_re2 : std_ulogic;
  signal r_piece_y : std_ulogic_vector (7 downto 0);
  signal ni864_piece_y : std_ulogic_vector (7 downto 0);
  signal ni1057_piece_y : std_ulogic_vector (7 downto 0);
  signal ni2172_piece_y : std_ulogic_vector (7 downto 0);
  signal ni2631_piece_y : std_ulogic_vector (7 downto 0);
  signal ni3023_piece_y : std_ulogic_vector (7 downto 0);
  signal p_piece_y_waddr : std_ulogic_vector (9 downto 0);
  signal p_piece_y_raddr : std_ulogic_vector (9 downto 0);
  signal p_piece_y_we : std_ulogic;
  signal p_piece_y_din : std_ulogic_vector (7 downto 0);
  signal p_piece_y_dout : std_ulogic_vector (7 downto 0);
  signal p_piece_y_imm2 : std_ulogic_vector (7 downto 0);
  signal p_piece_y_re2 : std_ulogic;
  signal r_piece_x : std_ulogic_vector (7 downto 0);
  signal ni878_piece_x : std_ulogic_vector (7 downto 0);
  signal ni1071_piece_x : std_ulogic_vector (7 downto 0);
  signal ni2186_piece_x : std_ulogic_vector (7 downto 0);
  signal ni2645_piece_x : std_ulogic_vector (7 downto 0);
  signal ni3037_piece_x : std_ulogic_vector (7 downto 0);
  signal p_piece_x_waddr : std_ulogic_vector (9 downto 0);
  signal p_piece_x_raddr : std_ulogic_vector (9 downto 0);
  signal p_piece_x_we : std_ulogic;
  signal p_piece_x_din : std_ulogic_vector (7 downto 0);
  signal p_piece_x_dout : std_ulogic_vector (7 downto 0);
  signal p_piece_x_imm2 : std_ulogic_vector (7 downto 0);
  signal p_piece_x_re2 : std_ulogic;
  signal r_board : std_ulogic_vector (7 downto 0);
  signal ni145_board : std_ulogic_vector (7 downto 0);
  signal ni161_board : std_ulogic_vector (7 downto 0);
  signal ni375_board : std_ulogic_vector (7 downto 0);
  signal ni387_board : std_ulogic_vector (7 downto 0);
  signal ni420_board : std_ulogic_vector (7 downto 0);
  signal ni428_board : std_ulogic_vector (7 downto 0);
  signal ni435_board : std_ulogic_vector (7 downto 0);
  signal ni451_board : std_ulogic_vector (7 downto 0);
  signal ni531_board : std_ulogic_vector (7 downto 0);
  signal ni539_board : std_ulogic_vector (7 downto 0);
  signal ni546_board : std_ulogic_vector (7 downto 0);
  signal ni562_board : std_ulogic_vector (7 downto 0);
  signal ni642_board : std_ulogic_vector (7 downto 0);
  signal ni650_board : std_ulogic_vector (7 downto 0);
  signal ni657_board : std_ulogic_vector (7 downto 0);
  signal ni673_board : std_ulogic_vector (7 downto 0);
  signal ni753_board : std_ulogic_vector (7 downto 0);
  signal ni761_board : std_ulogic_vector (7 downto 0);
  signal ni768_board : std_ulogic_vector (7 downto 0);
  signal ni784_board : std_ulogic_vector (7 downto 0);
  signal ni1014_board : std_ulogic_vector (7 downto 0);
  signal ni1584_board : std_ulogic_vector (7 downto 0);
  signal ni1683_board : std_ulogic_vector (7 downto 0);
  signal ni1695_board : std_ulogic_vector (7 downto 0);
  signal ni1728_board : std_ulogic_vector (7 downto 0);
  signal ni1736_board : std_ulogic_vector (7 downto 0);
  signal ni1743_board : std_ulogic_vector (7 downto 0);
  signal ni1759_board : std_ulogic_vector (7 downto 0);
  signal ni1839_board : std_ulogic_vector (7 downto 0);
  signal ni1847_board : std_ulogic_vector (7 downto 0);
  signal ni1854_board : std_ulogic_vector (7 downto 0);
  signal ni1870_board : std_ulogic_vector (7 downto 0);
  signal ni1950_board : std_ulogic_vector (7 downto 0);
  signal ni1958_board : std_ulogic_vector (7 downto 0);
  signal ni1965_board : std_ulogic_vector (7 downto 0);
  signal ni1981_board : std_ulogic_vector (7 downto 0);
  signal ni2061_board : std_ulogic_vector (7 downto 0);
  signal ni2069_board : std_ulogic_vector (7 downto 0);
  signal ni2076_board : std_ulogic_vector (7 downto 0);
  signal ni2092_board : std_ulogic_vector (7 downto 0);
  signal ni2241_board : std_ulogic_vector (7 downto 0);
  signal ni2338_board : std_ulogic_vector (7 downto 0);
  signal ni2371_board : std_ulogic_vector (7 downto 0);
  signal ni2379_board : std_ulogic_vector (7 downto 0);
  signal ni2386_board : std_ulogic_vector (7 downto 0);
  signal ni2402_board : std_ulogic_vector (7 downto 0);
  signal ni2436_board : std_ulogic_vector (7 downto 0);
  signal ni2444_board : std_ulogic_vector (7 downto 0);
  signal ni2451_board : std_ulogic_vector (7 downto 0);
  signal ni2467_board : std_ulogic_vector (7 downto 0);
  signal ni2501_board : std_ulogic_vector (7 downto 0);
  signal ni2509_board : std_ulogic_vector (7 downto 0);
  signal ni2516_board : std_ulogic_vector (7 downto 0);
  signal ni2532_board : std_ulogic_vector (7 downto 0);
  signal ni2566_board : std_ulogic_vector (7 downto 0);
  signal ni2574_board : std_ulogic_vector (7 downto 0);
  signal ni2581_board : std_ulogic_vector (7 downto 0);
  signal ni2597_board : std_ulogic_vector (7 downto 0);
  signal ni2730_board : std_ulogic_vector (7 downto 0);
  signal ni2763_board : std_ulogic_vector (7 downto 0);
  signal ni2771_board : std_ulogic_vector (7 downto 0);
  signal ni2778_board : std_ulogic_vector (7 downto 0);
  signal ni2794_board : std_ulogic_vector (7 downto 0);
  signal ni2828_board : std_ulogic_vector (7 downto 0);
  signal ni2836_board : std_ulogic_vector (7 downto 0);
  signal ni2843_board : std_ulogic_vector (7 downto 0);
  signal ni2859_board : std_ulogic_vector (7 downto 0);
  signal ni2893_board : std_ulogic_vector (7 downto 0);
  signal ni2901_board : std_ulogic_vector (7 downto 0);
  signal ni2908_board : std_ulogic_vector (7 downto 0);
  signal ni2924_board : std_ulogic_vector (7 downto 0);
  signal ni2958_board : std_ulogic_vector (7 downto 0);
  signal ni2966_board : std_ulogic_vector (7 downto 0);
  signal ni2973_board : std_ulogic_vector (7 downto 0);
  signal ni2989_board : std_ulogic_vector (7 downto 0);
  signal ni3113_board : std_ulogic_vector (7 downto 0);
  signal ni3129_board : std_ulogic_vector (7 downto 0);
  signal p_board_addr : std_ulogic_vector (9 downto 0);
  signal p_board_addr2 : std_ulogic_vector (9 downto 0);
  signal p_board_we : std_ulogic;
  signal p_board_din : std_ulogic_vector (7 downto 0);
  signal p_board_dout : std_ulogic_vector (7 downto 0);
  signal p_board_imm : std_ulogic_vector (7 downto 0);
  signal p_board_re : std_ulogic;
  signal r2_board : std_ulogic_vector (7 downto 0);
  signal p_board_dout2 : std_ulogic_vector (7 downto 0);
  signal p_board_imm2 : std_ulogic_vector (7 downto 0);
  signal p_board_re2 : std_ulogic;
  signal r_score_self : std_ulogic_vector (7 downto 0);
  signal ni3353_score_self : std_ulogic_vector (7 downto 0);
  signal ni3540_score_self : std_ulogic_vector (7 downto 0);
  signal ni3609_score_self : std_ulogic_vector (7 downto 0);
  signal ni3620_score_self : std_ulogic_vector (7 downto 0);
  signal ni3755_score_self : std_ulogic_vector (7 downto 0);
  signal r_score_opp : std_ulogic_vector (7 downto 0);
  signal ni3354_score_opp : std_ulogic_vector (7 downto 0);
  signal ni3378_score_opp : std_ulogic_vector (7 downto 0);
  signal ni3533_score_opp : std_ulogic_vector (7 downto 0);
  signal ni3680_score_opp : std_ulogic_vector (7 downto 0);
  signal ni3756_score_opp : std_ulogic_vector (7 downto 0);
  signal r_num_avail_self : std_ulogic_vector (7 downto 0);
  signal ni3355_num_avail_self : std_ulogic_vector (7 downto 0);
  signal ni3612_num_avail_self : std_ulogic_vector (7 downto 0);
  signal ni3757_num_avail_self : std_ulogic_vector (7 downto 0);
  signal r_num_avail_opp : std_ulogic_vector (7 downto 0);
  signal ni3356_num_avail_opp : std_ulogic_vector (7 downto 0);
  signal ni3672_num_avail_opp : std_ulogic_vector (7 downto 0);
  signal ni3758_num_avail_opp : std_ulogic_vector (7 downto 0);
  signal r_avail_self : std_ulogic_vector (23 downto 0);
  signal ni3351_avail_self : std_ulogic_vector (23 downto 0);
  signal ni3539_avail_self : std_ulogic_vector (23 downto 0);
  signal ni3610_avail_self : std_ulogic_vector (23 downto 0);
  signal ni3619_avail_self : std_ulogic_vector (23 downto 0);
  signal ni3753_avail_self : std_ulogic_vector (23 downto 0);
  signal r_avail_opp : std_ulogic_vector (23 downto 0);
  signal ni3352_avail_opp : std_ulogic_vector (23 downto 0);
  signal ni3377_avail_opp : std_ulogic_vector (23 downto 0);
  signal ni3534_avail_opp : std_ulogic_vector (23 downto 0);
  signal ni3679_avail_opp : std_ulogic_vector (23 downto 0);
  signal ni3754_avail_opp : std_ulogic_vector (23 downto 0);
  signal r_x : std_ulogic_vector (7 downto 0);
  signal ni3333_x : std_ulogic_vector (7 downto 0);
  signal ni3347_x : std_ulogic_vector (7 downto 0);
  signal ni3387_x : std_ulogic_vector (7 downto 0);
  signal ni3399_x : std_ulogic_vector (7 downto 0);
  signal ni3411_x : std_ulogic_vector (7 downto 0);
  signal ni3423_x : std_ulogic_vector (7 downto 0);
  signal ni3549_x : std_ulogic_vector (7 downto 0);
  signal ni3561_x : std_ulogic_vector (7 downto 0);
  signal ni3573_x : std_ulogic_vector (7 downto 0);
  signal ni3585_x : std_ulogic_vector (7 downto 0);
  signal ni3626_x : std_ulogic_vector (7 downto 0);
  signal ni3636_x : std_ulogic_vector (7 downto 0);
  signal ni3646_x : std_ulogic_vector (7 downto 0);
  signal ni3656_x : std_ulogic_vector (7 downto 0);
  signal ni3686_x : std_ulogic_vector (7 downto 0);
  signal ni3696_x : std_ulogic_vector (7 downto 0);
  signal ni3706_x : std_ulogic_vector (7 downto 0);
  signal ni3716_x : std_ulogic_vector (7 downto 0);
  signal ni3735_x : std_ulogic_vector (7 downto 0);
  signal ni3749_x : std_ulogic_vector (7 downto 0);
  signal r_y : std_ulogic_vector (7 downto 0);
  signal ni3330_y : std_ulogic_vector (7 downto 0);
  signal ni3349_y : std_ulogic_vector (7 downto 0);
  signal ni3386_y : std_ulogic_vector (7 downto 0);
  signal ni3398_y : std_ulogic_vector (7 downto 0);
  signal ni3410_y : std_ulogic_vector (7 downto 0);
  signal ni3422_y : std_ulogic_vector (7 downto 0);
  signal ni3548_y : std_ulogic_vector (7 downto 0);
  signal ni3560_y : std_ulogic_vector (7 downto 0);
  signal ni3572_y : std_ulogic_vector (7 downto 0);
  signal ni3584_y : std_ulogic_vector (7 downto 0);
  signal ni3625_y : std_ulogic_vector (7 downto 0);
  signal ni3635_y : std_ulogic_vector (7 downto 0);
  signal ni3645_y : std_ulogic_vector (7 downto 0);
  signal ni3655_y : std_ulogic_vector (7 downto 0);
  signal ni3685_y : std_ulogic_vector (7 downto 0);
  signal ni3695_y : std_ulogic_vector (7 downto 0);
  signal ni3705_y : std_ulogic_vector (7 downto 0);
  signal ni3715_y : std_ulogic_vector (7 downto 0);
  signal ni3732_y : std_ulogic_vector (7 downto 0);
  signal ni3751_y : std_ulogic_vector (7 downto 0);
  signal r_xoff : std_ulogic_vector (7 downto 0);
  signal ni3381_xoff : std_ulogic_vector (7 downto 0);
  signal ni3438_xoff : std_ulogic_vector (7 downto 0);
  signal ni3460_xoff : std_ulogic_vector (7 downto 0);
  signal ni3468_xoff : std_ulogic_vector (7 downto 0);
  signal ni3528_xoff : std_ulogic_vector (7 downto 0);
  signal ni3543_xoff : std_ulogic_vector (7 downto 0);
  signal ni3600_xoff : std_ulogic_vector (7 downto 0);
  signal ni3605_xoff : std_ulogic_vector (7 downto 0);
  signal ni3623_xoff : std_ulogic_vector (7 downto 0);
  signal ni3669_xoff : std_ulogic_vector (7 downto 0);
  signal ni3683_xoff : std_ulogic_vector (7 downto 0);
  signal ni3729_xoff : std_ulogic_vector (7 downto 0);
  signal r_yoff : std_ulogic_vector (7 downto 0);
  signal ni3380_yoff : std_ulogic_vector (7 downto 0);
  signal ni3436_yoff : std_ulogic_vector (7 downto 0);
  signal ni3459_yoff : std_ulogic_vector (7 downto 0);
  signal ni3466_yoff : std_ulogic_vector (7 downto 0);
  signal ni3529_yoff : std_ulogic_vector (7 downto 0);
  signal ni3542_yoff : std_ulogic_vector (7 downto 0);
  signal ni3598_yoff : std_ulogic_vector (7 downto 0);
  signal ni3606_yoff : std_ulogic_vector (7 downto 0);
  signal ni3622_yoff : std_ulogic_vector (7 downto 0);
  signal ni3667_yoff : std_ulogic_vector (7 downto 0);
  signal ni3682_yoff : std_ulogic_vector (7 downto 0);
  signal ni3727_yoff : std_ulogic_vector (7 downto 0);
  signal r_board_t : std_ulogic_vector (7 downto 0);
  signal ni3390_board_t : std_ulogic_vector (7 downto 0);
  signal ni3402_board_t : std_ulogic_vector (7 downto 0);
  signal ni3414_board_t : std_ulogic_vector (7 downto 0);
  signal ni3426_board_t : std_ulogic_vector (7 downto 0);
  signal ni3461_board_t : std_ulogic_vector (7 downto 0);
  signal ni3552_board_t : std_ulogic_vector (7 downto 0);
  signal ni3564_board_t : std_ulogic_vector (7 downto 0);
  signal ni3576_board_t : std_ulogic_vector (7 downto 0);
  signal ni3588_board_t : std_ulogic_vector (7 downto 0);
  signal ni3629_board_t : std_ulogic_vector (7 downto 0);
  signal ni3639_board_t : std_ulogic_vector (7 downto 0);
  signal ni3649_board_t : std_ulogic_vector (7 downto 0);
  signal ni3659_board_t : std_ulogic_vector (7 downto 0);
  signal ni3689_board_t : std_ulogic_vector (7 downto 0);
  signal ni3699_board_t : std_ulogic_vector (7 downto 0);
  signal ni3709_board_t : std_ulogic_vector (7 downto 0);
  signal ni3719_board_t : std_ulogic_vector (7 downto 0);
  signal r_m_piece_min : std_ulogic_vector (7 downto 0);
  signal ni3443_m_piece_min : std_ulogic_vector (7 downto 0);
  signal r_size : std_ulogic_vector (7 downto 0);
  signal ni3376_size : std_ulogic_vector (7 downto 0);
  signal ni3379_size : std_ulogic_vector (7 downto 0);
  signal ni3434_size : std_ulogic_vector (7 downto 0);
  signal ni3458_size : std_ulogic_vector (7 downto 0);
  signal ni3465_size : std_ulogic_vector (7 downto 0);
  signal ni3538_size : std_ulogic_vector (7 downto 0);
  signal ni3541_size : std_ulogic_vector (7 downto 0);
  signal ni3596_size : std_ulogic_vector (7 downto 0);
  signal ni3618_size : std_ulogic_vector (7 downto 0);
  signal ni3621_size : std_ulogic_vector (7 downto 0);
  signal ni3665_size : std_ulogic_vector (7 downto 0);
  signal ni3678_size : std_ulogic_vector (7 downto 0);
  signal ni3681_size : std_ulogic_vector (7 downto 0);
  signal ni3725_size : std_ulogic_vector (7 downto 0);
  signal r_move_type : std_ulogic_vector (7 downto 0);
  signal ni3361_move_type : std_ulogic_vector (7 downto 0);
  signal r_count : std_ulogic_vector (7 downto 0);
  signal ni3445_count : std_ulogic_vector (7 downto 0);
  signal ni3478_count : std_ulogic_vector (7 downto 0);
  signal ni3481_count : std_ulogic_vector (7 downto 0);
  signal ni3507_count : std_ulogic_vector (7 downto 0);
  signal ni3513_count : std_ulogic_vector (7 downto 0);
  signal r_next_stream : std_ulogic_vector (7 downto 0);
  signal ni3446_next_stream : std_ulogic_vector (7 downto 0);
  signal ni3479_next_stream : std_ulogic_vector (7 downto 0);
  signal ni3482_next_stream : std_ulogic_vector (7 downto 0);
  signal r_x1 : std_ulogic_vector (7 downto 0);
  signal ni3389_x1 : std_ulogic_vector (7 downto 0);
  signal ni3401_x1 : std_ulogic_vector (7 downto 0);
  signal ni3413_x1 : std_ulogic_vector (7 downto 0);
  signal ni3425_x1 : std_ulogic_vector (7 downto 0);
  signal ni3551_x1 : std_ulogic_vector (7 downto 0);
  signal ni3563_x1 : std_ulogic_vector (7 downto 0);
  signal ni3575_x1 : std_ulogic_vector (7 downto 0);
  signal ni3587_x1 : std_ulogic_vector (7 downto 0);
  signal ni3628_x1 : std_ulogic_vector (7 downto 0);
  signal ni3638_x1 : std_ulogic_vector (7 downto 0);
  signal ni3648_x1 : std_ulogic_vector (7 downto 0);
  signal ni3658_x1 : std_ulogic_vector (7 downto 0);
  signal ni3688_x1 : std_ulogic_vector (7 downto 0);
  signal ni3698_x1 : std_ulogic_vector (7 downto 0);
  signal ni3708_x1 : std_ulogic_vector (7 downto 0);
  signal ni3718_x1 : std_ulogic_vector (7 downto 0);
  signal r_y1 : std_ulogic_vector (7 downto 0);
  signal ni3388_y1 : std_ulogic_vector (7 downto 0);
  signal ni3400_y1 : std_ulogic_vector (7 downto 0);
  signal ni3412_y1 : std_ulogic_vector (7 downto 0);
  signal ni3424_y1 : std_ulogic_vector (7 downto 0);
  signal ni3550_y1 : std_ulogic_vector (7 downto 0);
  signal ni3562_y1 : std_ulogic_vector (7 downto 0);
  signal ni3574_y1 : std_ulogic_vector (7 downto 0);
  signal ni3586_y1 : std_ulogic_vector (7 downto 0);
  signal ni3627_y1 : std_ulogic_vector (7 downto 0);
  signal ni3637_y1 : std_ulogic_vector (7 downto 0);
  signal ni3647_y1 : std_ulogic_vector (7 downto 0);
  signal ni3657_y1 : std_ulogic_vector (7 downto 0);
  signal ni3687_y1 : std_ulogic_vector (7 downto 0);
  signal ni3697_y1 : std_ulogic_vector (7 downto 0);
  signal ni3707_y1 : std_ulogic_vector (7 downto 0);
  signal ni3717_y1 : std_ulogic_vector (7 downto 0);
  signal r_board_t1 : std_ulogic_vector (7 downto 0);
  signal ni3392_board_t1 : std_ulogic_vector (7 downto 0);
  signal ni3404_board_t1 : std_ulogic_vector (7 downto 0);
  signal ni3416_board_t1 : std_ulogic_vector (7 downto 0);
  signal ni3428_board_t1 : std_ulogic_vector (7 downto 0);
  signal ni3554_board_t1 : std_ulogic_vector (7 downto 0);
  signal ni3566_board_t1 : std_ulogic_vector (7 downto 0);
  signal ni3578_board_t1 : std_ulogic_vector (7 downto 0);
  signal ni3590_board_t1 : std_ulogic_vector (7 downto 0);
  signal ni3631_board_t1 : std_ulogic_vector (7 downto 0);
  signal ni3641_board_t1 : std_ulogic_vector (7 downto 0);
  signal ni3651_board_t1 : std_ulogic_vector (7 downto 0);
  signal ni3661_board_t1 : std_ulogic_vector (7 downto 0);
  signal ni3691_board_t1 : std_ulogic_vector (7 downto 0);
  signal ni3701_board_t1 : std_ulogic_vector (7 downto 0);
  signal ni3711_board_t1 : std_ulogic_vector (7 downto 0);
  signal ni3721_board_t1 : std_ulogic_vector (7 downto 0);
  signal r_mx_backup : std_ulogic_vector (7 downto 0);
  signal ni3368_mx_backup : std_ulogic_vector (7 downto 0);
  signal r_m_x : std_ulogic_vector (7 downto 0);
  signal ni3362_m_x : std_ulogic_vector (7 downto 0);
  signal ni3455_m_x : std_ulogic_vector (7 downto 0);
  signal ni3496_m_x : std_ulogic_vector (7 downto 0);
  signal r_m_y : std_ulogic_vector (7 downto 0);
  signal ni3363_m_y : std_ulogic_vector (7 downto 0);
  signal ni3453_m_y : std_ulogic_vector (7 downto 0);
  signal ni3498_m_y : std_ulogic_vector (7 downto 0);
  signal r_m_piece : std_ulogic_vector (7 downto 0);
  signal ni3364_m_piece : std_ulogic_vector (7 downto 0);
  signal ni3447_m_piece : std_ulogic_vector (7 downto 0);
  signal ni3502_m_piece : std_ulogic_vector (7 downto 0);
  signal r_m_rotate : std_ulogic_vector (7 downto 0);
  signal ni3365_m_rotate : std_ulogic_vector (7 downto 0);
  signal ni3451_m_rotate : std_ulogic_vector (7 downto 0);
  signal ni3500_m_rotate : std_ulogic_vector (7 downto 0);
  signal r_moves_found : std_ulogic_vector (1 downto 0);
  signal ni3440_moves_found : std_ulogic_vector (1 downto 0);
  signal ni3472_moves_found : std_ulogic_vector (1 downto 0);
  signal r_lib_check : std_ulogic_vector (1 downto 0);
  signal ni3457_lib_check : std_ulogic_vector (1 downto 0);
  signal ni3464_lib_check : std_ulogic_vector (1 downto 0);
  signal r_move_valid : std_ulogic_vector (1 downto 0);
  signal ni3463_move_valid : std_ulogic_vector (1 downto 0);
  signal r_avail : std_ulogic_vector (1 downto 0);
  signal ni3450_avail : std_ulogic_vector (1 downto 0);
  signal r_state : std_ulogic_vector (1 downto 0);
  signal ni3444_state : std_ulogic_vector (1 downto 0);
  signal ni3484_state : std_ulogic_vector (1 downto 0);
  signal r_not_prune : std_ulogic_vector (1 downto 0);
  signal ni3442_not_prune : std_ulogic_vector (1 downto 0);
  signal ni3495_not_prune : std_ulogic_vector (1 downto 0);
  signal r_search_extra : std_ulogic_vector (1 downto 0);
  signal ni3357_search_extra : std_ulogic_vector (1 downto 0);
  signal ni3616_search_extra : std_ulogic_vector (1 downto 0);
  signal ni3617_search_extra : std_ulogic_vector (1 downto 0);
  signal ni3676_search_extra : std_ulogic_vector (1 downto 0);
  signal ni3677_search_extra : std_ulogic_vector (1 downto 0);
  signal ni3759_search_extra : std_ulogic_vector (1 downto 0);
  signal r_move : std_ulogic_vector (31 downto 0);
  signal ni3360_move : std_ulogic_vector (31 downto 0);
  signal ni3523_move : std_ulogic_vector (31 downto 0);
  signal ni3524_move : std_ulogic_vector (31 downto 0);
  signal r_m : std_ulogic_vector (31 downto 0);
  signal ni3473_m : std_ulogic_vector (31 downto 0);
  signal ni3518_m : std_ulogic_vector (31 downto 0);
  signal ni3526_m : std_ulogic_vector (31 downto 0);
  signal r_m1 : std_ulogic_vector (31 downto 0);
  signal ni3369_m1 : std_ulogic_vector (31 downto 0);
  signal ni3474_m1 : std_ulogic_vector (31 downto 0);
  signal r_m2 : std_ulogic_vector (31 downto 0);
  signal ni3371_m2 : std_ulogic_vector (31 downto 0);
  signal ni3475_m2 : std_ulogic_vector (31 downto 0);
  signal r_m_recv : std_ulogic_vector (31 downto 0);
  signal ni3488_m_recv : std_ulogic_vector (31 downto 0);
  signal ni3490_m_recv : std_ulogic_vector (31 downto 0);
  signal ni3506_m_recv : std_ulogic_vector (31 downto 0);
  signal ni3512_m_recv : std_ulogic_vector (31 downto 0);
  signal ni3519_m_recv : std_ulogic_vector (31 downto 0);
  signal r_x_bak_s : std_ulogic_vector (7 downto 0);
  signal ni1666_x_bak_s : std_ulogic_vector (7 downto 0);
  signal ni1775_x_bak_s : std_ulogic_vector (7 downto 0);
  signal ni1798_x_bak_s : std_ulogic_vector (7 downto 0);
  signal ni1886_x_bak_s : std_ulogic_vector (7 downto 0);
  signal ni1909_x_bak_s : std_ulogic_vector (7 downto 0);
  signal ni1997_x_bak_s : std_ulogic_vector (7 downto 0);
  signal ni2020_x_bak_s : std_ulogic_vector (7 downto 0);
  signal ni2108_x_bak_s : std_ulogic_vector (7 downto 0);
  signal ni2131_x_bak_s : std_ulogic_vector (7 downto 0);
  signal ni2230_x_bak_s : std_ulogic_vector (7 downto 0);
  signal p_x_bak_s_waddr : std_ulogic_vector (5 downto 0);
  signal p_x_bak_s_raddr : std_ulogic_vector (5 downto 0);
  signal p_x_bak_s_we : std_ulogic;
  signal p_x_bak_s_din : std_ulogic_vector (7 downto 0);
  signal p_x_bak_s_dout : std_ulogic_vector (7 downto 0);
  signal p_x_bak_s_imm2 : std_ulogic_vector (7 downto 0);
  signal p_x_bak_s_re2 : std_ulogic;
  signal r_y_bak_s : std_ulogic_vector (7 downto 0);
  signal ni1672_y_bak_s : std_ulogic_vector (7 downto 0);
  signal ni1781_y_bak_s : std_ulogic_vector (7 downto 0);
  signal ni1804_y_bak_s : std_ulogic_vector (7 downto 0);
  signal ni1892_y_bak_s : std_ulogic_vector (7 downto 0);
  signal ni1915_y_bak_s : std_ulogic_vector (7 downto 0);
  signal ni2003_y_bak_s : std_ulogic_vector (7 downto 0);
  signal ni2026_y_bak_s : std_ulogic_vector (7 downto 0);
  signal ni2114_y_bak_s : std_ulogic_vector (7 downto 0);
  signal ni2137_y_bak_s : std_ulogic_vector (7 downto 0);
  signal ni2236_y_bak_s : std_ulogic_vector (7 downto 0);
  signal p_y_bak_s_waddr : std_ulogic_vector (5 downto 0);
  signal p_y_bak_s_raddr : std_ulogic_vector (5 downto 0);
  signal p_y_bak_s_we : std_ulogic;
  signal p_y_bak_s_din : std_ulogic_vector (7 downto 0);
  signal p_y_bak_s_dout : std_ulogic_vector (7 downto 0);
  signal p_y_bak_s_imm2 : std_ulogic_vector (7 downto 0);
  signal p_y_bak_s_re2 : std_ulogic;
  signal r_board_bak_s : std_ulogic_vector (7 downto 0);
  signal ni1678_board_bak_s : std_ulogic_vector (7 downto 0);
  signal ni1787_board_bak_s : std_ulogic_vector (7 downto 0);
  signal ni1810_board_bak_s : std_ulogic_vector (7 downto 0);
  signal ni1898_board_bak_s : std_ulogic_vector (7 downto 0);
  signal ni1921_board_bak_s : std_ulogic_vector (7 downto 0);
  signal ni2009_board_bak_s : std_ulogic_vector (7 downto 0);
  signal ni2032_board_bak_s : std_ulogic_vector (7 downto 0);
  signal ni2120_board_bak_s : std_ulogic_vector (7 downto 0);
  signal ni2143_board_bak_s : std_ulogic_vector (7 downto 0);
  signal ni2248_board_bak_s : std_ulogic_vector (7 downto 0);
  signal p_board_bak_s_waddr : std_ulogic_vector (5 downto 0);
  signal p_board_bak_s_raddr : std_ulogic_vector (5 downto 0);
  signal p_board_bak_s_we : std_ulogic;
  signal p_board_bak_s_din : std_ulogic_vector (7 downto 0);
  signal p_board_bak_s_dout : std_ulogic_vector (7 downto 0);
  signal p_board_bak_s_imm2 : std_ulogic_vector (7 downto 0);
  signal p_board_bak_s_re2 : std_ulogic;
  signal r_count_bak_s : std_ulogic_vector (7 downto 0);
  signal ni3544_count_bak_s : std_ulogic_vector (7 downto 0);
  signal ni3546_count_bak_s : std_ulogic_vector (7 downto 0);
  signal ni3558_count_bak_s : std_ulogic_vector (7 downto 0);
  signal ni3559_count_bak_s : std_ulogic_vector (7 downto 0);
  signal ni3570_count_bak_s : std_ulogic_vector (7 downto 0);
  signal ni3571_count_bak_s : std_ulogic_vector (7 downto 0);
  signal ni3582_count_bak_s : std_ulogic_vector (7 downto 0);
  signal ni3583_count_bak_s : std_ulogic_vector (7 downto 0);
  signal ni3594_count_bak_s : std_ulogic_vector (7 downto 0);
  signal ni3595_count_bak_s : std_ulogic_vector (7 downto 0);
  signal ni3603_count_bak_s : std_ulogic_vector (7 downto 0);
  signal ni6267148_count_bak_s : std_ulogic_vector (7 downto 0);
  signal ni6267149_count_bak_s : std_ulogic_vector (7 downto 0);
  signal r_x_bak_op : std_ulogic_vector (7 downto 0);
  signal ni358_x_bak_op : std_ulogic_vector (7 downto 0);
  signal ni467_x_bak_op : std_ulogic_vector (7 downto 0);
  signal ni490_x_bak_op : std_ulogic_vector (7 downto 0);
  signal ni578_x_bak_op : std_ulogic_vector (7 downto 0);
  signal ni601_x_bak_op : std_ulogic_vector (7 downto 0);
  signal ni689_x_bak_op : std_ulogic_vector (7 downto 0);
  signal ni712_x_bak_op : std_ulogic_vector (7 downto 0);
  signal ni800_x_bak_op : std_ulogic_vector (7 downto 0);
  signal ni823_x_bak_op : std_ulogic_vector (7 downto 0);
  signal ni1573_x_bak_op : std_ulogic_vector (7 downto 0);
  signal p_x_bak_op_waddr : std_ulogic_vector (5 downto 0);
  signal p_x_bak_op_raddr : std_ulogic_vector (5 downto 0);
  signal p_x_bak_op_we : std_ulogic;
  signal p_x_bak_op_din : std_ulogic_vector (7 downto 0);
  signal p_x_bak_op_dout : std_ulogic_vector (7 downto 0);
  signal p_x_bak_op_imm2 : std_ulogic_vector (7 downto 0);
  signal p_x_bak_op_re2 : std_ulogic;
  signal r_y_bak_op : std_ulogic_vector (7 downto 0);
  signal ni364_y_bak_op : std_ulogic_vector (7 downto 0);
  signal ni473_y_bak_op : std_ulogic_vector (7 downto 0);
  signal ni496_y_bak_op : std_ulogic_vector (7 downto 0);
  signal ni584_y_bak_op : std_ulogic_vector (7 downto 0);
  signal ni607_y_bak_op : std_ulogic_vector (7 downto 0);
  signal ni695_y_bak_op : std_ulogic_vector (7 downto 0);
  signal ni718_y_bak_op : std_ulogic_vector (7 downto 0);
  signal ni806_y_bak_op : std_ulogic_vector (7 downto 0);
  signal ni829_y_bak_op : std_ulogic_vector (7 downto 0);
  signal ni1579_y_bak_op : std_ulogic_vector (7 downto 0);
  signal p_y_bak_op_waddr : std_ulogic_vector (5 downto 0);
  signal p_y_bak_op_raddr : std_ulogic_vector (5 downto 0);
  signal p_y_bak_op_we : std_ulogic;
  signal p_y_bak_op_din : std_ulogic_vector (7 downto 0);
  signal p_y_bak_op_dout : std_ulogic_vector (7 downto 0);
  signal p_y_bak_op_imm2 : std_ulogic_vector (7 downto 0);
  signal p_y_bak_op_re2 : std_ulogic;
  signal r_board_bak_op : std_ulogic_vector (7 downto 0);
  signal ni370_board_bak_op : std_ulogic_vector (7 downto 0);
  signal ni479_board_bak_op : std_ulogic_vector (7 downto 0);
  signal ni502_board_bak_op : std_ulogic_vector (7 downto 0);
  signal ni590_board_bak_op : std_ulogic_vector (7 downto 0);
  signal ni613_board_bak_op : std_ulogic_vector (7 downto 0);
  signal ni701_board_bak_op : std_ulogic_vector (7 downto 0);
  signal ni724_board_bak_op : std_ulogic_vector (7 downto 0);
  signal ni812_board_bak_op : std_ulogic_vector (7 downto 0);
  signal ni835_board_bak_op : std_ulogic_vector (7 downto 0);
  signal ni1591_board_bak_op : std_ulogic_vector (7 downto 0);
  signal p_board_bak_op_waddr : std_ulogic_vector (5 downto 0);
  signal p_board_bak_op_raddr : std_ulogic_vector (5 downto 0);
  signal p_board_bak_op_we : std_ulogic;
  signal p_board_bak_op_din : std_ulogic_vector (7 downto 0);
  signal p_board_bak_op_dout : std_ulogic_vector (7 downto 0);
  signal p_board_bak_op_imm2 : std_ulogic_vector (7 downto 0);
  signal p_board_bak_op_re2 : std_ulogic;
  signal r_count_bak_op : std_ulogic_vector (7 downto 0);
  signal ni3382_count_bak_op : std_ulogic_vector (7 downto 0);
  signal ni3384_count_bak_op : std_ulogic_vector (7 downto 0);
  signal ni3396_count_bak_op : std_ulogic_vector (7 downto 0);
  signal ni3397_count_bak_op : std_ulogic_vector (7 downto 0);
  signal ni3408_count_bak_op : std_ulogic_vector (7 downto 0);
  signal ni3409_count_bak_op : std_ulogic_vector (7 downto 0);
  signal ni3420_count_bak_op : std_ulogic_vector (7 downto 0);
  signal ni3421_count_bak_op : std_ulogic_vector (7 downto 0);
  signal ni3432_count_bak_op : std_ulogic_vector (7 downto 0);
  signal ni3433_count_bak_op : std_ulogic_vector (7 downto 0);
  signal ni3527_count_bak_op : std_ulogic_vector (7 downto 0);
  signal ni6267145_count_bak_op : std_ulogic_vector (7 downto 0);
  signal ni6267146_count_bak_op : std_ulogic_vector (7 downto 0);
  signal r_score_self_bak : std_ulogic_vector (7 downto 0);
  signal ni3537_score_self_bak : std_ulogic_vector (7 downto 0);
  signal r_score_opp_bak : std_ulogic_vector (7 downto 0);
  signal ni3375_score_opp_bak : std_ulogic_vector (7 downto 0);
  signal r_avail_self_bak : std_ulogic_vector (23 downto 0);
  signal ni3536_avail_self_bak : std_ulogic_vector (23 downto 0);
  signal r_avail_opp_bak : std_ulogic_vector (23 downto 0);
  signal ni3374_avail_opp_bak : std_ulogic_vector (23 downto 0);
  signal r_alpha : std_ulogic_vector (15 downto 0);
  signal ni3370_alpha : std_ulogic_vector (15 downto 0);
  signal ni3493_alpha : std_ulogic_vector (15 downto 0);
  signal ni3510_alpha : std_ulogic_vector (15 downto 0);
  signal ni3516_alpha : std_ulogic_vector (15 downto 0);
  signal ni3522_alpha : std_ulogic_vector (15 downto 0);
  signal r_beta : std_ulogic_vector (15 downto 0);
  signal ni3372_beta : std_ulogic_vector (15 downto 0);
  signal r_utility : std_ulogic_vector (15 downto 0);
  signal ni3491_utility : std_ulogic_vector (15 downto 0);
  signal ni3508_utility : std_ulogic_vector (15 downto 0);
  signal ni3514_utility : std_ulogic_vector (15 downto 0);
  signal ni3520_utility : std_ulogic_vector (15 downto 0);
  signal r_suif_tmp : std_ulogic_vector (31 downto 0);
  signal ni3350_suif_tmp : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp0 : std_ulogic_vector (31 downto 0);
  signal ni3348_suif_tmp0 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp1 : std_ulogic_vector (31 downto 0);
  signal ni3340_suif_tmp1 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp00 : std_ulogic_vector (31 downto 0);
  signal ni3341_suif_tmp00 : std_ulogic_vector (31 downto 0);
  signal ni3342_suif_tmp00 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp10 : std_ulogic_vector (31 downto 0);
  signal ni3338_suif_tmp10 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp2 : std_ulogic_vector (31 downto 0);
  signal ni3339_suif_tmp2 : std_ulogic_vector (31 downto 0);
  signal ni3343_suif_tmp2 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp3 : std_ulogic_vector (31 downto 0);
  signal ni3336_suif_tmp3 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp4 : std_ulogic_vector (31 downto 0);
  signal ni3337_suif_tmp4 : std_ulogic_vector (31 downto 0);
  signal ni3344_suif_tmp4 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp5 : std_ulogic_vector (31 downto 0);
  signal ni3367_suif_tmp5 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp6 : std_ulogic_vector (31 downto 0);
  signal ni3373_suif_tmp6 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp7 : std_ulogic_vector (31 downto 0);
  signal ni3435_suif_tmp7 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp8 : std_ulogic_vector (31 downto 0);
  signal ni3441_suif_tmp8 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp9 : std_ulogic_vector (31 downto 0);
  signal ni3503_suif_tmp9 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp11 : std_ulogic_vector (31 downto 0);
  signal ni3452_suif_tmp11 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp12 : std_ulogic_vector (31 downto 0);
  signal ni3501_suif_tmp12 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp13 : std_ulogic_vector (31 downto 0);
  signal ni3454_suif_tmp13 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp14 : std_ulogic_vector (31 downto 0);
  signal ni3499_suif_tmp14 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp15 : std_ulogic_vector (31 downto 0);
  signal ni3456_suif_tmp15 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp16 : std_ulogic_vector (31 downto 0);
  signal ni3497_suif_tmp16 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp17 : std_ulogic_vector (31 downto 0);
  signal ni3470_suif_tmp17 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp18 : std_ulogic_vector (31 downto 0);
  signal ni3471_suif_tmp18 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp19 : std_ulogic_vector (31 downto 0);
  signal ni3476_suif_tmp19 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp20 : std_ulogic_vector (31 downto 0);
  signal ni3477_suif_tmp20 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp21 : std_ulogic_vector (31 downto 0);
  signal ni3480_suif_tmp21 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp22 : std_ulogic_vector (31 downto 0);
  signal ni3483_suif_tmp22 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp23 : std_ulogic_vector (31 downto 0);
  signal ni3487_suif_tmp23 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp24 : std_ulogic_vector (31 downto 0);
  signal ni3489_suif_tmp24 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp25 : std_ulogic_vector (31 downto 0);
  signal ni3492_suif_tmp25 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp26 : std_ulogic_vector (31 downto 0);
  signal ni3494_suif_tmp26 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp27 : std_ulogic_vector (31 downto 0);
  signal ni3504_suif_tmp27 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp28 : std_ulogic_vector (31 downto 0);
  signal ni3505_suif_tmp28 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp29 : std_ulogic_vector (31 downto 0);
  signal ni3509_suif_tmp29 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp30 : std_ulogic_vector (31 downto 0);
  signal ni3511_suif_tmp30 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp31 : std_ulogic_vector (31 downto 0);
  signal ni3515_suif_tmp31 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp32 : std_ulogic_vector (31 downto 0);
  signal ni3517_suif_tmp32 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp33 : std_ulogic_vector (31 downto 0);
  signal ni3521_suif_tmp33 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp34 : std_ulogic_vector (31 downto 0);
  signal ni3525_suif_tmp34 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp35 : std_ulogic_vector (31 downto 0);
  signal ni3532_suif_tmp35 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp36 : std_ulogic_vector (31 downto 0);
  signal ni3535_suif_tmp36 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp37 : std_ulogic_vector (31 downto 0);
  signal ni3597_suif_tmp37 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp38 : std_ulogic_vector (31 downto 0);
  signal ni3602_suif_tmp38 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp39 : std_ulogic_vector (31 downto 0);
  signal ni3604_suif_tmp39 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp40 : std_ulogic_vector (31 downto 0);
  signal ni3611_suif_tmp40 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp41 : std_ulogic_vector (31 downto 0);
  signal ni3666_suif_tmp41 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp42 : std_ulogic_vector (31 downto 0);
  signal ni3671_suif_tmp42 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp43 : std_ulogic_vector (31 downto 0);
  signal ni3726_suif_tmp43 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp44 : std_ulogic_vector (31 downto 0);
  signal ni3731_suif_tmp44 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp45 : std_ulogic_vector (31 downto 0);
  signal ni3752_suif_tmp45 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp46 : std_ulogic_vector (31 downto 0);
  signal ni3750_suif_tmp46 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp_0 : std_ulogic_vector (31 downto 0);
  signal ni3366_suif_tmp_0 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp_1 : std_ulogic_vector (31 downto 0);
  signal ni3613_suif_tmp_1 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp0_0 : std_ulogic_vector (31 downto 0);
  signal ni3614_suif_tmp0_0 : std_ulogic_vector (31 downto 0);
  signal ni3615_suif_tmp0_0 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp2_0 : std_ulogic_vector (31 downto 0);
  signal ni3673_suif_tmp2_0 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp3_0 : std_ulogic_vector (31 downto 0);
  signal ni3674_suif_tmp3_0 : std_ulogic_vector (31 downto 0);
  signal ni3675_suif_tmp3_0 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp_2 : std_ulogic_vector (31 downto 0);
  signal ni3742_suif_tmp_2 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp0_1 : std_ulogic_vector (31 downto 0);
  signal ni3743_suif_tmp0_1 : std_ulogic_vector (31 downto 0);
  signal ni3744_suif_tmp0_1 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp1_0 : std_ulogic_vector (31 downto 0);
  signal ni3740_suif_tmp1_0 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp2_1 : std_ulogic_vector (31 downto 0);
  signal ni3741_suif_tmp2_1 : std_ulogic_vector (31 downto 0);
  signal ni3745_suif_tmp2_1 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp3_1 : std_ulogic_vector (31 downto 0);
  signal ni3738_suif_tmp3_1 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp4_0 : std_ulogic_vector (31 downto 0);
  signal ni3739_suif_tmp4_0 : std_ulogic_vector (31 downto 0);
  signal ni3746_suif_tmp4_0 : std_ulogic_vector (31 downto 0);
  signal r_switched : std_ulogic_vector (0 downto 0);
  signal ni6267131_switched : std_ulogic_vector (0 downto 0);
  signal r_count_bak_op0 : std_ulogic_vector (7 downto 0);
  signal ni6267144_count_bak_op0 : std_ulogic_vector (7 downto 0);
  signal ni3531_count_bak_op0 : std_ulogic_vector (7 downto 0);
  signal r_count_bak_s0 : std_ulogic_vector (7 downto 0);
  signal ni6267147_count_bak_s0 : std_ulogic_vector (7 downto 0);
  signal ni3608_count_bak_s0 : std_ulogic_vector (7 downto 0);
  signal r_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3345_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3346_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3383_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3391_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3395_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3403_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3407_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3415_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3419_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3427_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3431_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3437_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3462_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3530_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3545_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3553_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3557_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3565_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3569_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3577_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3581_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3589_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3593_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3599_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3607_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3624_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3630_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3634_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3640_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3644_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3650_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3654_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3660_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3664_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3668_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3684_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3690_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3694_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3700_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3704_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3710_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3714_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3720_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3724_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3728_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3747_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni3748_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni3385_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni3393_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni3405_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni3417_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni3429_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni3439_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni3467_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni3547_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni3555_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni3567_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni3579_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni3591_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni3601_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni6266963_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni3632_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni3642_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni3652_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni3662_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni3670_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni6267045_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni3692_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni3702_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni3712_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni3722_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni3730_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni3394_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni3406_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni3418_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni3430_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni3469_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni3556_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni3568_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni3580_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni3592_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni6266966_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni3633_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni3643_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni3653_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni3663_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni6267048_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni3693_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni3703_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni3713_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni3723_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_3 : std_ulogic_vector (1 downto 0);
  signal ni1244_r_e_g_3 : std_ulogic_vector (1 downto 0);
  signal ni1275_r_e_g_3 : std_ulogic_vector (1 downto 0);
  signal ni1414_r_e_g_3 : std_ulogic_vector (1 downto 0);
  signal ni1445_r_e_g_3 : std_ulogic_vector (1 downto 0);
  signal r_r_e_g_4 : std_ulogic_vector (7 downto 0);
  signal ni1591_r_e_g_4 : std_ulogic_vector (7 downto 0);
  signal ni2248_r_e_g_4 : std_ulogic_vector (7 downto 0);
  signal r_r_e_g_5 : std_ulogic_vector (9 downto 0);
  signal ni6266967_r_e_g_5 : std_ulogic_vector (9 downto 0);
  signal ni6267049_r_e_g_5 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_6 : std_ulogic_vector (9 downto 0);
  signal ni6266970_r_e_g_6 : std_ulogic_vector (9 downto 0);
  signal ni6267052_r_e_g_6 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_7 : std_ulogic_vector (9 downto 0);
  signal ni6266971_r_e_g_7 : std_ulogic_vector (9 downto 0);
  signal ni6267053_r_e_g_7 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_8 : std_ulogic_vector (9 downto 0);
  signal ni6266974_r_e_g_8 : std_ulogic_vector (9 downto 0);
  signal ni6267056_r_e_g_8 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_9 : std_ulogic_vector (9 downto 0);
  signal ni6266975_r_e_g_9 : std_ulogic_vector (9 downto 0);
  signal ni6267057_r_e_g_9 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_10 : std_ulogic_vector (9 downto 0);
  signal ni6266978_r_e_g_10 : std_ulogic_vector (9 downto 0);
  signal ni6267060_r_e_g_10 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_11 : std_ulogic_vector (9 downto 0);
  signal ni6266979_r_e_g_11 : std_ulogic_vector (9 downto 0);
  signal ni6267061_r_e_g_11 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_12 : std_ulogic_vector (9 downto 0);
  signal ni6266982_r_e_g_12 : std_ulogic_vector (9 downto 0);
  signal ni6267064_r_e_g_12 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_13 : std_ulogic_vector (9 downto 0);
  signal ni6266983_r_e_g_13 : std_ulogic_vector (9 downto 0);
  signal ni6267065_r_e_g_13 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_14 : std_ulogic_vector (9 downto 0);
  signal ni6266986_r_e_g_14 : std_ulogic_vector (9 downto 0);
  signal ni6267068_r_e_g_14 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_15 : std_ulogic_vector (9 downto 0);
  signal ni6266987_r_e_g_15 : std_ulogic_vector (9 downto 0);
  signal ni6267069_r_e_g_15 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_16 : std_ulogic_vector (9 downto 0);
  signal ni6266990_r_e_g_16 : std_ulogic_vector (9 downto 0);
  signal ni6267072_r_e_g_16 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_17 : std_ulogic_vector (9 downto 0);
  signal ni6266991_r_e_g_17 : std_ulogic_vector (9 downto 0);
  signal ni6267073_r_e_g_17 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_18 : std_ulogic_vector (9 downto 0);
  signal ni6266994_r_e_g_18 : std_ulogic_vector (9 downto 0);
  signal ni6267076_r_e_g_18 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_19 : std_ulogic_vector (9 downto 0);
  signal ni6266995_r_e_g_19 : std_ulogic_vector (9 downto 0);
  signal ni6267077_r_e_g_19 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_20 : std_ulogic_vector (9 downto 0);
  signal ni6266998_r_e_g_20 : std_ulogic_vector (9 downto 0);
  signal ni6267080_r_e_g_20 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_21 : std_ulogic_vector (9 downto 0);
  signal ni6266999_r_e_g_21 : std_ulogic_vector (9 downto 0);
  signal ni6267081_r_e_g_21 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_22 : std_ulogic_vector (9 downto 0);
  signal ni6267002_r_e_g_22 : std_ulogic_vector (9 downto 0);
  signal ni6267084_r_e_g_22 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_23 : std_ulogic_vector (9 downto 0);
  signal ni6267003_r_e_g_23 : std_ulogic_vector (9 downto 0);
  signal ni6267085_r_e_g_23 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_24 : std_ulogic_vector (9 downto 0);
  signal ni6267006_r_e_g_24 : std_ulogic_vector (9 downto 0);
  signal ni6267088_r_e_g_24 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_25 : std_ulogic_vector (9 downto 0);
  signal ni6267007_r_e_g_25 : std_ulogic_vector (9 downto 0);
  signal ni6267089_r_e_g_25 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_26 : std_ulogic_vector (9 downto 0);
  signal ni6267010_r_e_g_26 : std_ulogic_vector (9 downto 0);
  signal ni6267092_r_e_g_26 : std_ulogic_vector (9 downto 0);
  signal ti2696_piece_sizes : std_ulogic_vector (4 downto 0);
  signal ti2304_piece_sizes : std_ulogic_vector (4 downto 0);
  signal ti2248_board_bak_s : std_ulogic_vector (5 downto 0);
  signal ti2236_y_bak_s : std_ulogic_vector (5 downto 0);
  signal ti2230_x_bak_s : std_ulogic_vector (5 downto 0);
  signal t_53 : std_ulogic_vector (5 downto 0);
  signal t_52 : std_ulogic_vector (5 downto 0);
  signal t_51 : std_ulogic_vector (5 downto 0);
  signal t_50 : std_ulogic_vector (5 downto 0);
  signal t_49 : std_ulogic_vector (5 downto 0);
  signal t_48 : std_ulogic_vector (5 downto 0);
  signal t_47 : std_ulogic_vector (5 downto 0);
  signal t_46 : std_ulogic_vector (5 downto 0);
  signal t_45 : std_ulogic_vector (5 downto 0);
  signal t_44 : std_ulogic_vector (5 downto 0);
  signal t_43 : std_ulogic_vector (5 downto 0);
  signal t_42 : std_ulogic_vector (5 downto 0);
  signal t_41 : std_ulogic_vector (5 downto 0);
  signal t_40 : std_ulogic_vector (5 downto 0);
  signal t_39 : std_ulogic_vector (5 downto 0);
  signal t_38 : std_ulogic_vector (5 downto 0);
  signal t_37 : std_ulogic_vector (5 downto 0);
  signal t_36 : std_ulogic_vector (5 downto 0);
  signal t_35 : std_ulogic_vector (5 downto 0);
  signal t_34 : std_ulogic_vector (5 downto 0);
  signal t_33 : std_ulogic_vector (5 downto 0);
  signal t_32 : std_ulogic_vector (5 downto 0);
  signal t_31 : std_ulogic_vector (5 downto 0);
  signal t_30 : std_ulogic_vector (5 downto 0);
  signal t_29 : std_ulogic_vector (5 downto 0);
  signal t_28 : std_ulogic_vector (5 downto 0);
  signal t_27 : std_ulogic_vector (5 downto 0);
  signal ti1630_piece_sizes : std_ulogic_vector (4 downto 0);
  signal ti1591_board_bak_op : std_ulogic_vector (5 downto 0);
  signal ti1579_y_bak_op : std_ulogic_vector (5 downto 0);
  signal ti1573_x_bak_op : std_ulogic_vector (5 downto 0);
  signal ti1001_piece_sizes : std_ulogic_vector (4 downto 0);
  signal t_26 : std_ulogic_vector (5 downto 0);
  signal t_25 : std_ulogic_vector (5 downto 0);
  signal t_24 : std_ulogic_vector (5 downto 0);
  signal t_23 : std_ulogic_vector (5 downto 0);
  signal t_22 : std_ulogic_vector (5 downto 0);
  signal t_21 : std_ulogic_vector (5 downto 0);
  signal t_20 : std_ulogic_vector (5 downto 0);
  signal t_19 : std_ulogic_vector (5 downto 0);
  signal t_18 : std_ulogic_vector (5 downto 0);
  signal t_17 : std_ulogic_vector (5 downto 0);
  signal t_16 : std_ulogic_vector (5 downto 0);
  signal t_15 : std_ulogic_vector (5 downto 0);
  signal t_14 : std_ulogic_vector (5 downto 0);
  signal t_13 : std_ulogic_vector (5 downto 0);
  signal t_12 : std_ulogic_vector (5 downto 0);
  signal t_11 : std_ulogic_vector (5 downto 0);
  signal t_10 : std_ulogic_vector (5 downto 0);
  signal t_9 : std_ulogic_vector (5 downto 0);
  signal t_8 : std_ulogic_vector (5 downto 0);
  signal t_7 : std_ulogic_vector (5 downto 0);
  signal t_6 : std_ulogic_vector (5 downto 0);
  signal t_5 : std_ulogic_vector (5 downto 0);
  signal t_4 : std_ulogic_vector (5 downto 0);
  signal t_3 : std_ulogic_vector (5 downto 0);
  signal t_2 : std_ulogic_vector (5 downto 0);
  signal t_1 : std_ulogic_vector (5 downto 0);
  signal t_0 : std_ulogic_vector (5 downto 0);
  signal ti322_piece_sizes : std_ulogic_vector (4 downto 0);
  signal s_b57_state : pipeStateType;
  signal s_b57_0 : t_b57_0;
  signal s_b57_1 : t_b57_1;
  signal s_b57_stall : std_ulogic;
  signal s_b57_break : std_ulogic;
  signal s_b57_final : std_ulogic;
  signal s_b57_flushing : std_ulogic;
  signal s_b57_flushed : std_ulogic;
  signal s_b57_done : std_ulogic;
  signal s_b57_vstall : std_ulogic_vector (2 downto 0);
  signal s_b57_vbreak : std_ulogic_vector (2 downto 0);
  signal s_b57_vlast : std_ulogic_vector (2 downto 0);
  signal s_b57_vflush : std_ulogic_vector (2 downto 0);
  signal s_b57_stage : std_ulogic_vector (2 downto 0);
  signal s_b57_vwrite : std_ulogic_vector (2 downto 0);
  signal s_b57_vcont : std_ulogic_vector (2 downto 0);
  signal s_b62_state : pipeStateType;
  signal s_b62_0 : t_b62_0;
  signal s_b62_1 : t_b62_1;
  signal s_b62_stall : std_ulogic;
  signal s_b62_break : std_ulogic;
  signal s_b62_final : std_ulogic;
  signal s_b62_flushing : std_ulogic;
  signal s_b62_flushed : std_ulogic;
  signal s_b62_done : std_ulogic;
  signal s_b62_vstall : std_ulogic_vector (2 downto 0);
  signal s_b62_vbreak : std_ulogic_vector (2 downto 0);
  signal s_b62_vlast : std_ulogic_vector (2 downto 0);
  signal s_b62_vflush : std_ulogic_vector (2 downto 0);
  signal s_b62_stage : std_ulogic_vector (2 downto 0);
  signal s_b62_vwrite : std_ulogic_vector (2 downto 0);
  signal s_b62_vcont : std_ulogic_vector (2 downto 0);
  signal s_b16s0_en : std_ulogic;
  signal s_b17s0_en : std_ulogic;
  signal s_b17s1_en : std_ulogic;
  signal s_b18s0_en : std_ulogic;
  signal s_b30s0_en : std_ulogic;
  signal s_b30s1_en : std_ulogic;
  signal s_b30s2_en : std_ulogic;
  signal s_b32s0_en : std_ulogic;
  signal s_b32s1_en : std_ulogic;
  signal s_b32s2_en : std_ulogic;
  signal s_b36s0_en : std_ulogic;
  signal s_b36s1_en : std_ulogic;
  signal s_b36s2_en : std_ulogic;
  signal s_b38s0_en : std_ulogic;
  signal s_b38s1_en : std_ulogic;
  signal s_b38s2_en : std_ulogic;
  signal s_b53s0_en : std_ulogic;
  signal s_b53s1_en : std_ulogic;
  signal s_b55s0_en : std_ulogic;
  signal s_b56s0_en : std_ulogic;
  signal s_b57s0_en : std_ulogic;
  signal s_b59s0_en : std_ulogic;
  signal s_b61s0_en : std_ulogic;
  signal s_b62s0_en : std_ulogic;
  signal s_b64s0_en : std_ulogic;
  signal s_b71s0_en : std_ulogic;
  signal s_b78s0_en : std_ulogic;
begin
  process (clk,reset)
  begin
    if (reset='1') then
      thisState <= init;
    elsif (clk'event and clk='1') then
      if (stateEn = '1') then
        thisState <= nextState;
      end if;
    end if;
  end process;

  s_b16s0_en <= p_stream0_move_input_rdy;
  s_b17s0_en <= p_stream0_move_input_rdy;
  s_b17s1_en <= p_stream0_move_input_rdy;
  s_b18s0_en <= p_stream_eval1_output_rdy and p_stream_eval2_output_rdy;
  s_b30s0_en <= p_stream_eval1_output_rdy;
  s_b30s1_en <= p_stream_eval1_output_rdy;
  s_b30s2_en <= p_stream_eval1_output_rdy;
  s_b32s0_en <= p_stream_eval2_output_rdy;
  s_b32s1_en <= p_stream_eval2_output_rdy;
  s_b32s2_en <= p_stream_eval2_output_rdy;
  s_b36s0_en <= p_stream_eval1_output_rdy;
  s_b36s1_en <= p_stream_eval1_output_rdy;
  s_b36s2_en <= p_stream_eval1_output_rdy;
  s_b38s0_en <= p_stream_eval2_output_rdy;
  s_b38s1_en <= p_stream_eval2_output_rdy;
  s_b38s2_en <= p_stream_eval2_output_rdy;
  s_b53s0_en <= p_stream_eval1_output_rdy;
  s_b53s1_en <= p_stream_eval1_input_rdy;
  s_b55s0_en <= p_stream0_move_output_rdy;
  s_b56s0_en <= p_stream_eval1_output_rdy and p_stream_eval2_output_rdy;
  s_b57s0_en <= s_b57_done;
  s_b59s0_en <= p_stream_eval1_output_rdy and p_stream_eval2_output_rdy;
  s_b61s0_en <= p_stream_eval1_output_rdy and p_stream_eval2_output_rdy;
  s_b62s0_en <= s_b62_done;
  s_b64s0_en <= p_stream_eval1_output_rdy and p_stream_eval2_output_rdy;
  s_b71s0_en <= p_stream_eval1_output_rdy and p_stream_eval2_output_rdy;
  s_b78s0_en <= p_stream_eval1_output_rdy and p_stream_eval2_output_rdy;
  stateEn <= 
    '0' when thisState = b16s0 and s_b16s0_en = '0' else
    '0' when thisState = b17s0 and s_b17s0_en = '0' else
    '0' when thisState = b17s1 and s_b17s1_en = '0' else
    '0' when thisState = b18s0 and s_b18s0_en = '0' else
    '0' when thisState = b30s0 and s_b30s0_en = '0' else
    '0' when thisState = b30s1 and s_b30s1_en = '0' else
    '0' when thisState = b30s2 and s_b30s2_en = '0' else
    '0' when thisState = b32s0 and s_b32s0_en = '0' else
    '0' when thisState = b32s1 and s_b32s1_en = '0' else
    '0' when thisState = b32s2 and s_b32s2_en = '0' else
    '0' when thisState = b36s0 and s_b36s0_en = '0' else
    '0' when thisState = b36s1 and s_b36s1_en = '0' else
    '0' when thisState = b36s2 and s_b36s2_en = '0' else
    '0' when thisState = b38s0 and s_b38s0_en = '0' else
    '0' when thisState = b38s1 and s_b38s1_en = '0' else
    '0' when thisState = b38s2 and s_b38s2_en = '0' else
    '0' when thisState = b53s0 and s_b53s0_en = '0' else
    '0' when thisState = b53s1 and s_b53s1_en = '0' else
    '0' when thisState = b55s0 and s_b55s0_en = '0' else
    '0' when thisState = b56s0 and s_b56s0_en = '0' else
    '0' when thisState = b57s0 and s_b57s0_en = '0' else
    '0' when thisState = b59s0 and s_b59s0_en = '0' else
    '0' when thisState = b61s0 and s_b61s0_en = '0' else
    '0' when thisState = b62s0 and s_b62s0_en = '0' else
    '0' when thisState = b64s0 and s_b64s0_en = '0' else
    '0' when thisState = b71s0 and s_b71s0_en = '0' else
    '0' when thisState = b78s0 and s_b78s0_en = '0' else
    '1';

  process (ni3752_suif_tmp45,ni3750_suif_tmp46,ni3746_suif_tmp4_0,ni3742_suif_tmp_2,ni3740_suif_tmp1_0,ni3739_suif_tmp4_0,ni3738_suif_tmp3_1,r_suif_tmp43,ni3675_suif_tmp3_0,ni3674_suif_tmp3_0,ni3673_suif_tmp2_0,r_suif_tmp41,ni3615_suif_tmp0_0,ni3614_suif_tmp0_0,ni3613_suif_tmp_1,r_suif_tmp37,ni3525_suif_tmp34,ni3521_suif_tmp33,ni3517_suif_tmp32,ni3515_suif_tmp31,ni3511_suif_tmp30,ni3509_suif_tmp29,ni3505_suif_tmp28,ni3504_suif_tmp27,ni3503_suif_tmp9,ni3501_suif_tmp12,ni3499_suif_tmp14,ni3497_suif_tmp16,ni3494_suif_tmp26,ni3492_suif_tmp25,ni3489_suif_tmp24,ni3487_suif_tmp23,r_suif_tmp22,ni3480_suif_tmp21,ni3477_suif_tmp20,ni3476_suif_tmp19,ni3471_suif_tmp18,ni3470_suif_tmp17,ni3456_suif_tmp15,ni3454_suif_tmp13,ni3452_suif_tmp11,ni3441_suif_tmp8,r_suif_tmp7,r_suif_tmp6,ni6267131_switched,ni3731_suif_tmp44,ni3671_suif_tmp42,ni3611_suif_tmp40,ni3602_suif_tmp38,ni3535_suif_tmp36,ni3367_suif_tmp5,ni3350_suif_tmp,ni3348_suif_tmp0,ni3344_suif_tmp4,ni3340_suif_tmp1,ni3338_suif_tmp10,ni3337_suif_tmp4,ni3336_suif_tmp3,thisState)
  begin
    case thisState is
    when init =>
      nextState <= b0s0;
    when b0s0 =>
      nextState <= b1s0;
    when b1s0 =>
      nextState <= b2s0;
    when b2s0 =>
      if (ni3336_suif_tmp3(0) = '1') then
        nextState <= b3s0;
      elsif ((not ni3336_suif_tmp3(0)) = '1') then
        nextState <= b4s0;
      else
        nextState <= b2s0;
      end if;
    when b3s0 =>
      if (ni3337_suif_tmp4(0) = '1') then
        nextState <= b11s0;
      elsif ((not ni3337_suif_tmp4(0)) = '1') then
        nextState <= b12s0;
      else
        nextState <= b3s0;
      end if;
    when b4s0 =>
      if (ni3338_suif_tmp10(0) = '1') then
        nextState <= b5s0;
      elsif ((not ni3338_suif_tmp10(0)) = '1') then
        nextState <= b6s0;
      else
        nextState <= b4s0;
      end if;
    when b5s0 =>
      nextState <= b10s0;
    when b6s0 =>
      if (ni3340_suif_tmp1(0) = '1') then
        nextState <= b7s0;
      elsif ((not ni3340_suif_tmp1(0)) = '1') then
        nextState <= b8s0;
      else
        nextState <= b6s0;
      end if;
    when b7s0 =>
      nextState <= b9s0;
    when b8s0 =>
      nextState <= b9s0;
    when b9s0 =>
      nextState <= b10s0;
    when b10s0 =>
      if (ni3344_suif_tmp4(0) = '1') then
        nextState <= b11s0;
      elsif ((not ni3344_suif_tmp4(0)) = '1') then
        nextState <= b12s0;
      else
        nextState <= b10s0;
      end if;
    when b11s0 =>
      nextState <= b11s1;
    when b11s1 =>
      nextState <= b13s0;
    when b12s0 =>
      nextState <= b12s1;
    when b12s1 =>
      nextState <= b13s0;
    when b13s0 =>
      if (ni3348_suif_tmp0(0) = '1') then
        nextState <= b2s0;
      elsif ((not ni3348_suif_tmp0(0)) = '1') then
        nextState <= b14s0;
      else
        nextState <= b13s0;
      end if;
    when b14s0 =>
      if (ni3350_suif_tmp(0) = '1') then
        nextState <= b1s0;
      elsif ((not ni3350_suif_tmp(0)) = '1') then
        nextState <= b15s0;
      else
        nextState <= b14s0;
      end if;
    when b15s0 =>
      nextState <= b16s0;
    when b16s0 =>
      nextState <= b16s1;
    when b16s1 =>
      if (ni3367_suif_tmp5(0) = '1') then
        nextState <= b17s0;
      elsif (ni3535_suif_tmp36(0) = '1') then
        nextState <= b59s0;
      elsif (ni3602_suif_tmp38(0) = '1') then
        nextState <= b61s0;
      elsif (ni3611_suif_tmp40(0) = '1') then
        nextState <= b64s0;
      elsif (ni3671_suif_tmp42(0) = '1') then
        nextState <= b71s0;
      elsif (ni3731_suif_tmp44(0) = '1') then
        nextState <= b78s0;
      elsif ((not ni6267131_switched(0)) = '1') then
        nextState <= b94s0;
      else
        nextState <= b16s1;
      end if;
    when b17s0 =>
      nextState <= b17s1;
    when b17s1 =>
      nextState <= b17s2;
    when b17s2 =>
      if (r_suif_tmp6(0) = '1') then
        nextState <= b18s0;
      elsif ((not r_suif_tmp6(0)) = '1') then
        nextState <= b20s0;
      else
        nextState <= b17s2;
      end if;
    when b18s0 =>
      nextState <= b18s1;
    when b18s1 =>
      nextState <= b19s0;
    when b19s0 =>
      nextState <= b19s1;
    when b19s1 =>
      nextState <= b19s2;
    when b19s2 =>
      nextState <= b19s3;
    when b19s3 =>
      nextState <= b19s4;
    when b19s4 =>
      nextState <= b19s5;
    when b19s5 =>
      nextState <= b19s6;
    when b19s6 =>
      nextState <= b19s7;
    when b19s7 =>
      nextState <= b19s8;
    when b19s8 =>
      nextState <= b19s9;
    when b19s9 =>
      nextState <= b19s10;
    when b19s10 =>
      nextState <= b19s11;
    when b19s11 =>
      nextState <= b19s12;
    when b19s12 =>
      nextState <= b19s13;
    when b19s13 =>
      if (r_suif_tmp7(0) = '1') then
        nextState <= b20s0;
      else
        nextState <= b19s14;
      end if;
    when b19s14 =>
      nextState <= b19s15;
    when b19s15 =>
      nextState <= b19s0;
    when b20s0 =>
      if (ni3441_suif_tmp8(0) = '1') then
        nextState <= b21s0;
      elsif ((not ni3441_suif_tmp8(0)) = '1') then
        nextState <= b52s0;
      else
        nextState <= b20s0;
      end if;
    when b21s0 =>
      nextState <= b22s0;
    when b22s0 =>
      if (ni3452_suif_tmp11(0) = '1') then
        nextState <= b23s0;
      elsif ((not ni3452_suif_tmp11(0)) = '1') then
        nextState <= b45s0;
      else
        nextState <= b22s0;
      end if;
    when b23s0 =>
      if (ni3454_suif_tmp13(0) = '1') then
        nextState <= b24s0;
      elsif ((not ni3454_suif_tmp13(0)) = '1') then
        nextState <= b44s0;
      else
        nextState <= b23s0;
      end if;
    when b24s0 =>
      if (ni3456_suif_tmp15(0) = '1') then
        nextState <= b25s0;
      elsif ((not ni3456_suif_tmp15(0)) = '1') then
        nextState <= b43s0;
      else
        nextState <= b24s0;
      end if;
    when b25s0 =>
      nextState <= b25s1;
    when b25s1 =>
      nextState <= b26s0;
    when b26s0 =>
      nextState <= b26s1;
    when b26s1 =>
      if (ni3470_suif_tmp17(0) = '1') then
        nextState <= b26s0;
      elsif ((not ni3470_suif_tmp17(0)) = '1') then
        nextState <= b27s0;
      else
        nextState <= b26s1;
      end if;
    when b27s0 =>
      if (ni3471_suif_tmp18(0) = '1') then
        nextState <= b28s0;
      elsif ((not ni3471_suif_tmp18(0)) = '1') then
        nextState <= b42s0;
      else
        nextState <= b27s0;
      end if;
    when b28s0 =>
      if (ni3476_suif_tmp19(0) = '1') then
        nextState <= b29s0;
      elsif ((not ni3476_suif_tmp19(0)) = '1') then
        nextState <= b34s0;
      else
        nextState <= b28s0;
      end if;
    when b29s0 =>
      if (ni3477_suif_tmp20(0) = '1') then
        nextState <= b30s0;
      elsif ((not ni3477_suif_tmp20(0)) = '1') then
        nextState <= b31s0;
      else
        nextState <= b29s0;
      end if;
    when b30s0 =>
      nextState <= b30s1;
    when b30s1 =>
      nextState <= b30s2;
    when b30s2 =>
      nextState <= b42s0;
    when b31s0 =>
      if (ni3480_suif_tmp21(0) = '1') then
        nextState <= b32s0;
      elsif ((not ni3480_suif_tmp21(0)) = '1') then
        nextState <= b42s0;
      else
        nextState <= b31s0;
      end if;
    when b32s0 =>
      nextState <= b32s1;
    when b32s1 =>
      nextState <= b32s2;
    when b32s2 =>
      if (r_suif_tmp22(0) = '1') then
        nextState <= b33s0;
      elsif ((not r_suif_tmp22(0)) = '1') then
        nextState <= b42s0;
      else
        nextState <= b32s2;
      end if;
    when b33s0 =>
      nextState <= b42s0;
    when b34s0 =>
      nextState <= b35s0;
    when b35s0 =>
      nextState <= b35s1;
    when b35s1 =>
      if (ni3487_suif_tmp23(0) = '1') then
        nextState <= b36s0;
      elsif ((not ni3487_suif_tmp23(0)) = '1') then
        nextState <= b37s0;
      else
        nextState <= b35s1;
      end if;
    when b36s0 =>
      nextState <= b36s1;
    when b36s1 =>
      nextState <= b36s2;
    when b36s2 =>
      nextState <= b39s0;
    when b37s0 =>
      nextState <= b37s1;
    when b37s1 =>
      if (ni3489_suif_tmp24(0) = '1') then
        nextState <= b38s0;
      elsif ((not ni3489_suif_tmp24(0)) = '1') then
        nextState <= b35s0;
      else
        nextState <= b37s1;
      end if;
    when b38s0 =>
      nextState <= b38s1;
    when b38s1 =>
      nextState <= b38s2;
    when b38s2 =>
      nextState <= b39s0;
    when b39s0 =>
      if (ni3492_suif_tmp25(0) = '1') then
        nextState <= b40s0;
      elsif ((not ni3492_suif_tmp25(0)) = '1') then
        nextState <= b42s0;
      else
        nextState <= b39s0;
      end if;
    when b40s0 =>
      if (ni3494_suif_tmp26(0) = '1') then
        nextState <= b41s0;
      elsif ((not ni3494_suif_tmp26(0)) = '1') then
        nextState <= b42s0;
      else
        nextState <= b40s0;
      end if;
    when b41s0 =>
      nextState <= b42s0;
    when b42s0 =>
      if (ni3497_suif_tmp16(0) = '1') then
        nextState <= b25s0;
      elsif ((not ni3497_suif_tmp16(0)) = '1') then
        nextState <= b43s0;
      else
        nextState <= b42s0;
      end if;
    when b43s0 =>
      if (ni3499_suif_tmp14(0) = '1') then
        nextState <= b24s0;
      elsif ((not ni3499_suif_tmp14(0)) = '1') then
        nextState <= b44s0;
      else
        nextState <= b43s0;
      end if;
    when b44s0 =>
      if (ni3501_suif_tmp12(0) = '1') then
        nextState <= b23s0;
      elsif ((not ni3501_suif_tmp12(0)) = '1') then
        nextState <= b45s0;
      else
        nextState <= b44s0;
      end if;
    when b45s0 =>
      if (ni3503_suif_tmp9(0) = '1') then
        nextState <= b22s0;
      elsif ((not ni3503_suif_tmp9(0)) = '1') then
        nextState <= b46s0;
      else
        nextState <= b45s0;
      end if;
    when b46s0 =>
      if ((not ni3504_suif_tmp27(0)) = '1') then
        nextState <= b52s0;
      else
        nextState <= b46s1;
      end if;
    when b46s1 =>
      nextState <= b46s2;
    when b46s2 =>
      if (ni3505_suif_tmp28(0) = '1') then
        nextState <= b47s0;
      elsif ((not ni3505_suif_tmp28(0)) = '1') then
        nextState <= b49s0;
      else
        nextState <= b46s2;
      end if;
    when b47s0 =>
      if (ni3509_suif_tmp29(0) = '1') then
        nextState <= b48s0;
      elsif ((not ni3509_suif_tmp29(0)) = '1') then
        nextState <= b49s0;
      else
        nextState <= b47s0;
      end if;
    when b48s0 =>
      nextState <= b49s0;
    when b49s0 =>
      nextState <= b49s1;
    when b49s1 =>
      if (ni3511_suif_tmp30(0) = '1') then
        nextState <= b50s0;
      elsif ((not ni3511_suif_tmp30(0)) = '1') then
        nextState <= b46s0;
      else
        nextState <= b49s1;
      end if;
    when b50s0 =>
      if (ni3515_suif_tmp31(0) = '1') then
        nextState <= b51s0;
      elsif ((not ni3515_suif_tmp31(0)) = '1') then
        nextState <= b46s0;
      else
        nextState <= b50s0;
      end if;
    when b51s0 =>
      nextState <= b46s0;
    when b52s0 =>
      if (ni3517_suif_tmp32(0) = '1') then
        nextState <= b53s0;
      elsif ((not ni3517_suif_tmp32(0)) = '1') then
        nextState <= b55s0;
      else
        nextState <= b52s0;
      end if;
    when b53s0 =>
      nextState <= b53s1;
    when b53s1 =>
      nextState <= b53s2;
    when b53s2 =>
      if (ni3521_suif_tmp33(0) = '1') then
        nextState <= b54s0;
      elsif ((not ni3521_suif_tmp33(0)) = '1') then
        nextState <= b55s0;
      else
        nextState <= b53s2;
      end if;
    when b54s0 =>
      nextState <= b55s0;
    when b55s0 =>
      if (ni3525_suif_tmp34(0) = '1') then
        nextState <= b56s0;
      elsif ((not ni3525_suif_tmp34(0)) = '1') then
        nextState <= b16s0;
      else
        nextState <= b55s0;
      end if;
    when b56s0 =>
      nextState <= b57s0;
    when b57s0 =>
      nextState <= b58s0;
    when b58s0 =>
      nextState <= b16s0;
    when b59s0 =>
      nextState <= b59s1;
    when b59s1 =>
      nextState <= b60s0;
    when b60s0 =>
      nextState <= b60s1;
    when b60s1 =>
      nextState <= b60s2;
    when b60s2 =>
      nextState <= b60s3;
    when b60s3 =>
      nextState <= b60s4;
    when b60s4 =>
      nextState <= b60s5;
    when b60s5 =>
      nextState <= b60s6;
    when b60s6 =>
      nextState <= b60s7;
    when b60s7 =>
      nextState <= b60s8;
    when b60s8 =>
      nextState <= b60s9;
    when b60s9 =>
      nextState <= b60s10;
    when b60s10 =>
      nextState <= b60s11;
    when b60s11 =>
      nextState <= b60s12;
    when b60s12 =>
      nextState <= b60s13;
    when b60s13 =>
      if (r_suif_tmp37(0) = '1') then
        nextState <= b16s0;
      else
        nextState <= b60s14;
      end if;
    when b60s14 =>
      nextState <= b60s15;
    when b60s15 =>
      nextState <= b60s0;
    when b61s0 =>
      nextState <= b62s0;
    when b62s0 =>
      nextState <= b63s0;
    when b63s0 =>
      nextState <= b16s0;
    when b64s0 =>
      if ((not ni3613_suif_tmp_1(0)) = '1') then
        nextState <= b65s0;
      elsif (ni3613_suif_tmp_1(0) = '1') then
        nextState <= b66s0;
      else
        nextState <= b64s0;
      end if;
    when b65s0 =>
      if (ni3614_suif_tmp0_0(0) = '1') then
        nextState <= b67s0;
      elsif ((not ni3614_suif_tmp0_0(0)) = '1') then
        nextState <= b68s0;
      else
        nextState <= b65s0;
      end if;
    when b66s0 =>
      if (ni3615_suif_tmp0_0(0) = '1') then
        nextState <= b67s0;
      elsif ((not ni3615_suif_tmp0_0(0)) = '1') then
        nextState <= b68s0;
      else
        nextState <= b66s0;
      end if;
    when b67s0 =>
      nextState <= b69s0;
    when b68s0 =>
      nextState <= b69s0;
    when b69s0 =>
      nextState <= b69s1;
    when b69s1 =>
      nextState <= b70s0;
    when b70s0 =>
      nextState <= b70s1;
    when b70s1 =>
      nextState <= b70s2;
    when b70s2 =>
      nextState <= b70s3;
    when b70s3 =>
      nextState <= b70s4;
    when b70s4 =>
      nextState <= b70s5;
    when b70s5 =>
      nextState <= b70s6;
    when b70s6 =>
      nextState <= b70s7;
    when b70s7 =>
      nextState <= b70s8;
    when b70s8 =>
      nextState <= b70s9;
    when b70s9 =>
      nextState <= b70s10;
    when b70s10 =>
      nextState <= b70s11;
    when b70s11 =>
      nextState <= b70s12;
    when b70s12 =>
      nextState <= b70s13;
    when b70s13 =>
      if (r_suif_tmp41(0) = '1') then
        nextState <= b16s0;
      else
        nextState <= b70s14;
      end if;
    when b70s14 =>
      nextState <= b70s15;
    when b70s15 =>
      nextState <= b70s0;
    when b71s0 =>
      if ((not ni3673_suif_tmp2_0(0)) = '1') then
        nextState <= b72s0;
      elsif (ni3673_suif_tmp2_0(0) = '1') then
        nextState <= b73s0;
      else
        nextState <= b71s0;
      end if;
    when b72s0 =>
      if (ni3674_suif_tmp3_0(0) = '1') then
        nextState <= b74s0;
      elsif ((not ni3674_suif_tmp3_0(0)) = '1') then
        nextState <= b75s0;
      else
        nextState <= b72s0;
      end if;
    when b73s0 =>
      if (ni3675_suif_tmp3_0(0) = '1') then
        nextState <= b74s0;
      elsif ((not ni3675_suif_tmp3_0(0)) = '1') then
        nextState <= b75s0;
      else
        nextState <= b73s0;
      end if;
    when b74s0 =>
      nextState <= b76s0;
    when b75s0 =>
      nextState <= b76s0;
    when b76s0 =>
      nextState <= b76s1;
    when b76s1 =>
      nextState <= b77s0;
    when b77s0 =>
      nextState <= b77s1;
    when b77s1 =>
      nextState <= b77s2;
    when b77s2 =>
      nextState <= b77s3;
    when b77s3 =>
      nextState <= b77s4;
    when b77s4 =>
      nextState <= b77s5;
    when b77s5 =>
      nextState <= b77s6;
    when b77s6 =>
      nextState <= b77s7;
    when b77s7 =>
      nextState <= b77s8;
    when b77s8 =>
      nextState <= b77s9;
    when b77s9 =>
      nextState <= b77s10;
    when b77s10 =>
      nextState <= b77s11;
    when b77s11 =>
      nextState <= b77s12;
    when b77s12 =>
      nextState <= b77s13;
    when b77s13 =>
      if (r_suif_tmp43(0) = '1') then
        nextState <= b16s0;
      else
        nextState <= b77s14;
      end if;
    when b77s14 =>
      nextState <= b77s15;
    when b77s15 =>
      nextState <= b77s0;
    when b78s0 =>
      nextState <= b79s0;
    when b79s0 =>
      nextState <= b80s0;
    when b80s0 =>
      if (ni3738_suif_tmp3_1(0) = '1') then
        nextState <= b81s0;
      elsif ((not ni3738_suif_tmp3_1(0)) = '1') then
        nextState <= b82s0;
      else
        nextState <= b80s0;
      end if;
    when b81s0 =>
      if (ni3739_suif_tmp4_0(0) = '1') then
        nextState <= b89s0;
      elsif ((not ni3739_suif_tmp4_0(0)) = '1') then
        nextState <= b90s0;
      else
        nextState <= b81s0;
      end if;
    when b82s0 =>
      if (ni3740_suif_tmp1_0(0) = '1') then
        nextState <= b83s0;
      elsif ((not ni3740_suif_tmp1_0(0)) = '1') then
        nextState <= b84s0;
      else
        nextState <= b82s0;
      end if;
    when b83s0 =>
      nextState <= b88s0;
    when b84s0 =>
      if (ni3742_suif_tmp_2(0) = '1') then
        nextState <= b85s0;
      elsif ((not ni3742_suif_tmp_2(0)) = '1') then
        nextState <= b86s0;
      else
        nextState <= b84s0;
      end if;
    when b85s0 =>
      nextState <= b87s0;
    when b86s0 =>
      nextState <= b87s0;
    when b87s0 =>
      nextState <= b88s0;
    when b88s0 =>
      if (ni3746_suif_tmp4_0(0) = '1') then
        nextState <= b89s0;
      elsif ((not ni3746_suif_tmp4_0(0)) = '1') then
        nextState <= b90s0;
      else
        nextState <= b88s0;
      end if;
    when b89s0 =>
      nextState <= b89s1;
    when b89s1 =>
      nextState <= b91s0;
    when b90s0 =>
      nextState <= b90s1;
    when b90s1 =>
      nextState <= b91s0;
    when b91s0 =>
      if (ni3750_suif_tmp46(0) = '1') then
        nextState <= b80s0;
      elsif ((not ni3750_suif_tmp46(0)) = '1') then
        nextState <= b92s0;
      else
        nextState <= b91s0;
      end if;
    when b92s0 =>
      if (ni3752_suif_tmp45(0) = '1') then
        nextState <= b79s0;
      elsif ((not ni3752_suif_tmp45(0)) = '1') then
        nextState <= b93s0;
      else
        nextState <= b92s0;
      end if;
    when b93s0 =>
      nextState <= b16s0;
    when b94s0 =>
      nextState <= b16s0;
    when b95s0 =>
      nextState <= finished;
    when finished =>
      nextState <= finished;
    when others =>
      nextState <= init;
    end case;
  end process;

  process (clk,reset)
  begin
    if (reset='1') then
      newState <= '1';
    elsif (clk'event and clk='1') then
      case thisState is
      when b57s0 =>
       newState <= not s_b57_stall;
      when b62s0 =>
       newState <= not s_b62_stall;
      when  others =>
       newState <= stateEn;
      end case;
    end if;
  end process;

-- b0s0
  ni3330_y <= X"00";

-- b1s0
  ni3333_x <= X"00";

-- b2s0
  ni3336_suif_tmp3 <= "0000000000000000000000000000000" & cmp_less_s(r_x, X"04");

-- b3s0
  ni3337_suif_tmp4 <= r_suif_tmp3;

-- b4s0
  ni3338_suif_tmp10 <= "0000000000000000000000000000000" & cmp_less_s(r_y, X"04");

-- b5s0
  ni3339_suif_tmp2 <= r_suif_tmp10;

-- b6s0
  ni3340_suif_tmp1 <= "0000000000000000000000000000000" & cmp_less_s(X"11", r_x);

-- b7s0
  ni3341_suif_tmp00 <= r_suif_tmp1;

-- b8s0
  ni3342_suif_tmp00 <= "0000000000000000000000000000000" & cmp_less_s(X"11", r_y);

-- b9s0
  ni3343_suif_tmp2 <= r_suif_tmp00;

-- b10s0
  ni3344_suif_tmp4 <= r_suif_tmp2;

-- b11s0
  ni3345_r_e_g_0 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));

-- b11s1
  ni145_board <= X"0f";

-- b12s0
  ni3346_r_e_g_0 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));

-- b12s1
  ni161_board <= X"00";

-- b13s0
  ni3347_x <= add(r_x, X"01");
  ni3348_suif_tmp0 <= "0000000000000000000000000000000" & cmp_less_s(ni3347_x, X"20");

-- b14s0
  ni3349_y <= add(r_y, X"01");
  ni3350_suif_tmp <= "0000000000000000000000000000000" & cmp_less_s(ni3349_y, X"20");

-- b15s0
  ni3351_avail_self <= X"7fffff";
  ni3352_avail_opp <= X"7fffff";
  ni3353_score_self <= X"00";
  ni3354_score_opp <= X"00";
  ni3355_num_avail_self <= X"15";
  ni3356_num_avail_opp <= X"15";
  ni3357_search_extra <= "00";

-- b16s0

-- b16s1
  ni3360_move <= r_stream0_move_input;
  ni3361_move_type <= ashr(ni3360_move, 24)(7 downto 0) and X"ff";
  ni3362_m_x <= add(ashr(ni3360_move(7 downto 0), 0) and X"0f", X"03");
  ni3363_m_y <= add(ashr(ni3360_move(11 downto 0), 4)(7 downto 0) and X"0f", X"03");
  ni3364_m_piece <= ashr(ni3360_move(15 downto 0), 8)(7 downto 0) and X"1f";
  ni3365_m_rotate <= ashr(ni3360_move(20 downto 0), 13)(7 downto 0) and X"07";
  ni3366_suif_tmp_0 <= sign_ext(ni3361_move_type, 32);
  ni3367_suif_tmp5 <= "0000000000000000000000000000000" & eq(ni3366_suif_tmp_0(7 downto 0), X"04");
  ni3535_suif_tmp36 <= "0000000000000000000000000000000" & eq(ni3366_suif_tmp_0(7 downto 0), X"03");
  ni3602_suif_tmp38 <= "0000000000000000000000000000000" & eq(ni3366_suif_tmp_0(7 downto 0), X"07");
  ni3611_suif_tmp40 <= "0000000000000000000000000000000" & eq(ni3366_suif_tmp_0(7 downto 0), X"01");
  ni3671_suif_tmp42 <= "0000000000000000000000000000000" & eq(ni3366_suif_tmp_0(7 downto 0), X"02");
  ni3731_suif_tmp44 <= "0000000000000000000000000000000" & eq(ni3366_suif_tmp_0(7 downto 0), X"0a");
  ni6267131_switched <= ni3731_suif_tmp44(0 downto 0) or ni3671_suif_tmp42(0 downto 0) or ni3611_suif_tmp40(0 downto 0) or ni3602_suif_tmp38(0 downto 0) or ni3535_suif_tmp36(0 downto 0) or ni3367_suif_tmp5(0 downto 0);

-- b17s0
  ni3368_mx_backup <= r_m_x;
  ni3373_suif_tmp6 <= "0000000000000000000000000000000" & cmp_less_s(X"03", ni3368_mx_backup);

-- b17s1
  ni3369_m1 <= r_stream0_move_input;
  ni3370_alpha <= ashr(ni3369_m1, 16)(15 downto 0) and X"ffff";

-- b17s2
  ni3371_m2 <= r_stream0_move_input;
  ni3372_beta <= ashr(ni3371_m2, 16)(15 downto 0) and X"ffff";

-- b18s0
  ni3374_avail_opp_bak <= r_avail_opp;
  ni3375_score_opp_bak <= r_score_opp;
  ni3377_avail_opp <= r_avail_opp and not shl(X"000001", sign_ext(r_m_piece, 24));
  ni3380_yoff <= r_m_y;
  ni3381_xoff <= r_m_x;
  ni3382_count_bak_op <= X"00";

-- b18s1
  ti322_piece_sizes <= r_m_piece(4 downto 0);
  ni322_piece_sizes <= p_piece_sizes_imm2;
  ni3376_size <= ni322_piece_sizes;
  ni3378_score_opp <= add(r_score_opp, ni3376_size);
  ni3379_size <= sub(ni3376_size, X"01");

-- b19s0
  ni358_x_bak_op <= r_xoff;
  t_0 <= r_count_bak_op(5 downto 0);
  ni364_y_bak_op <= r_yoff;
  t_1 <= r_count_bak_op(5 downto 0);
  ni3386_y <= add(r_yoff, X"01");
  ni3387_x <= r_xoff;
  ni3388_y1 <= add(r_yoff, X"01");
  ni3389_x1 <= add(r_xoff, X"01");
  ni3434_size <= sub(r_size, X"01");
  ni3435_suif_tmp7 <= "0000000000000000000000000000000" & cmp_less_s(ni3434_size, X"00");
  ni3383_r_e_g_0 <= add(shl(sign_ext(r_yoff, 10), 5), sign_ext(r_xoff, 10));
  ni3385_r_e_g_1 <= add(shl(sign_ext(r_yoff, 10), 5), sign_ext(r_xoff, 10));

-- b19s1
  ni375_board <= p_board_imm2;
  ni370_board_bak_op <= ni375_board;
  t_2 <= r_count_bak_op(5 downto 0);
  ni3384_count_bak_op <= add(r_count_bak_op, X"01");
  ni387_board <= X"0e";

-- b19s2
  ni467_x_bak_op <= r_x;
  t_3 <= r_count_bak_op(5 downto 0);
  ni473_y_bak_op <= r_y;
  t_4 <= r_count_bak_op(5 downto 0);
  ni3398_y <= sub(r_yoff, X"01");
  ni3399_x <= r_xoff;
  ni3391_r_e_g_0 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));
  ni3393_r_e_g_1 <= add(shl(sign_ext(r_y1, 10), 5), sign_ext(r_x1, 10));
  ni3394_r_e_g_2 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));

-- b19s3
  ni420_board <= p_board_imm2;
  ni3390_board_t <= ni420_board;
  ni428_board <= p_board_imm;
  ni3392_board_t1 <= ni428_board;
  ni435_board <= ni3390_board_t or X"08";
  ni479_board_bak_op <= ni3390_board_t;
  t_5 <= r_count_bak_op(5 downto 0);
  ni3396_count_bak_op <= add(r_count_bak_op, X"01");
  ni3395_r_e_g_0 <= add(shl(sign_ext(r_y1, 10), 5), sign_ext(r_x1, 10));

-- b19s4
  ni451_board <= r_board_t1 or X"20";
  ni490_x_bak_op <= r_x1;
  t_6 <= r_count_bak_op(5 downto 0);
  ni496_y_bak_op <= r_y1;
  t_7 <= r_count_bak_op(5 downto 0);
  ni502_board_bak_op <= r_board_t1;
  t_8 <= r_count_bak_op(5 downto 0);
  ni3397_count_bak_op <= add(r_count_bak_op, X"01");
  ni3400_y1 <= sub(r_yoff, X"01");
  ni3401_x1 <= sub(r_xoff, X"01");

-- b19s5
  ni578_x_bak_op <= r_x;
  t_9 <= r_count_bak_op(5 downto 0);
  ni584_y_bak_op <= r_y;
  t_10 <= r_count_bak_op(5 downto 0);
  ni3410_y <= r_yoff;
  ni3411_x <= add(r_xoff, X"01");
  ni3403_r_e_g_0 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));
  ni3405_r_e_g_1 <= add(shl(sign_ext(r_y1, 10), 5), sign_ext(r_x1, 10));
  ni3406_r_e_g_2 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));

-- b19s6
  ni531_board <= p_board_imm2;
  ni3402_board_t <= ni531_board;
  ni539_board <= p_board_imm;
  ni3404_board_t1 <= ni539_board;
  ni546_board <= ni3402_board_t or X"08";
  ni590_board_bak_op <= ni3402_board_t;
  t_11 <= r_count_bak_op(5 downto 0);
  ni3408_count_bak_op <= add(r_count_bak_op, X"01");
  ni3407_r_e_g_0 <= add(shl(sign_ext(r_y1, 10), 5), sign_ext(r_x1, 10));

-- b19s7
  ni562_board <= r_board_t1 or X"20";
  ni601_x_bak_op <= r_x1;
  t_12 <= r_count_bak_op(5 downto 0);
  ni607_y_bak_op <= r_y1;
  t_13 <= r_count_bak_op(5 downto 0);
  ni613_board_bak_op <= r_board_t1;
  t_14 <= r_count_bak_op(5 downto 0);
  ni3409_count_bak_op <= add(r_count_bak_op, X"01");
  ni3412_y1 <= sub(r_yoff, X"01");
  ni3413_x1 <= add(r_xoff, X"01");

-- b19s8
  ni689_x_bak_op <= r_x;
  t_15 <= r_count_bak_op(5 downto 0);
  ni695_y_bak_op <= r_y;
  t_16 <= r_count_bak_op(5 downto 0);
  ni3422_y <= r_yoff;
  ni3423_x <= sub(r_xoff, X"01");
  ni3415_r_e_g_0 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));
  ni3417_r_e_g_1 <= add(shl(sign_ext(r_y1, 10), 5), sign_ext(r_x1, 10));
  ni3418_r_e_g_2 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));

-- b19s9
  ni642_board <= p_board_imm2;
  ni3414_board_t <= ni642_board;
  ni650_board <= p_board_imm;
  ni3416_board_t1 <= ni650_board;
  ni657_board <= ni3414_board_t or X"08";
  ni701_board_bak_op <= ni3414_board_t;
  t_17 <= r_count_bak_op(5 downto 0);
  ni3420_count_bak_op <= add(r_count_bak_op, X"01");
  ni3419_r_e_g_0 <= add(shl(sign_ext(r_y1, 10), 5), sign_ext(r_x1, 10));

-- b19s10
  ni673_board <= r_board_t1 or X"20";
  ni712_x_bak_op <= r_x1;
  t_18 <= r_count_bak_op(5 downto 0);
  ni718_y_bak_op <= r_y1;
  t_19 <= r_count_bak_op(5 downto 0);
  ni724_board_bak_op <= r_board_t1;
  t_20 <= r_count_bak_op(5 downto 0);
  ni3421_count_bak_op <= add(r_count_bak_op, X"01");
  ni3424_y1 <= add(r_yoff, X"01");
  ni3425_x1 <= sub(r_xoff, X"01");

-- b19s11
  ni800_x_bak_op <= r_x;
  t_21 <= r_count_bak_op(5 downto 0);
  ni806_y_bak_op <= r_y;
  t_22 <= r_count_bak_op(5 downto 0);
  ni3427_r_e_g_0 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));
  ni3429_r_e_g_1 <= add(shl(sign_ext(r_y1, 10), 5), sign_ext(r_x1, 10));
  ni3430_r_e_g_2 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));

-- b19s12
  ni753_board <= p_board_imm2;
  ni3426_board_t <= ni753_board;
  ni761_board <= p_board_imm;
  ni3428_board_t1 <= ni761_board;
  ni768_board <= ni3426_board_t or X"08";
  ni812_board_bak_op <= ni3426_board_t;
  t_23 <= r_count_bak_op(5 downto 0);
  ni3432_count_bak_op <= add(r_count_bak_op, X"01");
  ni3431_r_e_g_0 <= add(shl(sign_ext(r_y1, 10), 5), sign_ext(r_x1, 10));

-- b19s13
  ni784_board <= r_board_t1 or X"20";
  ni823_x_bak_op <= r_x1;
  t_24 <= r_count_bak_op(5 downto 0);
  ni829_y_bak_op <= r_y1;
  t_25 <= r_count_bak_op(5 downto 0);
  ni835_board_bak_op <= r_board_t1;
  t_26 <= r_count_bak_op(5 downto 0);
  ni3433_count_bak_op <= add(r_count_bak_op, X"01");

-- b19s14
  ni3437_r_e_g_0 <= add(shl(add(shl(sign_ext(r_m_piece, 10), 3), sign_ext(r_m_rotate, 10)), 2), sign_ext(r_size, 10));
  ni3439_r_e_g_1 <= add(shl(add(shl(sign_ext(r_m_piece, 10), 3), sign_ext(r_m_rotate, 10)), 2), sign_ext(r_size, 10));

-- b19s15
  ni864_piece_y <= p_piece_y_imm2;
  ni3436_yoff <= add(r_m_y, ni864_piece_y);
  ni878_piece_x <= p_piece_x_imm2;
  ni3438_xoff <= add(r_m_x, ni878_piece_x);

-- b20s0
  ni3440_moves_found <= "00";
  ni3441_suif_tmp8 <= "0000000000000000000000000000000" & eq(r_search_extra, "01");

-- b21s0
  ni3442_not_prune <= "01";
  ni3443_m_piece_min <= X"00";
  ni3444_state <= "00";
  ni3445_count <= X"00";
  ni3446_next_stream <= X"01";
  ni3447_m_piece <= X"14";

-- b22s0
  ni3450_avail <= "0" & neq(sign_ext(r_avail_self, 32) and shl(X"00000001", sign_ext(r_m_piece, 32)), X"00000000");
  ni3451_m_rotate <= X"00";
  ni3452_suif_tmp11 <= "0000000000000000000000000000000" & neq((X"00000001" and sign_ext(ni3450_avail, 32)) and sign_ext(r_not_prune, 32), X"00000000");

-- b23s0
  ni3453_m_y <= X"04";
  ni3454_suif_tmp13 <= "0000000000000000000000000000000" & neq(X"00000001" and sign_ext(r_not_prune, 32), X"00000000");

-- b24s0
  ni3455_m_x <= X"04";
  ni3456_suif_tmp15 <= "0000000000000000000000000000000" & neq(X"00000001" and sign_ext(r_not_prune, 32), X"00000000");

-- b25s0
  ni3457_lib_check <= "00";
  ni3459_yoff <= r_m_y;
  ni3460_xoff <= r_m_x;

-- b25s1
  ti1001_piece_sizes <= r_m_piece(4 downto 0);
  ni1001_piece_sizes <= p_piece_sizes_imm2;
  ni3458_size <= sub(ni1001_piece_sizes, X"01");

-- b26s0
  ni3465_size <= sub(r_size, X"01");
  ni3462_r_e_g_0 <= add(shl(sign_ext(r_yoff, 10), 5), sign_ext(r_xoff, 10));
  ni3467_r_e_g_1 <= add(shl(add(shl(sign_ext(r_m_piece, 10), 3), sign_ext(r_m_rotate, 10)), 2), sign_ext(ni3465_size, 10));
  ni3469_r_e_g_2 <= add(shl(add(shl(sign_ext(r_m_piece, 10), 3), sign_ext(r_m_rotate, 10)), 2), sign_ext(ni3465_size, 10));

-- b26s1
  ni1014_board <= p_board_imm2;
  ni3461_board_t <= ni1014_board;
  ni3463_move_valid <= "0" & eq(sign_ext(ni3461_board_t, 32) and X"00000004", X"00000000");
  ni3464_lib_check <= r_lib_check or "0" & neq(sign_ext(ni3461_board_t, 32) and X"00000010", X"00000000");
  ni1057_piece_y <= p_piece_y_imm2;
  ni3466_yoff <= add(r_m_y, ni1057_piece_y);
  ni1071_piece_x <= p_piece_x_imm2;
  ni3468_xoff <= add(r_m_x, ni1071_piece_x);
  ni3470_suif_tmp17 <= "0000000000000000000000000000000" & neq("0000000000000000000000000000000" & eq(ni3463_move_valid, "01") and "0000000000000000000000000000000" & cmp_less_equal_s(X"00", r_size), X"00000000");

-- b27s0
  ni3471_suif_tmp18 <= "0000000000000000000000000000000" & neq(r_move_valid and r_lib_check, "00");

-- b28s0
  ni3472_moves_found <= "01";
  ni3473_m <= (((shl(sign_ext(r_m_piece, 32), 8) or shl(sign_ext(r_m_rotate, 32), 13)) or shl(sub(sign_ext(r_m_x, 32), X"00000003"), 0)) or shl(sub(sign_ext(r_m_y, 32), X"00000003"), 4)) or X"05000000";
  ni3474_m1 <= X"06000000";
  ni3475_m2 <= X"09000000";
  ni3476_suif_tmp19 <= "0000000000000000000000000000000" & eq(r_state, "00");

-- b29s0
  ni3477_suif_tmp20 <= "0000000000000000000000000000000" & eq(r_next_stream(2 downto 0), "001");

-- b30s0
  ni3478_count <= add(r_count, X"01");
  ni3479_next_stream <= X"02";

-- b30s1

-- b30s2

-- b31s0
  ni3480_suif_tmp21 <= "0000000000000000000000000000000" & eq(r_next_stream(2 downto 0), "010");

-- b32s0
  ni3481_count <= add(r_count, X"01");
  ni3482_next_stream <= X"01";
  ni3483_suif_tmp22 <= "0000000000000000000000000000000" & eq(ni3481_count, X"06");

-- b32s1

-- b32s2

-- b33s0
  ni3484_state <= "01";

-- b34s0

-- b35s0
  ni1244_r_e_g_3 <= "0" & mkvec(p_stream_eval1_input_rdy) and not ("0" & mkvec(p_stream_eval1_input_eos));

-- b35s1
  ni3488_m_recv <= r_stream_eval1_input;
  ni3487_suif_tmp23 <= "0000000000000000000000000000000" & neq(r_r_e_g_3, "00");

-- b36s0

-- b36s1

-- b36s2

-- b37s0
  ni1275_r_e_g_3 <= "0" & mkvec(p_stream_eval2_input_rdy) and not ("0" & mkvec(p_stream_eval2_input_eos));

-- b37s1
  ni3490_m_recv <= r_stream_eval2_input;
  ni3489_suif_tmp24 <= "0000000000000000000000000000000" & neq(r_r_e_g_3, "00");

-- b38s0

-- b38s1

-- b38s2

-- b39s0
  ni3491_utility <= ashr(r_m_recv, 16)(15 downto 0) and X"ffff";
  ni3492_suif_tmp25 <= "0000000000000000000000000000000" & cmp_less_s(r_alpha, ni3491_utility);

-- b40s0
  ni3493_alpha <= r_utility;
  ni3494_suif_tmp26 <= "0000000000000000000000000000000" & cmp_less_equal_s(r_beta, ni3493_alpha);

-- b41s0
  ni3495_not_prune <= "00";

-- b42s0
  ni3496_m_x <= add(r_m_x, X"01");
  ni3497_suif_tmp16 <= "0000000000000000000000000000000" & neq("0000000000000000000000000000000" & cmp_less_s(ni3496_m_x, X"12") and sign_ext(r_not_prune, 32), X"00000000");

-- b43s0
  ni3498_m_y <= add(r_m_y, X"01");
  ni3499_suif_tmp14 <= "0000000000000000000000000000000" & neq("0000000000000000000000000000000" & cmp_less_s(ni3498_m_y, X"12") and sign_ext(r_not_prune, 32), X"00000000");

-- b44s0
  ni3500_m_rotate <= add(r_m_rotate, X"01");
  ni3501_suif_tmp12 <= "0000000000000000000000000000000" & neq(("0000000000000000000000000000000" & cmp_less_s(ni3500_m_rotate, X"08") and sign_ext(r_avail, 32)) and sign_ext(r_not_prune, 32), X"00000000");

-- b45s0
  ni3502_m_piece <= sub(r_m_piece, X"01");
  ni3503_suif_tmp9 <= "0000000000000000000000000000000" & neq("0000000000000000000000000000000" & cmp_less_equal_s(X"00", ni3502_m_piece) and sign_ext(r_not_prune, 32), X"00000000");

-- b46s0
  ni3504_suif_tmp27 <= "0000000000000000000000000000000" & cmp_less_s(X"00", r_count);

-- b46s1
  ni1414_r_e_g_3 <= "0" & mkvec(p_stream_eval1_input_rdy) and not ("0" & mkvec(p_stream_eval1_input_eos));

-- b46s2
  ni3506_m_recv <= r_stream_eval1_input;
  ni3505_suif_tmp28 <= "0000000000000000000000000000000" & neq(r_r_e_g_3, "00");

-- b47s0
  ni3507_count <= sub(r_count, X"01");
  ni3508_utility <= ashr(r_m_recv, 16)(15 downto 0) and X"ffff";
  ni3509_suif_tmp29 <= "0000000000000000000000000000000" & cmp_less_s(r_alpha, ni3508_utility);

-- b48s0
  ni3510_alpha <= r_utility;

-- b49s0
  ni1445_r_e_g_3 <= "0" & mkvec(p_stream_eval2_input_rdy) and not ("0" & mkvec(p_stream_eval2_input_eos));

-- b49s1
  ni3512_m_recv <= r_stream_eval2_input;
  ni3511_suif_tmp30 <= "0000000000000000000000000000000" & neq(r_r_e_g_3, "00");

-- b50s0
  ni3513_count <= sub(r_count, X"01");
  ni3514_utility <= ashr(r_m_recv, 16)(15 downto 0) and X"ffff";
  ni3515_suif_tmp31 <= "0000000000000000000000000000000" & cmp_less_s(r_alpha, ni3514_utility);

-- b51s0
  ni3516_alpha <= r_utility;

-- b52s0
  ni3517_suif_tmp32 <= "0000000000000000000000000000000" & eq(r_moves_found, "00");

-- b53s0
  ni3518_m <= X"06000000";

-- b53s1

-- b53s2
  ni3519_m_recv <= r_stream_eval1_input;
  ni3520_utility <= ashr(ni3519_m_recv, 16)(15 downto 0) and X"ffff";
  ni3521_suif_tmp33 <= "0000000000000000000000000000000" & cmp_less_s(r_alpha, ni3520_utility);

-- b54s0
  ni3522_alpha <= r_utility;

-- b55s0
  ni3523_move <= r_move and X"0000ffff";
  ni3524_move <= ni3523_move or shl(sign_ext(r_alpha, 32), 16);
  ni3525_suif_tmp34 <= "0000000000000000000000000000000" & cmp_less_s(X"03", r_mx_backup);

-- b56s0
  ni3526_m <= X"08000000";
  ni3527_count_bak_op <= sub(r_count_bak_op, X"01");
  ni6267144_count_bak_op0 <= ni3527_count_bak_op;

  process (clk,reset)
  begin
    if (reset='1') then
      s_b57_state <= idle;
    elsif (clk'event and clk='1') then
      case s_b57_state is
      when idle =>
        if (stateEn = '1' and nextState = b57s0) then
          s_b57_state <= init;
        else
          s_b57_state <= idle;
        end if;
      when init =>
        s_b57_state <= run;
      when run =>
        if (s_b57_final = '1' and s_b57_stall = '0') then
          s_b57_state <= flush;
        elsif (s_b57_break = '1') then
          s_b57_state <= flush;
        else
          s_b57_state <= run;
        end if;
      when flush =>
        if (s_b57_flushed = '1') then
          s_b57_state <= idle;
        else
          s_b57_state <= flush;
        end if;
      when others => null;
      end case;
    end if;
  end process;

-- b57 stage 0
  s_b57_vstall(0) <= '0';
  ni6267145_count_bak_op <= r_count_bak_op0;
  ni3531_count_bak_op0 <= sub(r_count_bak_op0, X"01");
  ni3532_suif_tmp35 <= "0000000000000000000000000000000" & cmp_less_equal_s(X"00", ni3531_count_bak_op0);
  s_b57_vbreak(0) <= '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (s_b57_vwrite(0) = '1') then
        s_b57_0.f_count_bak_op0 <= ni3531_count_bak_op0;
        s_b57_0.f_count_bak_op <= ni6267145_count_bak_op;
      end if;
    end if;
  end process;

-- b57 stage 1
  s_b57_vstall(1) <= '0';
  ti1573_x_bak_op <= s_b57_0.f_count_bak_op(5 downto 0);
  ni1573_x_bak_op <= p_x_bak_op_imm2;
  ni3528_xoff <= ni1573_x_bak_op;
  ti1579_y_bak_op <= s_b57_0.f_count_bak_op(5 downto 0);
  ni1579_y_bak_op <= p_y_bak_op_imm2;
  ni3529_yoff <= ni1579_y_bak_op;
  ti1591_board_bak_op <= s_b57_0.f_count_bak_op(5 downto 0);
  ni1591_board_bak_op <= p_board_bak_op_imm2;
  ni6267146_count_bak_op <= s_b57_0.f_count_bak_op0;
  ni3530_r_e_g_0 <= add(shl(sign_ext(ni3529_yoff, 10), 5), sign_ext(ni3528_xoff, 10));
  s_b57_vbreak(1) <= '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (s_b57_vwrite(1) = '1') then
        s_b57_1.f_r_e_g_0 <= ni3530_r_e_g_0;
        s_b57_1.f_r_e_g_4 <= ni1591_board_bak_op;
        s_b57_1.f_count_bak_op <= ni6267146_count_bak_op;
      end if;
    end if;
  end process;

-- b57 stage 2
  s_b57_vstall(2) <= '0';
  ni1584_board <= s_b57_1.f_r_e_g_4;
  s_b57_vbreak(2) <= '0';
  process (clk,reset)
  begin
    if (reset='1') then
      s_b57_vlast <= "000";
    elsif (clk'event and clk='1') then
      if (s_b57_state = idle) then
        s_b57_vlast <= "000";
      end if;
    end if;
  end process;

  with s_b57_state select
    s_b57_break <= 
      '1' when flush,
      '0' when others;
  process (clk,reset)
  begin
    if (reset='1') then
      s_b57_stage <= "000";
    elsif (clk'event and clk='1') then
      if (s_b57_state = idle) then
       s_b57_stage <= "000";
      elsif (thisState = b57s0 and s_b57_stall = '0') then
       s_b57_stage <= s_b57_vcont(1 downto 0) & (not s_b57_break and not s_b57_flushing);
      end if;    end if;
  end process;

  process (clk,reset)
  begin
    if (reset='1') then
      s_b57_vflush <= "000";
    elsif (clk'event and clk='1') then
      if (s_b57_state = idle) then
       s_b57_vflush <= "000";
      elsif (s_b57_stall = '0') then
       s_b57_vflush <= (s_b57_vflush(1 downto 0) or s_b57_vbreak(1 downto 0)) & '0';
      end if;    end if;
  end process;

  s_b57_stall <= 
    '0' when (s_b57_vstall and s_b57_stage) = "000" else
    '1';
  s_b57_vwrite(0) <= 
    s_b57_stage(0) when s_b57_stall = '0' else
    '0';
  s_b57_vwrite(1) <= 
    s_b57_stage(1) when s_b57_stall = '0' else
    '0';
  s_b57_vwrite(2) <= 
    s_b57_stage(2) when s_b57_stall = '0' else
    '0';
  s_b57_vcont(0) <= s_b57_stage(0);
  s_b57_vcont(1) <= s_b57_stage(1);
  s_b57_vcont(2) <= '0';
  s_b57_final <= 
    '1' when (s_b57_stage(0) and not ni3532_suif_tmp35(0)) = '1' else
    '0';
  s_b57_flushing <= 
    '1' when s_b57_state = flush else
    s_b57_final;
  s_b57_flushed <= 
    '1' when s_b57_stall = '0' and (s_b57_vflush or s_b57_stage) = "000" else
    '1' when s_b57_vflush(2) = '1' else
    '0';
  with s_b57_state select
    s_b57_done <= 
      '0' when init,
      '0' when run,
      s_b57_flushed when flush,
      '0' when others;
-- b58s0
  ni3533_score_opp <= r_score_opp_bak;
  ni3534_avail_opp <= r_avail_opp_bak;

-- b59s0
  ni3536_avail_self_bak <= r_avail_self;
  ni3537_score_self_bak <= r_score_self;
  ni3539_avail_self <= r_avail_self and not shl(X"000001", sign_ext(r_m_piece, 24));
  ni3542_yoff <= r_m_y;
  ni3543_xoff <= r_m_x;
  ni3544_count_bak_s <= X"00";

-- b59s1
  ti1630_piece_sizes <= r_m_piece(4 downto 0);
  ni1630_piece_sizes <= p_piece_sizes_imm2;
  ni3538_size <= ni1630_piece_sizes;
  ni3540_score_self <= add(r_score_self, ni3538_size);
  ni3541_size <= sub(ni3538_size, X"01");

-- b60s0
  ni1666_x_bak_s <= r_xoff;
  t_27 <= r_count_bak_s(5 downto 0);
  ni1672_y_bak_s <= r_yoff;
  t_28 <= r_count_bak_s(5 downto 0);
  ni3548_y <= add(r_yoff, X"01");
  ni3549_x <= r_xoff;
  ni3550_y1 <= add(r_yoff, X"01");
  ni3551_x1 <= add(r_xoff, X"01");
  ni3596_size <= sub(r_size, X"01");
  ni3597_suif_tmp37 <= "0000000000000000000000000000000" & cmp_less_s(ni3596_size, X"00");
  ni3545_r_e_g_0 <= add(shl(sign_ext(r_yoff, 10), 5), sign_ext(r_xoff, 10));
  ni3547_r_e_g_1 <= add(shl(sign_ext(r_yoff, 10), 5), sign_ext(r_xoff, 10));

-- b60s1
  ni1683_board <= p_board_imm2;
  ni1678_board_bak_s <= ni1683_board;
  t_29 <= r_count_bak_s(5 downto 0);
  ni3546_count_bak_s <= add(r_count_bak_s, X"01");
  ni1695_board <= X"0d";

-- b60s2
  ni1775_x_bak_s <= r_x;
  t_30 <= r_count_bak_s(5 downto 0);
  ni1781_y_bak_s <= r_y;
  t_31 <= r_count_bak_s(5 downto 0);
  ni3560_y <= sub(r_yoff, X"01");
  ni3561_x <= r_xoff;
  ni3553_r_e_g_0 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));
  ni3555_r_e_g_1 <= add(shl(sign_ext(r_y1, 10), 5), sign_ext(r_x1, 10));
  ni3556_r_e_g_2 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));

-- b60s3
  ni1728_board <= p_board_imm2;
  ni3552_board_t <= ni1728_board;
  ni1736_board <= p_board_imm;
  ni3554_board_t1 <= ni1736_board;
  ni1743_board <= ni3552_board_t or X"04";
  ni1787_board_bak_s <= ni3552_board_t;
  t_32 <= r_count_bak_s(5 downto 0);
  ni3558_count_bak_s <= add(r_count_bak_s, X"01");
  ni3557_r_e_g_0 <= add(shl(sign_ext(r_y1, 10), 5), sign_ext(r_x1, 10));

-- b60s4
  ni1759_board <= r_board_t1 or X"10";
  ni1798_x_bak_s <= r_x1;
  t_33 <= r_count_bak_s(5 downto 0);
  ni1804_y_bak_s <= r_y1;
  t_34 <= r_count_bak_s(5 downto 0);
  ni1810_board_bak_s <= r_board_t1;
  t_35 <= r_count_bak_s(5 downto 0);
  ni3559_count_bak_s <= add(r_count_bak_s, X"01");
  ni3562_y1 <= sub(r_yoff, X"01");
  ni3563_x1 <= sub(r_xoff, X"01");

-- b60s5
  ni1886_x_bak_s <= r_x;
  t_36 <= r_count_bak_s(5 downto 0);
  ni1892_y_bak_s <= r_y;
  t_37 <= r_count_bak_s(5 downto 0);
  ni3572_y <= r_yoff;
  ni3573_x <= add(r_xoff, X"01");
  ni3565_r_e_g_0 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));
  ni3567_r_e_g_1 <= add(shl(sign_ext(r_y1, 10), 5), sign_ext(r_x1, 10));
  ni3568_r_e_g_2 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));

-- b60s6
  ni1839_board <= p_board_imm2;
  ni3564_board_t <= ni1839_board;
  ni1847_board <= p_board_imm;
  ni3566_board_t1 <= ni1847_board;
  ni1854_board <= ni3564_board_t or X"04";
  ni1898_board_bak_s <= ni3564_board_t;
  t_38 <= r_count_bak_s(5 downto 0);
  ni3570_count_bak_s <= add(r_count_bak_s, X"01");
  ni3569_r_e_g_0 <= add(shl(sign_ext(r_y1, 10), 5), sign_ext(r_x1, 10));

-- b60s7
  ni1870_board <= r_board_t1 or X"10";
  ni1909_x_bak_s <= r_x1;
  t_39 <= r_count_bak_s(5 downto 0);
  ni1915_y_bak_s <= r_y1;
  t_40 <= r_count_bak_s(5 downto 0);
  ni1921_board_bak_s <= r_board_t1;
  t_41 <= r_count_bak_s(5 downto 0);
  ni3571_count_bak_s <= add(r_count_bak_s, X"01");
  ni3574_y1 <= sub(r_yoff, X"01");
  ni3575_x1 <= add(r_xoff, X"01");

-- b60s8
  ni1997_x_bak_s <= r_x;
  t_42 <= r_count_bak_s(5 downto 0);
  ni2003_y_bak_s <= r_y;
  t_43 <= r_count_bak_s(5 downto 0);
  ni3584_y <= r_yoff;
  ni3585_x <= sub(r_xoff, X"01");
  ni3577_r_e_g_0 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));
  ni3579_r_e_g_1 <= add(shl(sign_ext(r_y1, 10), 5), sign_ext(r_x1, 10));
  ni3580_r_e_g_2 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));

-- b60s9
  ni1950_board <= p_board_imm2;
  ni3576_board_t <= ni1950_board;
  ni1958_board <= p_board_imm;
  ni3578_board_t1 <= ni1958_board;
  ni1965_board <= ni3576_board_t or X"04";
  ni2009_board_bak_s <= ni3576_board_t;
  t_44 <= r_count_bak_s(5 downto 0);
  ni3582_count_bak_s <= add(r_count_bak_s, X"01");
  ni3581_r_e_g_0 <= add(shl(sign_ext(r_y1, 10), 5), sign_ext(r_x1, 10));

-- b60s10
  ni1981_board <= r_board_t1 or X"10";
  ni2020_x_bak_s <= r_x1;
  t_45 <= r_count_bak_s(5 downto 0);
  ni2026_y_bak_s <= r_y1;
  t_46 <= r_count_bak_s(5 downto 0);
  ni2032_board_bak_s <= r_board_t1;
  t_47 <= r_count_bak_s(5 downto 0);
  ni3583_count_bak_s <= add(r_count_bak_s, X"01");
  ni3586_y1 <= add(r_yoff, X"01");
  ni3587_x1 <= sub(r_xoff, X"01");

-- b60s11
  ni2108_x_bak_s <= r_x;
  t_48 <= r_count_bak_s(5 downto 0);
  ni2114_y_bak_s <= r_y;
  t_49 <= r_count_bak_s(5 downto 0);
  ni3589_r_e_g_0 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));
  ni3591_r_e_g_1 <= add(shl(sign_ext(r_y1, 10), 5), sign_ext(r_x1, 10));
  ni3592_r_e_g_2 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));

-- b60s12
  ni2061_board <= p_board_imm2;
  ni3588_board_t <= ni2061_board;
  ni2069_board <= p_board_imm;
  ni3590_board_t1 <= ni2069_board;
  ni2076_board <= ni3588_board_t or X"04";
  ni2120_board_bak_s <= ni3588_board_t;
  t_50 <= r_count_bak_s(5 downto 0);
  ni3594_count_bak_s <= add(r_count_bak_s, X"01");
  ni3593_r_e_g_0 <= add(shl(sign_ext(r_y1, 10), 5), sign_ext(r_x1, 10));

-- b60s13
  ni2092_board <= r_board_t1 or X"10";
  ni2131_x_bak_s <= r_x1;
  t_51 <= r_count_bak_s(5 downto 0);
  ni2137_y_bak_s <= r_y1;
  t_52 <= r_count_bak_s(5 downto 0);
  ni2143_board_bak_s <= r_board_t1;
  t_53 <= r_count_bak_s(5 downto 0);
  ni3595_count_bak_s <= add(r_count_bak_s, X"01");

-- b60s14
  ni3599_r_e_g_0 <= add(shl(add(shl(sign_ext(r_m_piece, 10), 3), sign_ext(r_m_rotate, 10)), 2), sign_ext(r_size, 10));
  ni3601_r_e_g_1 <= add(shl(add(shl(sign_ext(r_m_piece, 10), 3), sign_ext(r_m_rotate, 10)), 2), sign_ext(r_size, 10));

-- b60s15
  ni2172_piece_y <= p_piece_y_imm2;
  ni3598_yoff <= add(r_m_y, ni2172_piece_y);
  ni2186_piece_x <= p_piece_x_imm2;
  ni3600_xoff <= add(r_m_x, ni2186_piece_x);

-- b61s0
  ni3603_count_bak_s <= sub(r_count_bak_s, X"01");
  ni6267147_count_bak_s0 <= ni3603_count_bak_s;

  process (clk,reset)
  begin
    if (reset='1') then
      s_b62_state <= idle;
    elsif (clk'event and clk='1') then
      case s_b62_state is
      when idle =>
        if (stateEn = '1' and nextState = b62s0) then
          s_b62_state <= init;
        else
          s_b62_state <= idle;
        end if;
      when init =>
        s_b62_state <= run;
      when run =>
        if (s_b62_break = '1') then
          s_b62_state <= flush;
        else
          s_b62_state <= run;
        end if;
      when flush =>
        if (s_b62_flushed = '1') then
          s_b62_state <= idle;
        else
          s_b62_state <= flush;
        end if;
      when others => null;
      end case;
    end if;
  end process;

-- b62 stage 0
  s_b62_vstall(0) <= '0';
  ni6267148_count_bak_s <= r_count_bak_s0;
  ni3608_count_bak_s0 <= sub(r_count_bak_s0, X"01");
  ni3604_suif_tmp39 <= "0000000000000000000000000000000" & cmp_less_equal_s(X"00", ni6267148_count_bak_s);
  s_b62_vbreak(0) <= 
    '1' when (not ni3604_suif_tmp39(0)) = '1' else
    '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (s_b62_vwrite(0) = '1') then
        s_b62_0.f_count_bak_s0 <= ni3608_count_bak_s0;
        s_b62_0.f_count_bak_s <= ni6267148_count_bak_s;
      end if;
    end if;
  end process;

-- b62 stage 1
  s_b62_vstall(1) <= '0';
  ti2230_x_bak_s <= s_b62_0.f_count_bak_s(5 downto 0);
  ni2230_x_bak_s <= p_x_bak_s_imm2;
  ni3605_xoff <= ni2230_x_bak_s;
  ti2236_y_bak_s <= s_b62_0.f_count_bak_s(5 downto 0);
  ni2236_y_bak_s <= p_y_bak_s_imm2;
  ni3606_yoff <= ni2236_y_bak_s;
  ti2248_board_bak_s <= s_b62_0.f_count_bak_s(5 downto 0);
  ni2248_board_bak_s <= p_board_bak_s_imm2;
  ni6267149_count_bak_s <= s_b62_0.f_count_bak_s0;
  ni3607_r_e_g_0 <= add(shl(sign_ext(ni3606_yoff, 10), 5), sign_ext(ni3605_xoff, 10));
  s_b62_vbreak(1) <= '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (s_b62_vwrite(1) = '1') then
        s_b62_1.f_r_e_g_0 <= ni3607_r_e_g_0;
        s_b62_1.f_r_e_g_4 <= ni2248_board_bak_s;
        s_b62_1.f_count_bak_s <= ni6267149_count_bak_s;
      elsif (s_b62_vflush(1) = '1' and s_b62_stall = '0') then
        s_b62_1.f_count_bak_s <= s_b62_0.f_count_bak_s;
      end if;
    end if;
  end process;

-- b62 stage 2
  s_b62_vstall(2) <= '0';
  ni2241_board <= s_b62_1.f_r_e_g_4;
  s_b62_vbreak(2) <= '0';
  process (clk,reset)
  begin
    if (reset='1') then
      s_b62_vlast <= "000";
    elsif (clk'event and clk='1') then
      if (s_b62_state = idle) then
        s_b62_vlast <= "000";
      elsif ((s_b62_vbreak(0) and s_b62_vwrite(0)) = '1') then
        s_b62_vlast <= "001";
      end if;
    end if;
  end process;

  with s_b62_state select
    s_b62_break <= 
      (s_b62_vbreak(0) and s_b62_stage(0)) and not s_b62_stall when run,
      '1' when flush,
      '0' when others;
  process (clk,reset)
  begin
    if (reset='1') then
      s_b62_stage <= "000";
    elsif (clk'event and clk='1') then
      if (s_b62_state = idle) then
       s_b62_stage <= "000";
      elsif (thisState = b62s0 and s_b62_stall = '0') then
       s_b62_stage <= s_b62_vcont(1 downto 0) & (not s_b62_break and not s_b62_flushing);
      end if;    end if;
  end process;

  process (clk,reset)
  begin
    if (reset='1') then
      s_b62_vflush <= "000";
    elsif (clk'event and clk='1') then
      if (s_b62_state = idle) then
       s_b62_vflush <= "000";
      elsif (s_b62_stall = '0') then
       s_b62_vflush <= (s_b62_vflush(1 downto 0) or s_b62_vbreak(1 downto 0)) & '0';
      end if;    end if;
  end process;

  s_b62_stall <= 
    '0' when (s_b62_vstall and s_b62_stage) = "000" else
    '1';
  s_b62_vwrite(0) <= 
    s_b62_stage(0) when s_b62_stall = '0' and s_b62_final = '0' else
    '0';
  s_b62_vwrite(1) <= 
    s_b62_stage(1) when s_b62_stall = '0' and s_b62_final = '0' else
    '0';
  s_b62_vwrite(2) <= 
    s_b62_stage(2) when s_b62_stall = '0' else
    '0';
  s_b62_vcont(0) <= (s_b62_stage(0) and not s_b62_vbreak(0)) and not s_b62_final;
  s_b62_vcont(1) <= s_b62_stage(1) and not s_b62_final;
  s_b62_vcont(2) <= '0';
  s_b62_final <= '0';
  s_b62_flushing <= 
    '1' when s_b62_state = flush else
    s_b62_final;
  s_b62_flushed <= 
    '1' when s_b62_stall = '0' and (s_b62_vflush or s_b62_stage) = "000" else
    '1' when s_b62_vflush(2) = '1' else
    '0';
  with s_b62_state select
    s_b62_done <= 
      '0' when init,
      '0' when run,
      s_b62_flushed when flush,
      '0' when others;
-- b63s0
  ni3609_score_self <= r_score_self_bak;
  ni3610_avail_self <= r_avail_self_bak;

-- b64s0
  ni3612_num_avail_self <= sub(r_num_avail_self, X"01");
  ni3613_suif_tmp_1 <= "0000000000000000000000000000000" & cmp_less_equal_s(r_num_avail_opp, X"09");

-- b65s0
  ni3614_suif_tmp0_0 <= r_suif_tmp_1;

-- b66s0
  ni3615_suif_tmp0_0 <= "0000000000000000000000000000000" & cmp_less_equal_s(r_num_avail_self, X"09");

-- b67s0
  ni3616_search_extra <= "01";

-- b68s0
  ni3617_search_extra <= "00";

-- b69s0
  ni3619_avail_self <= r_avail_self and not shl(X"000001", sign_ext(r_m_piece, 24));
  ni3622_yoff <= r_m_y;
  ni3623_xoff <= r_m_x;

-- b69s1
  ti2304_piece_sizes <= r_m_piece(4 downto 0);
  ni2304_piece_sizes <= p_piece_sizes_imm2;
  ni3618_size <= ni2304_piece_sizes;
  ni3620_score_self <= add(r_score_self, ni3618_size);
  ni3621_size <= sub(ni3618_size, X"01");

-- b70s0
  ni3625_y <= add(r_yoff, X"01");
  ni3626_x <= r_xoff;
  ni3627_y1 <= add(r_yoff, X"01");
  ni3628_x1 <= add(r_xoff, X"01");
  ni3635_y <= sub(r_yoff, X"01");
  ni3636_x <= r_xoff;
  ni3637_y1 <= sub(r_yoff, X"01");
  ni3638_x1 <= sub(r_xoff, X"01");
  ni3645_y <= r_yoff;
  ni3646_x <= add(r_xoff, X"01");
  ni3647_y1 <= sub(r_yoff, X"01");
  ni3648_x1 <= add(r_xoff, X"01");
  ni3655_y <= r_yoff;
  ni3656_x <= sub(r_xoff, X"01");
  ni3657_y1 <= add(r_yoff, X"01");
  ni3658_x1 <= sub(r_xoff, X"01");
  ni3665_size <= sub(r_size, X"01");
  ni3666_suif_tmp41 <= "0000000000000000000000000000000" & cmp_less_s(ni3665_size, X"00");
  ni3624_r_e_g_0 <= add(shl(sign_ext(r_yoff, 10), 5), sign_ext(r_xoff, 10));
  ni6266963_r_e_g_1 <= sign_ext(ni3625_y, 10);
  ni6266966_r_e_g_2 <= sign_ext(ni3626_x, 10);
  ni6266967_r_e_g_5 <= sign_ext(ni3627_y1, 10);
  ni6266970_r_e_g_6 <= sign_ext(ni3628_x1, 10);
  ni6266971_r_e_g_7 <= sign_ext(ni3625_y, 10);
  ni6266974_r_e_g_8 <= sign_ext(ni3626_x, 10);
  ni6266975_r_e_g_9 <= sign_ext(ni3627_y1, 10);
  ni6266978_r_e_g_10 <= sign_ext(ni3628_x1, 10);
  ni6266979_r_e_g_11 <= sign_ext(ni3635_y, 10);
  ni6266982_r_e_g_12 <= sign_ext(ni3636_x, 10);
  ni6266983_r_e_g_13 <= sign_ext(ni3637_y1, 10);
  ni6266986_r_e_g_14 <= sign_ext(ni3638_x1, 10);
  ni6266987_r_e_g_15 <= sign_ext(ni3635_y, 10);
  ni6266990_r_e_g_16 <= sign_ext(ni3636_x, 10);
  ni6266991_r_e_g_17 <= sign_ext(ni3637_y1, 10);
  ni6266994_r_e_g_18 <= sign_ext(ni3638_x1, 10);
  ni6266995_r_e_g_19 <= sign_ext(ni3645_y, 10);
  ni6266998_r_e_g_20 <= sign_ext(ni3646_x, 10);
  ni6266999_r_e_g_21 <= sign_ext(ni3647_y1, 10);
  ni6267002_r_e_g_22 <= sign_ext(ni3648_x1, 10);
  ni6267003_r_e_g_23 <= sign_ext(ni3645_y, 10);
  ni6267006_r_e_g_24 <= sign_ext(ni3646_x, 10);
  ni6267007_r_e_g_25 <= sign_ext(ni3647_y1, 10);
  ni6267010_r_e_g_26 <= sign_ext(ni3648_x1, 10);

-- b70s1
  ni2338_board <= X"0d";

-- b70s2
  ni3630_r_e_g_0 <= add(shl(r_r_e_g_1, 5), r_r_e_g_2);
  ni3632_r_e_g_1 <= add(shl(r_r_e_g_5, 5), r_r_e_g_6);
  ni3633_r_e_g_2 <= add(shl(r_r_e_g_7, 5), r_r_e_g_8);

-- b70s3
  ni2371_board <= p_board_imm2;
  ni3629_board_t <= ni2371_board;
  ni2379_board <= p_board_imm;
  ni3631_board_t1 <= ni2379_board;
  ni2386_board <= ni3629_board_t or X"04";
  ni3634_r_e_g_0 <= add(shl(r_r_e_g_9, 5), r_r_e_g_10);

-- b70s4
  ni2402_board <= r_board_t1 or X"10";

-- b70s5
  ni3640_r_e_g_0 <= add(shl(r_r_e_g_11, 5), r_r_e_g_12);
  ni3642_r_e_g_1 <= add(shl(r_r_e_g_13, 5), r_r_e_g_14);
  ni3643_r_e_g_2 <= add(shl(r_r_e_g_15, 5), r_r_e_g_16);

-- b70s6
  ni2436_board <= p_board_imm2;
  ni3639_board_t <= ni2436_board;
  ni2444_board <= p_board_imm;
  ni3641_board_t1 <= ni2444_board;
  ni2451_board <= ni3639_board_t or X"04";
  ni3644_r_e_g_0 <= add(shl(r_r_e_g_17, 5), r_r_e_g_18);

-- b70s7
  ni2467_board <= r_board_t1 or X"10";

-- b70s8
  ni3650_r_e_g_0 <= add(shl(r_r_e_g_19, 5), r_r_e_g_20);
  ni3652_r_e_g_1 <= add(shl(r_r_e_g_21, 5), r_r_e_g_22);
  ni3653_r_e_g_2 <= add(shl(r_r_e_g_23, 5), r_r_e_g_24);

-- b70s9
  ni2501_board <= p_board_imm2;
  ni3649_board_t <= ni2501_board;
  ni2509_board <= p_board_imm;
  ni3651_board_t1 <= ni2509_board;
  ni2516_board <= ni3649_board_t or X"04";
  ni3654_r_e_g_0 <= add(shl(r_r_e_g_25, 5), r_r_e_g_26);

-- b70s10
  ni2532_board <= r_board_t1 or X"10";

-- b70s11
  ni3660_r_e_g_0 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));
  ni3662_r_e_g_1 <= add(shl(sign_ext(r_y1, 10), 5), sign_ext(r_x1, 10));
  ni3663_r_e_g_2 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));

-- b70s12
  ni2566_board <= p_board_imm2;
  ni3659_board_t <= ni2566_board;
  ni2574_board <= p_board_imm;
  ni3661_board_t1 <= ni2574_board;
  ni2581_board <= ni3659_board_t or X"04";
  ni3664_r_e_g_0 <= add(shl(sign_ext(r_y1, 10), 5), sign_ext(r_x1, 10));

-- b70s13
  ni2597_board <= r_board_t1 or X"10";

-- b70s14
  ni3668_r_e_g_0 <= add(shl(add(shl(sign_ext(r_m_piece, 10), 3), sign_ext(r_m_rotate, 10)), 2), sign_ext(r_size, 10));
  ni3670_r_e_g_1 <= add(shl(add(shl(sign_ext(r_m_piece, 10), 3), sign_ext(r_m_rotate, 10)), 2), sign_ext(r_size, 10));

-- b70s15
  ni2631_piece_y <= p_piece_y_imm2;
  ni3667_yoff <= add(r_m_y, ni2631_piece_y);
  ni2645_piece_x <= p_piece_x_imm2;
  ni3669_xoff <= add(r_m_x, ni2645_piece_x);

-- b71s0
  ni3672_num_avail_opp <= sub(r_num_avail_opp, X"01");
  ni3673_suif_tmp2_0 <= "0000000000000000000000000000000" & cmp_less_equal_s(ni3672_num_avail_opp, X"09");

-- b72s0
  ni3674_suif_tmp3_0 <= r_suif_tmp2_0;

-- b73s0
  ni3675_suif_tmp3_0 <= "0000000000000000000000000000000" & cmp_less_equal_s(r_num_avail_self, X"09");

-- b74s0
  ni3676_search_extra <= "01";

-- b75s0
  ni3677_search_extra <= "00";

-- b76s0
  ni3679_avail_opp <= r_avail_opp and not shl(X"000001", sign_ext(r_m_piece, 24));
  ni3682_yoff <= r_m_y;
  ni3683_xoff <= r_m_x;

-- b76s1
  ti2696_piece_sizes <= r_m_piece(4 downto 0);
  ni2696_piece_sizes <= p_piece_sizes_imm2;
  ni3678_size <= ni2696_piece_sizes;
  ni3680_score_opp <= add(r_score_opp, ni3678_size);
  ni3681_size <= sub(ni3678_size, X"01");

-- b77s0
  ni3685_y <= add(r_yoff, X"01");
  ni3686_x <= r_xoff;
  ni3687_y1 <= add(r_yoff, X"01");
  ni3688_x1 <= add(r_xoff, X"01");
  ni3695_y <= sub(r_yoff, X"01");
  ni3696_x <= r_xoff;
  ni3697_y1 <= sub(r_yoff, X"01");
  ni3698_x1 <= sub(r_xoff, X"01");
  ni3705_y <= r_yoff;
  ni3706_x <= add(r_xoff, X"01");
  ni3707_y1 <= sub(r_yoff, X"01");
  ni3708_x1 <= add(r_xoff, X"01");
  ni3715_y <= r_yoff;
  ni3716_x <= sub(r_xoff, X"01");
  ni3717_y1 <= add(r_yoff, X"01");
  ni3718_x1 <= sub(r_xoff, X"01");
  ni3725_size <= sub(r_size, X"01");
  ni3726_suif_tmp43 <= "0000000000000000000000000000000" & cmp_less_s(ni3725_size, X"00");
  ni3684_r_e_g_0 <= add(shl(sign_ext(r_yoff, 10), 5), sign_ext(r_xoff, 10));
  ni6267045_r_e_g_1 <= sign_ext(ni3685_y, 10);
  ni6267048_r_e_g_2 <= sign_ext(ni3686_x, 10);
  ni6267049_r_e_g_5 <= sign_ext(ni3687_y1, 10);
  ni6267052_r_e_g_6 <= sign_ext(ni3688_x1, 10);
  ni6267053_r_e_g_7 <= sign_ext(ni3685_y, 10);
  ni6267056_r_e_g_8 <= sign_ext(ni3686_x, 10);
  ni6267057_r_e_g_9 <= sign_ext(ni3687_y1, 10);
  ni6267060_r_e_g_10 <= sign_ext(ni3688_x1, 10);
  ni6267061_r_e_g_11 <= sign_ext(ni3695_y, 10);
  ni6267064_r_e_g_12 <= sign_ext(ni3696_x, 10);
  ni6267065_r_e_g_13 <= sign_ext(ni3697_y1, 10);
  ni6267068_r_e_g_14 <= sign_ext(ni3698_x1, 10);
  ni6267069_r_e_g_15 <= sign_ext(ni3695_y, 10);
  ni6267072_r_e_g_16 <= sign_ext(ni3696_x, 10);
  ni6267073_r_e_g_17 <= sign_ext(ni3697_y1, 10);
  ni6267076_r_e_g_18 <= sign_ext(ni3698_x1, 10);
  ni6267077_r_e_g_19 <= sign_ext(ni3705_y, 10);
  ni6267080_r_e_g_20 <= sign_ext(ni3706_x, 10);
  ni6267081_r_e_g_21 <= sign_ext(ni3707_y1, 10);
  ni6267084_r_e_g_22 <= sign_ext(ni3708_x1, 10);
  ni6267085_r_e_g_23 <= sign_ext(ni3705_y, 10);
  ni6267088_r_e_g_24 <= sign_ext(ni3706_x, 10);
  ni6267089_r_e_g_25 <= sign_ext(ni3707_y1, 10);
  ni6267092_r_e_g_26 <= sign_ext(ni3708_x1, 10);

-- b77s1
  ni2730_board <= X"0e";

-- b77s2
  ni3690_r_e_g_0 <= add(shl(r_r_e_g_1, 5), r_r_e_g_2);
  ni3692_r_e_g_1 <= add(shl(r_r_e_g_5, 5), r_r_e_g_6);
  ni3693_r_e_g_2 <= add(shl(r_r_e_g_7, 5), r_r_e_g_8);

-- b77s3
  ni2763_board <= p_board_imm2;
  ni3689_board_t <= ni2763_board;
  ni2771_board <= p_board_imm;
  ni3691_board_t1 <= ni2771_board;
  ni2778_board <= ni3689_board_t or X"08";
  ni3694_r_e_g_0 <= add(shl(r_r_e_g_9, 5), r_r_e_g_10);

-- b77s4
  ni2794_board <= r_board_t1 or X"20";

-- b77s5
  ni3700_r_e_g_0 <= add(shl(r_r_e_g_11, 5), r_r_e_g_12);
  ni3702_r_e_g_1 <= add(shl(r_r_e_g_13, 5), r_r_e_g_14);
  ni3703_r_e_g_2 <= add(shl(r_r_e_g_15, 5), r_r_e_g_16);

-- b77s6
  ni2828_board <= p_board_imm2;
  ni3699_board_t <= ni2828_board;
  ni2836_board <= p_board_imm;
  ni3701_board_t1 <= ni2836_board;
  ni2843_board <= ni3699_board_t or X"08";
  ni3704_r_e_g_0 <= add(shl(r_r_e_g_17, 5), r_r_e_g_18);

-- b77s7
  ni2859_board <= r_board_t1 or X"20";

-- b77s8
  ni3710_r_e_g_0 <= add(shl(r_r_e_g_19, 5), r_r_e_g_20);
  ni3712_r_e_g_1 <= add(shl(r_r_e_g_21, 5), r_r_e_g_22);
  ni3713_r_e_g_2 <= add(shl(r_r_e_g_23, 5), r_r_e_g_24);

-- b77s9
  ni2893_board <= p_board_imm2;
  ni3709_board_t <= ni2893_board;
  ni2901_board <= p_board_imm;
  ni3711_board_t1 <= ni2901_board;
  ni2908_board <= ni3709_board_t or X"08";
  ni3714_r_e_g_0 <= add(shl(r_r_e_g_25, 5), r_r_e_g_26);

-- b77s10
  ni2924_board <= r_board_t1 or X"20";

-- b77s11
  ni3720_r_e_g_0 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));
  ni3722_r_e_g_1 <= add(shl(sign_ext(r_y1, 10), 5), sign_ext(r_x1, 10));
  ni3723_r_e_g_2 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));

-- b77s12
  ni2958_board <= p_board_imm2;
  ni3719_board_t <= ni2958_board;
  ni2966_board <= p_board_imm;
  ni3721_board_t1 <= ni2966_board;
  ni2973_board <= ni3719_board_t or X"08";
  ni3724_r_e_g_0 <= add(shl(sign_ext(r_y1, 10), 5), sign_ext(r_x1, 10));

-- b77s13
  ni2989_board <= r_board_t1 or X"20";

-- b77s14
  ni3728_r_e_g_0 <= add(shl(add(shl(sign_ext(r_m_piece, 10), 3), sign_ext(r_m_rotate, 10)), 2), sign_ext(r_size, 10));
  ni3730_r_e_g_1 <= add(shl(add(shl(sign_ext(r_m_piece, 10), 3), sign_ext(r_m_rotate, 10)), 2), sign_ext(r_size, 10));

-- b77s15
  ni3023_piece_y <= p_piece_y_imm2;
  ni3727_yoff <= add(r_m_y, ni3023_piece_y);
  ni3037_piece_x <= p_piece_x_imm2;
  ni3729_xoff <= add(r_m_x, ni3037_piece_x);

-- b78s0
  ni3732_y <= X"00";

-- b79s0
  ni3735_x <= X"00";

-- b80s0
  ni3738_suif_tmp3_1 <= "0000000000000000000000000000000" & cmp_less_s(r_x, X"04");

-- b81s0
  ni3739_suif_tmp4_0 <= r_suif_tmp3_1;

-- b82s0
  ni3740_suif_tmp1_0 <= "0000000000000000000000000000000" & cmp_less_s(r_y, X"04");

-- b83s0
  ni3741_suif_tmp2_1 <= r_suif_tmp1_0;

-- b84s0
  ni3742_suif_tmp_2 <= "0000000000000000000000000000000" & cmp_less_s(X"11", r_x);

-- b85s0
  ni3743_suif_tmp0_1 <= r_suif_tmp_2;

-- b86s0
  ni3744_suif_tmp0_1 <= "0000000000000000000000000000000" & cmp_less_s(X"11", r_y);

-- b87s0
  ni3745_suif_tmp2_1 <= r_suif_tmp0_1;

-- b88s0
  ni3746_suif_tmp4_0 <= r_suif_tmp2_1;

-- b89s0
  ni3747_r_e_g_0 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));

-- b89s1
  ni3113_board <= X"0f";

-- b90s0
  ni3748_r_e_g_0 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));

-- b90s1
  ni3129_board <= X"00";

-- b91s0
  ni3749_x <= add(r_x, X"01");
  ni3750_suif_tmp46 <= "0000000000000000000000000000000" & cmp_less_s(ni3749_x, X"20");

-- b92s0
  ni3751_y <= add(r_y, X"01");
  ni3752_suif_tmp45 <= "0000000000000000000000000000000" & cmp_less_s(ni3751_y, X"20");

-- b93s0
  ni3753_avail_self <= X"7fffff";
  ni3754_avail_opp <= X"7fffff";
  ni3755_score_self <= X"00";
  ni3756_score_opp <= X"00";
  ni3757_num_avail_self <= X"15";
  ni3758_num_avail_opp <= X"15";
  ni3759_search_extra <= "00";

-- b94s0

-- b95s0

-- 


  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b0s0 =>
        r_y <= ni3330_y;
      when b14s0 =>
        r_y <= ni3349_y;
      when b19s0 =>
        r_y <= ni3386_y;
      when b19s2 =>
        r_y <= ni3398_y;
      when b19s5 =>
        r_y <= ni3410_y;
      when b19s8 =>
        r_y <= ni3422_y;
      when b60s0 =>
        r_y <= ni3548_y;
      when b60s2 =>
        r_y <= ni3560_y;
      when b60s5 =>
        r_y <= ni3572_y;
      when b60s8 =>
        r_y <= ni3584_y;
      when b70s0 =>
        r_y <= ni3655_y;
      when b77s0 =>
        r_y <= ni3715_y;
      when b78s0 =>
        if (s_b78s0_en = '1') then
          r_y <= ni3732_y;
        end if;
      when b92s0 =>
        r_y <= ni3751_y;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b1s0 =>
        r_x <= ni3333_x;
      when b13s0 =>
        r_x <= ni3347_x;
      when b19s0 =>
        r_x <= ni3387_x;
      when b19s2 =>
        r_x <= ni3399_x;
      when b19s5 =>
        r_x <= ni3411_x;
      when b19s8 =>
        r_x <= ni3423_x;
      when b60s0 =>
        r_x <= ni3549_x;
      when b60s2 =>
        r_x <= ni3561_x;
      when b60s5 =>
        r_x <= ni3573_x;
      when b60s8 =>
        r_x <= ni3585_x;
      when b70s0 =>
        r_x <= ni3656_x;
      when b77s0 =>
        r_x <= ni3716_x;
      when b79s0 =>
        r_x <= ni3735_x;
      when b91s0 =>
        r_x <= ni3749_x;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b2s0 =>
        r_suif_tmp3 <= ni3336_suif_tmp3;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b3s0 =>
        r_suif_tmp4 <= ni3337_suif_tmp4;
      when b10s0 =>
        r_suif_tmp4 <= ni3344_suif_tmp4;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b4s0 =>
        r_suif_tmp10 <= ni3338_suif_tmp10;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b5s0 =>
        r_suif_tmp2 <= ni3339_suif_tmp2;
      when b9s0 =>
        r_suif_tmp2 <= ni3343_suif_tmp2;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b6s0 =>
        r_suif_tmp1 <= ni3340_suif_tmp1;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b7s0 =>
        r_suif_tmp00 <= ni3341_suif_tmp00;
      when b8s0 =>
        r_suif_tmp00 <= ni3342_suif_tmp00;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b11s0 =>
        r_r_e_g_0 <= ni3345_r_e_g_0;
      when b12s0 =>
        r_r_e_g_0 <= ni3346_r_e_g_0;
      when b19s0 =>
        r_r_e_g_0 <= ni3383_r_e_g_0;
      when b19s2 =>
        r_r_e_g_0 <= ni3391_r_e_g_0;
      when b19s3 =>
        r_r_e_g_0 <= ni3395_r_e_g_0;
      when b19s5 =>
        r_r_e_g_0 <= ni3403_r_e_g_0;
      when b19s6 =>
        r_r_e_g_0 <= ni3407_r_e_g_0;
      when b19s8 =>
        r_r_e_g_0 <= ni3415_r_e_g_0;
      when b19s9 =>
        r_r_e_g_0 <= ni3419_r_e_g_0;
      when b19s11 =>
        r_r_e_g_0 <= ni3427_r_e_g_0;
      when b19s12 =>
        r_r_e_g_0 <= ni3431_r_e_g_0;
      when b19s14 =>
        r_r_e_g_0 <= ni3437_r_e_g_0;
      when b26s0 =>
        r_r_e_g_0 <= ni3462_r_e_g_0;
      when b60s0 =>
        r_r_e_g_0 <= ni3545_r_e_g_0;
      when b60s2 =>
        r_r_e_g_0 <= ni3553_r_e_g_0;
      when b60s3 =>
        r_r_e_g_0 <= ni3557_r_e_g_0;
      when b60s5 =>
        r_r_e_g_0 <= ni3565_r_e_g_0;
      when b60s6 =>
        r_r_e_g_0 <= ni3569_r_e_g_0;
      when b60s8 =>
        r_r_e_g_0 <= ni3577_r_e_g_0;
      when b60s9 =>
        r_r_e_g_0 <= ni3581_r_e_g_0;
      when b60s11 =>
        r_r_e_g_0 <= ni3589_r_e_g_0;
      when b60s12 =>
        r_r_e_g_0 <= ni3593_r_e_g_0;
      when b60s14 =>
        r_r_e_g_0 <= ni3599_r_e_g_0;
      when b70s0 =>
        r_r_e_g_0 <= ni3624_r_e_g_0;
      when b70s2 =>
        r_r_e_g_0 <= ni3630_r_e_g_0;
      when b70s3 =>
        r_r_e_g_0 <= ni3634_r_e_g_0;
      when b70s5 =>
        r_r_e_g_0 <= ni3640_r_e_g_0;
      when b70s6 =>
        r_r_e_g_0 <= ni3644_r_e_g_0;
      when b70s8 =>
        r_r_e_g_0 <= ni3650_r_e_g_0;
      when b70s9 =>
        r_r_e_g_0 <= ni3654_r_e_g_0;
      when b70s11 =>
        r_r_e_g_0 <= ni3660_r_e_g_0;
      when b70s12 =>
        r_r_e_g_0 <= ni3664_r_e_g_0;
      when b70s14 =>
        r_r_e_g_0 <= ni3668_r_e_g_0;
      when b77s0 =>
        r_r_e_g_0 <= ni3684_r_e_g_0;
      when b77s2 =>
        r_r_e_g_0 <= ni3690_r_e_g_0;
      when b77s3 =>
        r_r_e_g_0 <= ni3694_r_e_g_0;
      when b77s5 =>
        r_r_e_g_0 <= ni3700_r_e_g_0;
      when b77s6 =>
        r_r_e_g_0 <= ni3704_r_e_g_0;
      when b77s8 =>
        r_r_e_g_0 <= ni3710_r_e_g_0;
      when b77s9 =>
        r_r_e_g_0 <= ni3714_r_e_g_0;
      when b77s11 =>
        r_r_e_g_0 <= ni3720_r_e_g_0;
      when b77s12 =>
        r_r_e_g_0 <= ni3724_r_e_g_0;
      when b77s14 =>
        r_r_e_g_0 <= ni3728_r_e_g_0;
      when b89s0 =>
        r_r_e_g_0 <= ni3747_r_e_g_0;
      when b90s0 =>
        r_r_e_g_0 <= ni3748_r_e_g_0;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b13s0 =>
        r_suif_tmp0 <= ni3348_suif_tmp0;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b14s0 =>
        r_suif_tmp <= ni3350_suif_tmp;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b15s0 =>
        r_avail_self <= ni3351_avail_self;
      when b59s0 =>
        if (s_b59s0_en = '1') then
          r_avail_self <= ni3539_avail_self;
        end if;
      when b63s0 =>
        r_avail_self <= ni3610_avail_self;
      when b69s0 =>
        r_avail_self <= ni3619_avail_self;
      when b93s0 =>
        r_avail_self <= ni3753_avail_self;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b15s0 =>
        r_avail_opp <= ni3352_avail_opp;
      when b18s0 =>
        if (s_b18s0_en = '1') then
          r_avail_opp <= ni3377_avail_opp;
        end if;
      when b58s0 =>
        r_avail_opp <= ni3534_avail_opp;
      when b76s0 =>
        r_avail_opp <= ni3679_avail_opp;
      when b93s0 =>
        r_avail_opp <= ni3754_avail_opp;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b15s0 =>
        r_score_self <= ni3353_score_self;
      when b59s1 =>
        r_score_self <= ni3540_score_self;
      when b63s0 =>
        r_score_self <= ni3609_score_self;
      when b69s1 =>
        r_score_self <= ni3620_score_self;
      when b93s0 =>
        r_score_self <= ni3755_score_self;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b15s0 =>
        r_score_opp <= ni3354_score_opp;
      when b18s1 =>
        r_score_opp <= ni3378_score_opp;
      when b58s0 =>
        r_score_opp <= ni3533_score_opp;
      when b76s1 =>
        r_score_opp <= ni3680_score_opp;
      when b93s0 =>
        r_score_opp <= ni3756_score_opp;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b15s0 =>
        r_num_avail_self <= ni3355_num_avail_self;
      when b64s0 =>
        if (s_b64s0_en = '1') then
          r_num_avail_self <= ni3612_num_avail_self;
        end if;
      when b93s0 =>
        r_num_avail_self <= ni3757_num_avail_self;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b15s0 =>
        r_num_avail_opp <= ni3356_num_avail_opp;
      when b71s0 =>
        if (s_b71s0_en = '1') then
          r_num_avail_opp <= ni3672_num_avail_opp;
        end if;
      when b93s0 =>
        r_num_avail_opp <= ni3758_num_avail_opp;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b15s0 =>
        r_search_extra <= ni3357_search_extra;
      when b67s0 =>
        r_search_extra <= ni3616_search_extra;
      when b68s0 =>
        r_search_extra <= ni3617_search_extra;
      when b74s0 =>
        r_search_extra <= ni3676_search_extra;
      when b75s0 =>
        r_search_extra <= ni3677_search_extra;
      when b93s0 =>
        r_search_extra <= ni3759_search_extra;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b16s1 =>
        r_move <= ni3360_move;
      when b55s0 =>
        if (s_b55s0_en = '1') then
          r_move <= ni3524_move;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b16s1 =>
        r_move_type <= ni3361_move_type;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b16s1 =>
        r_m_x <= ni3362_m_x;
      when b24s0 =>
        r_m_x <= ni3455_m_x;
      when b42s0 =>
        r_m_x <= ni3496_m_x;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b16s1 =>
        r_m_y <= ni3363_m_y;
      when b23s0 =>
        r_m_y <= ni3453_m_y;
      when b43s0 =>
        r_m_y <= ni3498_m_y;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b16s1 =>
        r_m_piece <= ni3364_m_piece;
      when b21s0 =>
        r_m_piece <= ni3447_m_piece;
      when b45s0 =>
        r_m_piece <= ni3502_m_piece;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b16s1 =>
        r_m_rotate <= ni3365_m_rotate;
      when b22s0 =>
        r_m_rotate <= ni3451_m_rotate;
      when b44s0 =>
        r_m_rotate <= ni3500_m_rotate;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b16s1 =>
        r_suif_tmp_0 <= ni3366_suif_tmp_0;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b16s1 =>
        r_suif_tmp5 <= ni3367_suif_tmp5;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b16s1 =>
        r_suif_tmp36 <= ni3535_suif_tmp36;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b16s1 =>
        r_suif_tmp38 <= ni3602_suif_tmp38;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b16s1 =>
        r_suif_tmp40 <= ni3611_suif_tmp40;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b16s1 =>
        r_suif_tmp42 <= ni3671_suif_tmp42;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b16s1 =>
        r_suif_tmp44 <= ni3731_suif_tmp44;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b16s1 =>
        r_switched <= ni6267131_switched;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b17s0 =>
        if (s_b17s0_en = '1') then
          r_mx_backup <= ni3368_mx_backup;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b17s0 =>
        if (s_b17s0_en = '1') then
          r_suif_tmp6 <= ni3373_suif_tmp6;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b17s1 =>
        if (s_b17s1_en = '1') then
          r_m1 <= ni3369_m1;
        end if;
      when b28s0 =>
        r_m1 <= ni3474_m1;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b17s1 =>
        if (s_b17s1_en = '1') then
          r_alpha <= ni3370_alpha;
        end if;
      when b40s0 =>
        r_alpha <= ni3493_alpha;
      when b48s0 =>
        r_alpha <= ni3510_alpha;
      when b51s0 =>
        r_alpha <= ni3516_alpha;
      when b54s0 =>
        r_alpha <= ni3522_alpha;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b17s2 =>
        r_m2 <= ni3371_m2;
      when b28s0 =>
        r_m2 <= ni3475_m2;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b17s2 =>
        r_beta <= ni3372_beta;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b18s0 =>
        if (s_b18s0_en = '1') then
          r_avail_opp_bak <= ni3374_avail_opp_bak;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b18s0 =>
        if (s_b18s0_en = '1') then
          r_score_opp_bak <= ni3375_score_opp_bak;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b18s0 =>
        if (s_b18s0_en = '1') then
          r_yoff <= ni3380_yoff;
        end if;
      when b19s15 =>
        r_yoff <= ni3436_yoff;
      when b25s0 =>
        r_yoff <= ni3459_yoff;
      when b26s1 =>
        r_yoff <= ni3466_yoff;
      when b59s0 =>
        if (s_b59s0_en = '1') then
          r_yoff <= ni3542_yoff;
        end if;
      when b60s15 =>
        r_yoff <= ni3598_yoff;
      when b69s0 =>
        r_yoff <= ni3622_yoff;
      when b70s15 =>
        r_yoff <= ni3667_yoff;
      when b76s0 =>
        r_yoff <= ni3682_yoff;
      when b77s15 =>
        r_yoff <= ni3727_yoff;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b18s0 =>
        if (s_b18s0_en = '1') then
          r_xoff <= ni3381_xoff;
        end if;
      when b19s15 =>
        r_xoff <= ni3438_xoff;
      when b25s0 =>
        r_xoff <= ni3460_xoff;
      when b26s1 =>
        r_xoff <= ni3468_xoff;
      when b59s0 =>
        if (s_b59s0_en = '1') then
          r_xoff <= ni3543_xoff;
        end if;
      when b60s15 =>
        r_xoff <= ni3600_xoff;
      when b69s0 =>
        r_xoff <= ni3623_xoff;
      when b70s15 =>
        r_xoff <= ni3669_xoff;
      when b76s0 =>
        r_xoff <= ni3683_xoff;
      when b77s15 =>
        r_xoff <= ni3729_xoff;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b18s0 =>
        if (s_b18s0_en = '1') then
          r_count_bak_op <= ni3382_count_bak_op;
        end if;
      when b19s1 =>
        r_count_bak_op <= ni3384_count_bak_op;
      when b19s3 =>
        r_count_bak_op <= ni3396_count_bak_op;
      when b19s4 =>
        r_count_bak_op <= ni3397_count_bak_op;
      when b19s6 =>
        r_count_bak_op <= ni3408_count_bak_op;
      when b19s7 =>
        r_count_bak_op <= ni3409_count_bak_op;
      when b19s9 =>
        r_count_bak_op <= ni3420_count_bak_op;
      when b19s10 =>
        r_count_bak_op <= ni3421_count_bak_op;
      when b19s12 =>
        r_count_bak_op <= ni3432_count_bak_op;
      when b19s13 =>
        r_count_bak_op <= ni3433_count_bak_op;
      when b56s0 =>
        if (s_b56s0_en = '1') then
          r_count_bak_op <= ni3527_count_bak_op;
        end if;
      when b57s0 =>
        if (s_b57_vwrite(2) = '1') then
          r_count_bak_op <= s_b57_1.f_count_bak_op;
        end if;
        if ((s_b57_vflush(2) and s_b57_vlast(0)) = '1') then
          r_count_bak_op <= s_b57_1.f_count_bak_op;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b18s1 =>
        r_size <= ni3379_size;
      when b19s0 =>
        r_size <= ni3434_size;
      when b25s1 =>
        r_size <= ni3458_size;
      when b26s0 =>
        r_size <= ni3465_size;
      when b59s1 =>
        r_size <= ni3541_size;
      when b60s0 =>
        r_size <= ni3596_size;
      when b69s1 =>
        r_size <= ni3621_size;
      when b70s0 =>
        r_size <= ni3665_size;
      when b76s1 =>
        r_size <= ni3681_size;
      when b77s0 =>
        r_size <= ni3725_size;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b19s0 =>
        r_y1 <= ni3388_y1;
      when b19s4 =>
        r_y1 <= ni3400_y1;
      when b19s7 =>
        r_y1 <= ni3412_y1;
      when b19s10 =>
        r_y1 <= ni3424_y1;
      when b60s0 =>
        r_y1 <= ni3550_y1;
      when b60s4 =>
        r_y1 <= ni3562_y1;
      when b60s7 =>
        r_y1 <= ni3574_y1;
      when b60s10 =>
        r_y1 <= ni3586_y1;
      when b70s0 =>
        r_y1 <= ni3657_y1;
      when b77s0 =>
        r_y1 <= ni3717_y1;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b19s0 =>
        r_x1 <= ni3389_x1;
      when b19s4 =>
        r_x1 <= ni3401_x1;
      when b19s7 =>
        r_x1 <= ni3413_x1;
      when b19s10 =>
        r_x1 <= ni3425_x1;
      when b60s0 =>
        r_x1 <= ni3551_x1;
      when b60s4 =>
        r_x1 <= ni3563_x1;
      when b60s7 =>
        r_x1 <= ni3575_x1;
      when b60s10 =>
        r_x1 <= ni3587_x1;
      when b70s0 =>
        r_x1 <= ni3658_x1;
      when b77s0 =>
        r_x1 <= ni3718_x1;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b19s0 =>
        r_suif_tmp7 <= ni3435_suif_tmp7;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b19s0 =>
        r_r_e_g_1 <= ni3385_r_e_g_1;
      when b19s2 =>
        r_r_e_g_1 <= ni3393_r_e_g_1;
      when b19s5 =>
        r_r_e_g_1 <= ni3405_r_e_g_1;
      when b19s8 =>
        r_r_e_g_1 <= ni3417_r_e_g_1;
      when b19s11 =>
        r_r_e_g_1 <= ni3429_r_e_g_1;
      when b19s14 =>
        r_r_e_g_1 <= ni3439_r_e_g_1;
      when b26s0 =>
        r_r_e_g_1 <= ni3467_r_e_g_1;
      when b60s0 =>
        r_r_e_g_1 <= ni3547_r_e_g_1;
      when b60s2 =>
        r_r_e_g_1 <= ni3555_r_e_g_1;
      when b60s5 =>
        r_r_e_g_1 <= ni3567_r_e_g_1;
      when b60s8 =>
        r_r_e_g_1 <= ni3579_r_e_g_1;
      when b60s11 =>
        r_r_e_g_1 <= ni3591_r_e_g_1;
      when b60s14 =>
        r_r_e_g_1 <= ni3601_r_e_g_1;
      when b70s0 =>
        r_r_e_g_1 <= ni6266963_r_e_g_1;
      when b70s2 =>
        r_r_e_g_1 <= ni3632_r_e_g_1;
      when b70s5 =>
        r_r_e_g_1 <= ni3642_r_e_g_1;
      when b70s8 =>
        r_r_e_g_1 <= ni3652_r_e_g_1;
      when b70s11 =>
        r_r_e_g_1 <= ni3662_r_e_g_1;
      when b70s14 =>
        r_r_e_g_1 <= ni3670_r_e_g_1;
      when b77s0 =>
        r_r_e_g_1 <= ni6267045_r_e_g_1;
      when b77s2 =>
        r_r_e_g_1 <= ni3692_r_e_g_1;
      when b77s5 =>
        r_r_e_g_1 <= ni3702_r_e_g_1;
      when b77s8 =>
        r_r_e_g_1 <= ni3712_r_e_g_1;
      when b77s11 =>
        r_r_e_g_1 <= ni3722_r_e_g_1;
      when b77s14 =>
        r_r_e_g_1 <= ni3730_r_e_g_1;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b19s2 =>
        r_r_e_g_2 <= ni3394_r_e_g_2;
      when b19s5 =>
        r_r_e_g_2 <= ni3406_r_e_g_2;
      when b19s8 =>
        r_r_e_g_2 <= ni3418_r_e_g_2;
      when b19s11 =>
        r_r_e_g_2 <= ni3430_r_e_g_2;
      when b26s0 =>
        r_r_e_g_2 <= ni3469_r_e_g_2;
      when b60s2 =>
        r_r_e_g_2 <= ni3556_r_e_g_2;
      when b60s5 =>
        r_r_e_g_2 <= ni3568_r_e_g_2;
      when b60s8 =>
        r_r_e_g_2 <= ni3580_r_e_g_2;
      when b60s11 =>
        r_r_e_g_2 <= ni3592_r_e_g_2;
      when b70s0 =>
        r_r_e_g_2 <= ni6266966_r_e_g_2;
      when b70s2 =>
        r_r_e_g_2 <= ni3633_r_e_g_2;
      when b70s5 =>
        r_r_e_g_2 <= ni3643_r_e_g_2;
      when b70s8 =>
        r_r_e_g_2 <= ni3653_r_e_g_2;
      when b70s11 =>
        r_r_e_g_2 <= ni3663_r_e_g_2;
      when b77s0 =>
        r_r_e_g_2 <= ni6267048_r_e_g_2;
      when b77s2 =>
        r_r_e_g_2 <= ni3693_r_e_g_2;
      when b77s5 =>
        r_r_e_g_2 <= ni3703_r_e_g_2;
      when b77s8 =>
        r_r_e_g_2 <= ni3713_r_e_g_2;
      when b77s11 =>
        r_r_e_g_2 <= ni3723_r_e_g_2;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b19s3 =>
        r_board_t <= ni3390_board_t;
      when b19s6 =>
        r_board_t <= ni3402_board_t;
      when b19s9 =>
        r_board_t <= ni3414_board_t;
      when b19s12 =>
        r_board_t <= ni3426_board_t;
      when b26s1 =>
        r_board_t <= ni3461_board_t;
      when b60s3 =>
        r_board_t <= ni3552_board_t;
      when b60s6 =>
        r_board_t <= ni3564_board_t;
      when b60s9 =>
        r_board_t <= ni3576_board_t;
      when b60s12 =>
        r_board_t <= ni3588_board_t;
      when b70s3 =>
        r_board_t <= ni3629_board_t;
      when b70s6 =>
        r_board_t <= ni3639_board_t;
      when b70s9 =>
        r_board_t <= ni3649_board_t;
      when b70s12 =>
        r_board_t <= ni3659_board_t;
      when b77s3 =>
        r_board_t <= ni3689_board_t;
      when b77s6 =>
        r_board_t <= ni3699_board_t;
      when b77s9 =>
        r_board_t <= ni3709_board_t;
      when b77s12 =>
        r_board_t <= ni3719_board_t;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b19s3 =>
        r_board_t1 <= ni3392_board_t1;
      when b19s6 =>
        r_board_t1 <= ni3404_board_t1;
      when b19s9 =>
        r_board_t1 <= ni3416_board_t1;
      when b19s12 =>
        r_board_t1 <= ni3428_board_t1;
      when b60s3 =>
        r_board_t1 <= ni3554_board_t1;
      when b60s6 =>
        r_board_t1 <= ni3566_board_t1;
      when b60s9 =>
        r_board_t1 <= ni3578_board_t1;
      when b60s12 =>
        r_board_t1 <= ni3590_board_t1;
      when b70s3 =>
        r_board_t1 <= ni3631_board_t1;
      when b70s6 =>
        r_board_t1 <= ni3641_board_t1;
      when b70s9 =>
        r_board_t1 <= ni3651_board_t1;
      when b70s12 =>
        r_board_t1 <= ni3661_board_t1;
      when b77s3 =>
        r_board_t1 <= ni3691_board_t1;
      when b77s6 =>
        r_board_t1 <= ni3701_board_t1;
      when b77s9 =>
        r_board_t1 <= ni3711_board_t1;
      when b77s12 =>
        r_board_t1 <= ni3721_board_t1;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s0 =>
        r_moves_found <= ni3440_moves_found;
      when b28s0 =>
        r_moves_found <= ni3472_moves_found;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s0 =>
        r_suif_tmp8 <= ni3441_suif_tmp8;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b21s0 =>
        r_not_prune <= ni3442_not_prune;
      when b41s0 =>
        r_not_prune <= ni3495_not_prune;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b21s0 =>
        r_m_piece_min <= ni3443_m_piece_min;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b21s0 =>
        r_state <= ni3444_state;
      when b33s0 =>
        r_state <= ni3484_state;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b21s0 =>
        r_count <= ni3445_count;
      when b30s0 =>
        if (s_b30s0_en = '1') then
          r_count <= ni3478_count;
        end if;
      when b32s0 =>
        if (s_b32s0_en = '1') then
          r_count <= ni3481_count;
        end if;
      when b47s0 =>
        r_count <= ni3507_count;
      when b50s0 =>
        r_count <= ni3513_count;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b21s0 =>
        r_next_stream <= ni3446_next_stream;
      when b30s0 =>
        if (s_b30s0_en = '1') then
          r_next_stream <= ni3479_next_stream;
        end if;
      when b32s0 =>
        if (s_b32s0_en = '1') then
          r_next_stream <= ni3482_next_stream;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b22s0 =>
        r_avail <= ni3450_avail;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b22s0 =>
        r_suif_tmp11 <= ni3452_suif_tmp11;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b23s0 =>
        r_suif_tmp13 <= ni3454_suif_tmp13;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b24s0 =>
        r_suif_tmp15 <= ni3456_suif_tmp15;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b25s0 =>
        r_lib_check <= ni3457_lib_check;
      when b26s1 =>
        r_lib_check <= ni3464_lib_check;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b26s1 =>
        r_move_valid <= ni3463_move_valid;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b26s1 =>
        r_suif_tmp17 <= ni3470_suif_tmp17;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b27s0 =>
        r_suif_tmp18 <= ni3471_suif_tmp18;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b28s0 =>
        r_m <= ni3473_m;
      when b53s0 =>
        if (s_b53s0_en = '1') then
          r_m <= ni3518_m;
        end if;
      when b56s0 =>
        if (s_b56s0_en = '1') then
          r_m <= ni3526_m;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b28s0 =>
        r_suif_tmp19 <= ni3476_suif_tmp19;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b29s0 =>
        r_suif_tmp20 <= ni3477_suif_tmp20;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b31s0 =>
        r_suif_tmp21 <= ni3480_suif_tmp21;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b32s0 =>
        if (s_b32s0_en = '1') then
          r_suif_tmp22 <= ni3483_suif_tmp22;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b35s0 =>
        r_r_e_g_3 <= ni1244_r_e_g_3;
      when b37s0 =>
        r_r_e_g_3 <= ni1275_r_e_g_3;
      when b46s1 =>
        r_r_e_g_3 <= ni1414_r_e_g_3;
      when b49s0 =>
        r_r_e_g_3 <= ni1445_r_e_g_3;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b35s1 =>
        r_m_recv <= ni3488_m_recv;
      when b37s1 =>
        r_m_recv <= ni3490_m_recv;
      when b46s2 =>
        r_m_recv <= ni3506_m_recv;
      when b49s1 =>
        r_m_recv <= ni3512_m_recv;
      when b53s2 =>
        r_m_recv <= ni3519_m_recv;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b35s1 =>
        r_suif_tmp23 <= ni3487_suif_tmp23;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b37s1 =>
        r_suif_tmp24 <= ni3489_suif_tmp24;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b39s0 =>
        r_utility <= ni3491_utility;
      when b47s0 =>
        r_utility <= ni3508_utility;
      when b50s0 =>
        r_utility <= ni3514_utility;
      when b53s2 =>
        r_utility <= ni3520_utility;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b39s0 =>
        r_suif_tmp25 <= ni3492_suif_tmp25;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b40s0 =>
        r_suif_tmp26 <= ni3494_suif_tmp26;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b42s0 =>
        r_suif_tmp16 <= ni3497_suif_tmp16;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b43s0 =>
        r_suif_tmp14 <= ni3499_suif_tmp14;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b44s0 =>
        r_suif_tmp12 <= ni3501_suif_tmp12;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b45s0 =>
        r_suif_tmp9 <= ni3503_suif_tmp9;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b46s0 =>
        r_suif_tmp27 <= ni3504_suif_tmp27;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b46s2 =>
        r_suif_tmp28 <= ni3505_suif_tmp28;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b47s0 =>
        r_suif_tmp29 <= ni3509_suif_tmp29;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b49s1 =>
        r_suif_tmp30 <= ni3511_suif_tmp30;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b50s0 =>
        r_suif_tmp31 <= ni3515_suif_tmp31;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b52s0 =>
        r_suif_tmp32 <= ni3517_suif_tmp32;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b53s2 =>
        r_suif_tmp33 <= ni3521_suif_tmp33;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b55s0 =>
        if (s_b55s0_en = '1') then
          r_suif_tmp34 <= ni3525_suif_tmp34;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b56s0 =>
        if (s_b56s0_en = '1') then
          r_count_bak_op0 <= ni6267144_count_bak_op0;
        end if;
      when b57s0 =>
        if (s_b57_vwrite(0) = '1') then
          r_count_bak_op0 <= ni3531_count_bak_op0;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b59s0 =>
        if (s_b59s0_en = '1') then
          r_avail_self_bak <= ni3536_avail_self_bak;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b59s0 =>
        if (s_b59s0_en = '1') then
          r_score_self_bak <= ni3537_score_self_bak;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b59s0 =>
        if (s_b59s0_en = '1') then
          r_count_bak_s <= ni3544_count_bak_s;
        end if;
      when b60s1 =>
        r_count_bak_s <= ni3546_count_bak_s;
      when b60s3 =>
        r_count_bak_s <= ni3558_count_bak_s;
      when b60s4 =>
        r_count_bak_s <= ni3559_count_bak_s;
      when b60s6 =>
        r_count_bak_s <= ni3570_count_bak_s;
      when b60s7 =>
        r_count_bak_s <= ni3571_count_bak_s;
      when b60s9 =>
        r_count_bak_s <= ni3582_count_bak_s;
      when b60s10 =>
        r_count_bak_s <= ni3583_count_bak_s;
      when b60s12 =>
        r_count_bak_s <= ni3594_count_bak_s;
      when b60s13 =>
        r_count_bak_s <= ni3595_count_bak_s;
      when b61s0 =>
        if (s_b61s0_en = '1') then
          r_count_bak_s <= ni3603_count_bak_s;
        end if;
      when b62s0 =>
        if (s_b62_vwrite(2) = '1') then
          r_count_bak_s <= s_b62_1.f_count_bak_s;
        end if;
        if ((s_b62_vflush(2) and s_b62_vlast(0)) = '1') then
          r_count_bak_s <= s_b62_1.f_count_bak_s;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b60s0 =>
        r_suif_tmp37 <= ni3597_suif_tmp37;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b61s0 =>
        if (s_b61s0_en = '1') then
          r_count_bak_s0 <= ni6267147_count_bak_s0;
        end if;
      when b62s0 =>
        if (s_b62_vwrite(0) = '1') then
          r_count_bak_s0 <= ni3608_count_bak_s0;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b64s0 =>
        if (s_b64s0_en = '1') then
          r_suif_tmp_1 <= ni3613_suif_tmp_1;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b65s0 =>
        r_suif_tmp0_0 <= ni3614_suif_tmp0_0;
      when b66s0 =>
        r_suif_tmp0_0 <= ni3615_suif_tmp0_0;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b70s0 =>
        r_suif_tmp41 <= ni3666_suif_tmp41;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b70s0 =>
        r_r_e_g_5 <= ni6266967_r_e_g_5;
      when b77s0 =>
        r_r_e_g_5 <= ni6267049_r_e_g_5;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b70s0 =>
        r_r_e_g_6 <= ni6266970_r_e_g_6;
      when b77s0 =>
        r_r_e_g_6 <= ni6267052_r_e_g_6;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b70s0 =>
        r_r_e_g_7 <= ni6266971_r_e_g_7;
      when b77s0 =>
        r_r_e_g_7 <= ni6267053_r_e_g_7;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b70s0 =>
        r_r_e_g_8 <= ni6266974_r_e_g_8;
      when b77s0 =>
        r_r_e_g_8 <= ni6267056_r_e_g_8;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b70s0 =>
        r_r_e_g_9 <= ni6266975_r_e_g_9;
      when b77s0 =>
        r_r_e_g_9 <= ni6267057_r_e_g_9;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b70s0 =>
        r_r_e_g_10 <= ni6266978_r_e_g_10;
      when b77s0 =>
        r_r_e_g_10 <= ni6267060_r_e_g_10;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b70s0 =>
        r_r_e_g_11 <= ni6266979_r_e_g_11;
      when b77s0 =>
        r_r_e_g_11 <= ni6267061_r_e_g_11;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b70s0 =>
        r_r_e_g_12 <= ni6266982_r_e_g_12;
      when b77s0 =>
        r_r_e_g_12 <= ni6267064_r_e_g_12;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b70s0 =>
        r_r_e_g_13 <= ni6266983_r_e_g_13;
      when b77s0 =>
        r_r_e_g_13 <= ni6267065_r_e_g_13;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b70s0 =>
        r_r_e_g_14 <= ni6266986_r_e_g_14;
      when b77s0 =>
        r_r_e_g_14 <= ni6267068_r_e_g_14;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b70s0 =>
        r_r_e_g_15 <= ni6266987_r_e_g_15;
      when b77s0 =>
        r_r_e_g_15 <= ni6267069_r_e_g_15;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b70s0 =>
        r_r_e_g_16 <= ni6266990_r_e_g_16;
      when b77s0 =>
        r_r_e_g_16 <= ni6267072_r_e_g_16;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b70s0 =>
        r_r_e_g_17 <= ni6266991_r_e_g_17;
      when b77s0 =>
        r_r_e_g_17 <= ni6267073_r_e_g_17;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b70s0 =>
        r_r_e_g_18 <= ni6266994_r_e_g_18;
      when b77s0 =>
        r_r_e_g_18 <= ni6267076_r_e_g_18;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b70s0 =>
        r_r_e_g_19 <= ni6266995_r_e_g_19;
      when b77s0 =>
        r_r_e_g_19 <= ni6267077_r_e_g_19;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b70s0 =>
        r_r_e_g_20 <= ni6266998_r_e_g_20;
      when b77s0 =>
        r_r_e_g_20 <= ni6267080_r_e_g_20;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b70s0 =>
        r_r_e_g_21 <= ni6266999_r_e_g_21;
      when b77s0 =>
        r_r_e_g_21 <= ni6267081_r_e_g_21;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b70s0 =>
        r_r_e_g_22 <= ni6267002_r_e_g_22;
      when b77s0 =>
        r_r_e_g_22 <= ni6267084_r_e_g_22;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b70s0 =>
        r_r_e_g_23 <= ni6267003_r_e_g_23;
      when b77s0 =>
        r_r_e_g_23 <= ni6267085_r_e_g_23;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b70s0 =>
        r_r_e_g_24 <= ni6267006_r_e_g_24;
      when b77s0 =>
        r_r_e_g_24 <= ni6267088_r_e_g_24;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b70s0 =>
        r_r_e_g_25 <= ni6267007_r_e_g_25;
      when b77s0 =>
        r_r_e_g_25 <= ni6267089_r_e_g_25;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b70s0 =>
        r_r_e_g_26 <= ni6267010_r_e_g_26;
      when b77s0 =>
        r_r_e_g_26 <= ni6267092_r_e_g_26;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b71s0 =>
        if (s_b71s0_en = '1') then
          r_suif_tmp2_0 <= ni3673_suif_tmp2_0;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b72s0 =>
        r_suif_tmp3_0 <= ni3674_suif_tmp3_0;
      when b73s0 =>
        r_suif_tmp3_0 <= ni3675_suif_tmp3_0;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b77s0 =>
        r_suif_tmp43 <= ni3726_suif_tmp43;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b80s0 =>
        r_suif_tmp3_1 <= ni3738_suif_tmp3_1;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b81s0 =>
        r_suif_tmp4_0 <= ni3739_suif_tmp4_0;
      when b88s0 =>
        r_suif_tmp4_0 <= ni3746_suif_tmp4_0;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b82s0 =>
        r_suif_tmp1_0 <= ni3740_suif_tmp1_0;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b83s0 =>
        r_suif_tmp2_1 <= ni3741_suif_tmp2_1;
      when b87s0 =>
        r_suif_tmp2_1 <= ni3745_suif_tmp2_1;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b84s0 =>
        r_suif_tmp_2 <= ni3742_suif_tmp_2;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b85s0 =>
        r_suif_tmp0_1 <= ni3743_suif_tmp0_1;
      when b86s0 =>
        r_suif_tmp0_1 <= ni3744_suif_tmp0_1;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b91s0 =>
        r_suif_tmp46 <= ni3750_suif_tmp46;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b92s0 =>
        r_suif_tmp45 <= ni3752_suif_tmp45;
      when others =>
      end case;
    end if;
  end process;

-- "stream0_move_input" interface signals
  process (clk)
  begin
    if (clk'event and clk='1') then
      if ((p_stream0_move_input_en and p_stream0_move_input_rdy) = '1') then
        r_stream0_move_input <= p_stream0_move_input_data;
      end if;
    end if;
  end process;

  p_stream0_move_input_en <= 
    s_b16s0_en and not p_stream0_move_input_eos when thisState = b16s0 else
    s_b17s0_en and not p_stream0_move_input_eos when thisState = b17s0 else
    s_b17s1_en and not p_stream0_move_input_eos when thisState = b17s1 else
    '0';

-- "stream0_move_output" interface signals
  p_stream0_move_output_en <= 
    s_b55s0_en when thisState = b55s0 else
    '0';
  p_stream0_move_output_data <= ni3524_move;
  p_stream0_move_output_eos <= '0';

-- "stream_eval1_output" interface signals
  p_stream_eval1_output_en <= 
    s_b18s0_en when thisState = b18s0 else
    s_b30s0_en when thisState = b30s0 else
    s_b30s1_en when thisState = b30s1 else
    s_b30s2_en when thisState = b30s2 else
    s_b36s0_en when thisState = b36s0 else
    s_b36s1_en when thisState = b36s1 else
    s_b36s2_en when thisState = b36s2 else
    s_b53s0_en when thisState = b53s0 else
    s_b56s0_en when thisState = b56s0 else
    s_b59s0_en when thisState = b59s0 else
    s_b61s0_en when thisState = b61s0 else
    s_b64s0_en when thisState = b64s0 else
    s_b71s0_en when thisState = b71s0 else
    s_b78s0_en when thisState = b78s0 else
    '0';
  p_stream_eval1_output_data <= 
    r_move when thisState = b18s0 else
    r_m when thisState = b30s0 else
    r_m1 when thisState = b30s1 else
    r_m2 when thisState = b30s2 else
    r_m when thisState = b36s0 else
    r_m1 when thisState = b36s1 else
    r_m2 when thisState = b36s2 else
    ni3518_m when thisState = b53s0 else
    ni3526_m when thisState = b56s0 else
    r_move when thisState = b59s0 else
    r_move when thisState = b61s0 else
    r_move when thisState = b64s0 else
    r_move when thisState = b71s0 else
    r_move when thisState = b78s0 else
    (others => 'X');
  p_stream_eval1_output_eos <= '0';

-- "stream_eval1_input" interface signals
  process (clk)
  begin
    if (clk'event and clk='1') then
      if ((p_stream_eval1_input_en and p_stream_eval1_input_rdy) = '1') then
        r_stream_eval1_input <= p_stream_eval1_input_data;
      end if;
    end if;
  end process;

  p_stream_eval1_input_en <= 
    '1' and not p_stream_eval1_input_eos when thisState = b35s0 else
    '1' and not p_stream_eval1_input_eos when thisState = b46s1 else
    s_b53s1_en and not p_stream_eval1_input_eos when thisState = b53s1 else
    '0';

-- "stream_eval2_output" interface signals
  p_stream_eval2_output_en <= 
    s_b18s0_en when thisState = b18s0 else
    s_b32s0_en when thisState = b32s0 else
    s_b32s1_en when thisState = b32s1 else
    s_b32s2_en when thisState = b32s2 else
    s_b38s0_en when thisState = b38s0 else
    s_b38s1_en when thisState = b38s1 else
    s_b38s2_en when thisState = b38s2 else
    s_b56s0_en when thisState = b56s0 else
    s_b59s0_en when thisState = b59s0 else
    s_b61s0_en when thisState = b61s0 else
    s_b64s0_en when thisState = b64s0 else
    s_b71s0_en when thisState = b71s0 else
    s_b78s0_en when thisState = b78s0 else
    '0';
  p_stream_eval2_output_data <= 
    r_move when thisState = b18s0 else
    r_m when thisState = b32s0 else
    r_m1 when thisState = b32s1 else
    r_m2 when thisState = b32s2 else
    r_m when thisState = b38s0 else
    r_m1 when thisState = b38s1 else
    r_m2 when thisState = b38s2 else
    ni3526_m when thisState = b56s0 else
    r_move when thisState = b59s0 else
    r_move when thisState = b61s0 else
    r_move when thisState = b64s0 else
    r_move when thisState = b71s0 else
    r_move when thisState = b78s0 else
    (others => 'X');
  p_stream_eval2_output_eos <= '0';

-- "stream_eval2_input" interface signals
  process (clk)
  begin
    if (clk'event and clk='1') then
      if ((p_stream_eval2_input_en and p_stream_eval2_input_rdy) = '1') then
        r_stream_eval2_input <= p_stream_eval2_input_data;
      end if;
    end if;
  end process;

  p_stream_eval2_input_en <= 
    '1' and not p_stream_eval2_input_eos when thisState = b37s0 else
    '1' and not p_stream_eval2_input_eos when thisState = b49s0 else
    '0';

-- "piece_sizes" memory signals
  ram_0: minimax_ex_func_piece_sizes_RAM
    port map (
      rst => reset, 
      clk => clk, 
      we => p_piece_sizes_we, 
      w_addr => p_piece_sizes_waddr, 
      r_addr => p_piece_sizes_raddr, 
      din => p_piece_sizes_din, 
      dout => p_piece_sizes_dout);

  p_piece_sizes_raddr <= 
    r_m_piece(4 downto 0) when thisState = b18s0 else
    r_m_piece(4 downto 0) when thisState = b25s0 else
    r_m_piece(4 downto 0) when thisState = b59s0 else
    r_m_piece(4 downto 0) when thisState = b69s0 else
    r_m_piece(4 downto 0) when thisState = b76s0 else
    (others => 'X');
  p_piece_sizes_re2 <= 
    newState when thisState = b18s1 else
    newState when thisState = b25s1 else
    newState when thisState = b59s1 else
    newState when thisState = b69s1 else
    newState when thisState = b76s1 else
    '0';
  p_piece_sizes_we <= '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (p_piece_sizes_re2 = '1') then
        r_piece_sizes <= p_piece_sizes_dout;
      end if;
    end if;
  end process;

  p_piece_sizes_imm2 <= 
    p_piece_sizes_dout when newState = '1' else
    r_piece_sizes;
-- "piece_y" memory signals
  ram_1: minimax_ex_func_piece_y_RAM
    port map (
      rst => reset, 
      clk => clk, 
      we => p_piece_y_we, 
      w_addr => p_piece_y_waddr, 
      r_addr => p_piece_y_raddr, 
      din => p_piece_y_din, 
      dout => p_piece_y_dout);

  p_piece_y_raddr <= 
    ni3437_r_e_g_0 when thisState = b19s14 else
    ni3467_r_e_g_1 when thisState = b26s0 else
    ni3599_r_e_g_0 when thisState = b60s14 else
    ni3668_r_e_g_0 when thisState = b70s14 else
    ni3728_r_e_g_0 when thisState = b77s14 else
    (others => 'X');
  p_piece_y_re2 <= 
    newState when thisState = b19s15 else
    newState when thisState = b26s1 else
    newState when thisState = b60s15 else
    newState when thisState = b70s15 else
    newState when thisState = b77s15 else
    '0';
  p_piece_y_we <= '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (p_piece_y_re2 = '1') then
        r_piece_y <= p_piece_y_dout;
      end if;
    end if;
  end process;

  p_piece_y_imm2 <= 
    p_piece_y_dout when newState = '1' else
    r_piece_y;
-- "piece_x" memory signals
  ram_2: minimax_ex_func_piece_x_RAM
    port map (
      rst => reset, 
      clk => clk, 
      we => p_piece_x_we, 
      w_addr => p_piece_x_waddr, 
      r_addr => p_piece_x_raddr, 
      din => p_piece_x_din, 
      dout => p_piece_x_dout);

  p_piece_x_raddr <= 
    ni3439_r_e_g_1 when thisState = b19s14 else
    ni3469_r_e_g_2 when thisState = b26s0 else
    ni3601_r_e_g_1 when thisState = b60s14 else
    ni3670_r_e_g_1 when thisState = b70s14 else
    ni3730_r_e_g_1 when thisState = b77s14 else
    (others => 'X');
  p_piece_x_re2 <= 
    newState when thisState = b19s15 else
    newState when thisState = b26s1 else
    newState when thisState = b60s15 else
    newState when thisState = b70s15 else
    newState when thisState = b77s15 else
    '0';
  p_piece_x_we <= '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (p_piece_x_re2 = '1') then
        r_piece_x <= p_piece_x_dout;
      end if;
    end if;
  end process;

  p_piece_x_imm2 <= 
    p_piece_x_dout when newState = '1' else
    r_piece_x;
-- "board" memory signals
  ram_3: minimax_ex_func_board_RAM
    port map (
      rst => reset, 
      clk => clk, 
      we => p_board_we, 
      addr => p_board_addr, 
      addr2 => p_board_addr2, 
      din => p_board_din, 
      we2 => '0', 
      din2 => X"00", 
      dout => p_board_dout, 
      dout2 => p_board_dout2);

  p_board_addr <= 
    r_r_e_g_0 when thisState = b11s1 else
    r_r_e_g_0 when thisState = b12s1 else
    r_r_e_g_1 when thisState = b19s1 else
    ni3393_r_e_g_1 when thisState = b19s2 else
    r_r_e_g_2 when thisState = b19s3 else
    r_r_e_g_0 when thisState = b19s4 else
    ni3405_r_e_g_1 when thisState = b19s5 else
    r_r_e_g_2 when thisState = b19s6 else
    r_r_e_g_0 when thisState = b19s7 else
    ni3417_r_e_g_1 when thisState = b19s8 else
    r_r_e_g_2 when thisState = b19s9 else
    r_r_e_g_0 when thisState = b19s10 else
    ni3429_r_e_g_1 when thisState = b19s11 else
    r_r_e_g_2 when thisState = b19s12 else
    r_r_e_g_0 when thisState = b19s13 else
    s_b57_1.f_r_e_g_0 when thisState = b57s0 and s_b57_stage(2) = '1' else
    r_r_e_g_1 when thisState = b60s1 else
    ni3555_r_e_g_1 when thisState = b60s2 else
    r_r_e_g_2 when thisState = b60s3 else
    r_r_e_g_0 when thisState = b60s4 else
    ni3567_r_e_g_1 when thisState = b60s5 else
    r_r_e_g_2 when thisState = b60s6 else
    r_r_e_g_0 when thisState = b60s7 else
    ni3579_r_e_g_1 when thisState = b60s8 else
    r_r_e_g_2 when thisState = b60s9 else
    r_r_e_g_0 when thisState = b60s10 else
    ni3591_r_e_g_1 when thisState = b60s11 else
    r_r_e_g_2 when thisState = b60s12 else
    r_r_e_g_0 when thisState = b60s13 else
    s_b62_1.f_r_e_g_0 when thisState = b62s0 and s_b62_stage(2) = '1' else
    r_r_e_g_0 when thisState = b70s1 else
    ni3632_r_e_g_1 when thisState = b70s2 else
    r_r_e_g_2 when thisState = b70s3 else
    r_r_e_g_0 when thisState = b70s4 else
    ni3642_r_e_g_1 when thisState = b70s5 else
    r_r_e_g_2 when thisState = b70s6 else
    r_r_e_g_0 when thisState = b70s7 else
    ni3652_r_e_g_1 when thisState = b70s8 else
    r_r_e_g_2 when thisState = b70s9 else
    r_r_e_g_0 when thisState = b70s10 else
    ni3662_r_e_g_1 when thisState = b70s11 else
    r_r_e_g_2 when thisState = b70s12 else
    r_r_e_g_0 when thisState = b70s13 else
    r_r_e_g_0 when thisState = b77s1 else
    ni3692_r_e_g_1 when thisState = b77s2 else
    r_r_e_g_2 when thisState = b77s3 else
    r_r_e_g_0 when thisState = b77s4 else
    ni3702_r_e_g_1 when thisState = b77s5 else
    r_r_e_g_2 when thisState = b77s6 else
    r_r_e_g_0 when thisState = b77s7 else
    ni3712_r_e_g_1 when thisState = b77s8 else
    r_r_e_g_2 when thisState = b77s9 else
    r_r_e_g_0 when thisState = b77s10 else
    ni3722_r_e_g_1 when thisState = b77s11 else
    r_r_e_g_2 when thisState = b77s12 else
    r_r_e_g_0 when thisState = b77s13 else
    r_r_e_g_0 when thisState = b89s1 else
    r_r_e_g_0 when thisState = b90s1 else
    (others => 'X');
  p_board_re <= 
    newState when thisState = b19s3 else
    newState when thisState = b19s6 else
    newState when thisState = b19s9 else
    newState when thisState = b19s12 else
    newState when thisState = b60s3 else
    newState when thisState = b60s6 else
    newState when thisState = b60s9 else
    newState when thisState = b60s12 else
    newState when thisState = b70s3 else
    newState when thisState = b70s6 else
    newState when thisState = b70s9 else
    newState when thisState = b70s12 else
    newState when thisState = b77s3 else
    newState when thisState = b77s6 else
    newState when thisState = b77s9 else
    newState when thisState = b77s12 else
    '0';
  p_board_re2 <= 
    newState when thisState = b19s1 else
    newState when thisState = b19s3 else
    newState when thisState = b19s6 else
    newState when thisState = b19s9 else
    newState when thisState = b19s12 else
    newState when thisState = b26s1 else
    newState when thisState = b60s1 else
    newState when thisState = b60s3 else
    newState when thisState = b60s6 else
    newState when thisState = b60s9 else
    newState when thisState = b60s12 else
    newState when thisState = b70s3 else
    newState when thisState = b70s6 else
    newState when thisState = b70s9 else
    newState when thisState = b70s12 else
    newState when thisState = b77s3 else
    newState when thisState = b77s6 else
    newState when thisState = b77s9 else
    newState when thisState = b77s12 else
    '0';
  p_board_addr2 <= 
    ni3383_r_e_g_0 when thisState = b19s0 else
    ni3391_r_e_g_0 when thisState = b19s2 else
    ni3403_r_e_g_0 when thisState = b19s5 else
    ni3415_r_e_g_0 when thisState = b19s8 else
    ni3427_r_e_g_0 when thisState = b19s11 else
    ni3462_r_e_g_0 when thisState = b26s0 else
    ni3545_r_e_g_0 when thisState = b60s0 else
    ni3553_r_e_g_0 when thisState = b60s2 else
    ni3565_r_e_g_0 when thisState = b60s5 else
    ni3577_r_e_g_0 when thisState = b60s8 else
    ni3589_r_e_g_0 when thisState = b60s11 else
    ni3630_r_e_g_0 when thisState = b70s2 else
    ni3640_r_e_g_0 when thisState = b70s5 else
    ni3650_r_e_g_0 when thisState = b70s8 else
    ni3660_r_e_g_0 when thisState = b70s11 else
    ni3690_r_e_g_0 when thisState = b77s2 else
    ni3700_r_e_g_0 when thisState = b77s5 else
    ni3710_r_e_g_0 when thisState = b77s8 else
    ni3720_r_e_g_0 when thisState = b77s11 else
    (others => 'X');
  p_board_we <= 
    '1' when thisState = b11s1 else
    '1' when thisState = b12s1 else
    '1' when thisState = b19s1 else
    '1' when thisState = b19s3 else
    '1' when thisState = b19s4 else
    '1' when thisState = b19s6 else
    '1' when thisState = b19s7 else
    '1' when thisState = b19s9 else
    '1' when thisState = b19s10 else
    '1' when thisState = b19s12 else
    '1' when thisState = b19s13 else
    '1' when thisState = b57s0 and s_b57_stage(2) = '1' else
    '1' when thisState = b60s1 else
    '1' when thisState = b60s3 else
    '1' when thisState = b60s4 else
    '1' when thisState = b60s6 else
    '1' when thisState = b60s7 else
    '1' when thisState = b60s9 else
    '1' when thisState = b60s10 else
    '1' when thisState = b60s12 else
    '1' when thisState = b60s13 else
    '1' when thisState = b62s0 and s_b62_stage(2) = '1' else
    '1' when thisState = b70s1 else
    '1' when thisState = b70s3 else
    '1' when thisState = b70s4 else
    '1' when thisState = b70s6 else
    '1' when thisState = b70s7 else
    '1' when thisState = b70s9 else
    '1' when thisState = b70s10 else
    '1' when thisState = b70s12 else
    '1' when thisState = b70s13 else
    '1' when thisState = b77s1 else
    '1' when thisState = b77s3 else
    '1' when thisState = b77s4 else
    '1' when thisState = b77s6 else
    '1' when thisState = b77s7 else
    '1' when thisState = b77s9 else
    '1' when thisState = b77s10 else
    '1' when thisState = b77s12 else
    '1' when thisState = b77s13 else
    '1' when thisState = b89s1 else
    '1' when thisState = b90s1 else
    '0';
  p_board_din <= 
    ni145_board when thisState = b11s1 else
    ni161_board when thisState = b12s1 else
    ni387_board when thisState = b19s1 else
    ni435_board when thisState = b19s3 else
    ni451_board when thisState = b19s4 else
    ni546_board when thisState = b19s6 else
    ni562_board when thisState = b19s7 else
    ni657_board when thisState = b19s9 else
    ni673_board when thisState = b19s10 else
    ni768_board when thisState = b19s12 else
    ni784_board when thisState = b19s13 else
    s_b57_1.f_r_e_g_4 when thisState = b57s0 and s_b57_stage(2) = '1' else
    ni1695_board when thisState = b60s1 else
    ni1743_board when thisState = b60s3 else
    ni1759_board when thisState = b60s4 else
    ni1854_board when thisState = b60s6 else
    ni1870_board when thisState = b60s7 else
    ni1965_board when thisState = b60s9 else
    ni1981_board when thisState = b60s10 else
    ni2076_board when thisState = b60s12 else
    ni2092_board when thisState = b60s13 else
    s_b62_1.f_r_e_g_4 when thisState = b62s0 and s_b62_stage(2) = '1' else
    ni2338_board when thisState = b70s1 else
    ni2386_board when thisState = b70s3 else
    ni2402_board when thisState = b70s4 else
    ni2451_board when thisState = b70s6 else
    ni2467_board when thisState = b70s7 else
    ni2516_board when thisState = b70s9 else
    ni2532_board when thisState = b70s10 else
    ni2581_board when thisState = b70s12 else
    ni2597_board when thisState = b70s13 else
    ni2730_board when thisState = b77s1 else
    ni2778_board when thisState = b77s3 else
    ni2794_board when thisState = b77s4 else
    ni2843_board when thisState = b77s6 else
    ni2859_board when thisState = b77s7 else
    ni2908_board when thisState = b77s9 else
    ni2924_board when thisState = b77s10 else
    ni2973_board when thisState = b77s12 else
    ni2989_board when thisState = b77s13 else
    ni3113_board when thisState = b89s1 else
    ni3129_board when thisState = b90s1 else
    (others => 'X');
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (p_board_re = '1') then
        r_board <= p_board_dout;
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (p_board_re2 = '1') then
        r2_board <= p_board_dout2;
      end if;
    end if;
  end process;

  p_board_imm <= 
    p_board_dout when newState = '1' else
    r_board;
  p_board_imm2 <= 
    p_board_dout2 when newState = '1' else
    r2_board;
-- "x_bak_s" memory signals
  ram_4: minimax_ex_func_x_bak_s_RAM
    port map (
      rst => reset, 
      clk => clk, 
      we => p_x_bak_s_we, 
      w_addr => p_x_bak_s_waddr, 
      r_addr => p_x_bak_s_raddr, 
      din => p_x_bak_s_din, 
      dout => p_x_bak_s_dout);

  p_x_bak_s_waddr <= 
    r_count_bak_s(5 downto 0) when thisState = b60s0 else
    r_count_bak_s(5 downto 0) when thisState = b60s2 else
    r_count_bak_s(5 downto 0) when thisState = b60s4 else
    r_count_bak_s(5 downto 0) when thisState = b60s5 else
    r_count_bak_s(5 downto 0) when thisState = b60s7 else
    r_count_bak_s(5 downto 0) when thisState = b60s8 else
    r_count_bak_s(5 downto 0) when thisState = b60s10 else
    r_count_bak_s(5 downto 0) when thisState = b60s11 else
    r_count_bak_s(5 downto 0) when thisState = b60s13 else
    (others => 'X');
  p_x_bak_s_raddr <= ni6267148_count_bak_s(5 downto 0);
  p_x_bak_s_re2 <= 
    newState when thisState = b62s0 and s_b62_stage(1) = '1' else
    '0';
  p_x_bak_s_we <= 
    '1' when thisState = b60s0 else
    '1' when thisState = b60s2 else
    '1' when thisState = b60s4 else
    '1' when thisState = b60s5 else
    '1' when thisState = b60s7 else
    '1' when thisState = b60s8 else
    '1' when thisState = b60s10 else
    '1' when thisState = b60s11 else
    '1' when thisState = b60s13 else
    '0';
  p_x_bak_s_din <= 
    r_xoff when thisState = b60s0 else
    r_x when thisState = b60s2 else
    r_x1 when thisState = b60s4 else
    r_x when thisState = b60s5 else
    r_x1 when thisState = b60s7 else
    r_x when thisState = b60s8 else
    r_x1 when thisState = b60s10 else
    r_x when thisState = b60s11 else
    r_x1 when thisState = b60s13 else
    (others => 'X');
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (p_x_bak_s_re2 = '1') then
        r_x_bak_s <= p_x_bak_s_dout;
      end if;
    end if;
  end process;

  p_x_bak_s_imm2 <= 
    p_x_bak_s_dout when newState = '1' else
    r_x_bak_s;
-- "y_bak_s" memory signals
  ram_5: minimax_ex_func_y_bak_s_RAM
    port map (
      rst => reset, 
      clk => clk, 
      we => p_y_bak_s_we, 
      w_addr => p_y_bak_s_waddr, 
      r_addr => p_y_bak_s_raddr, 
      din => p_y_bak_s_din, 
      dout => p_y_bak_s_dout);

  p_y_bak_s_waddr <= 
    r_count_bak_s(5 downto 0) when thisState = b60s0 else
    r_count_bak_s(5 downto 0) when thisState = b60s2 else
    r_count_bak_s(5 downto 0) when thisState = b60s4 else
    r_count_bak_s(5 downto 0) when thisState = b60s5 else
    r_count_bak_s(5 downto 0) when thisState = b60s7 else
    r_count_bak_s(5 downto 0) when thisState = b60s8 else
    r_count_bak_s(5 downto 0) when thisState = b60s10 else
    r_count_bak_s(5 downto 0) when thisState = b60s11 else
    r_count_bak_s(5 downto 0) when thisState = b60s13 else
    (others => 'X');
  p_y_bak_s_raddr <= ni6267148_count_bak_s(5 downto 0);
  p_y_bak_s_re2 <= 
    newState when thisState = b62s0 and s_b62_stage(1) = '1' else
    '0';
  p_y_bak_s_we <= 
    '1' when thisState = b60s0 else
    '1' when thisState = b60s2 else
    '1' when thisState = b60s4 else
    '1' when thisState = b60s5 else
    '1' when thisState = b60s7 else
    '1' when thisState = b60s8 else
    '1' when thisState = b60s10 else
    '1' when thisState = b60s11 else
    '1' when thisState = b60s13 else
    '0';
  p_y_bak_s_din <= 
    r_yoff when thisState = b60s0 else
    r_y when thisState = b60s2 else
    r_y1 when thisState = b60s4 else
    r_y when thisState = b60s5 else
    r_y1 when thisState = b60s7 else
    r_y when thisState = b60s8 else
    r_y1 when thisState = b60s10 else
    r_y when thisState = b60s11 else
    r_y1 when thisState = b60s13 else
    (others => 'X');
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (p_y_bak_s_re2 = '1') then
        r_y_bak_s <= p_y_bak_s_dout;
      end if;
    end if;
  end process;

  p_y_bak_s_imm2 <= 
    p_y_bak_s_dout when newState = '1' else
    r_y_bak_s;
-- "board_bak_s" memory signals
  ram_6: minimax_ex_func_board_bak_s_RAM
    port map (
      rst => reset, 
      clk => clk, 
      we => p_board_bak_s_we, 
      w_addr => p_board_bak_s_waddr, 
      r_addr => p_board_bak_s_raddr, 
      din => p_board_bak_s_din, 
      dout => p_board_bak_s_dout);

  p_board_bak_s_waddr <= 
    r_count_bak_s(5 downto 0) when thisState = b60s1 else
    r_count_bak_s(5 downto 0) when thisState = b60s3 else
    r_count_bak_s(5 downto 0) when thisState = b60s4 else
    r_count_bak_s(5 downto 0) when thisState = b60s6 else
    r_count_bak_s(5 downto 0) when thisState = b60s7 else
    r_count_bak_s(5 downto 0) when thisState = b60s9 else
    r_count_bak_s(5 downto 0) when thisState = b60s10 else
    r_count_bak_s(5 downto 0) when thisState = b60s12 else
    r_count_bak_s(5 downto 0) when thisState = b60s13 else
    (others => 'X');
  p_board_bak_s_raddr <= ni6267148_count_bak_s(5 downto 0);
  p_board_bak_s_re2 <= 
    newState when thisState = b62s0 and s_b62_stage(1) = '1' else
    '0';
  p_board_bak_s_we <= 
    '1' when thisState = b60s1 else
    '1' when thisState = b60s3 else
    '1' when thisState = b60s4 else
    '1' when thisState = b60s6 else
    '1' when thisState = b60s7 else
    '1' when thisState = b60s9 else
    '1' when thisState = b60s10 else
    '1' when thisState = b60s12 else
    '1' when thisState = b60s13 else
    '0';
  p_board_bak_s_din <= 
    ni1683_board when thisState = b60s1 else
    ni3552_board_t when thisState = b60s3 else
    r_board_t1 when thisState = b60s4 else
    ni3564_board_t when thisState = b60s6 else
    r_board_t1 when thisState = b60s7 else
    ni3576_board_t when thisState = b60s9 else
    r_board_t1 when thisState = b60s10 else
    ni3588_board_t when thisState = b60s12 else
    r_board_t1 when thisState = b60s13 else
    (others => 'X');
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (p_board_bak_s_re2 = '1') then
        r_board_bak_s <= p_board_bak_s_dout;
      end if;
    end if;
  end process;

  p_board_bak_s_imm2 <= 
    p_board_bak_s_dout when newState = '1' else
    r_board_bak_s;
-- "x_bak_op" memory signals
  ram_7: minimax_ex_func_x_bak_op_RAM
    port map (
      rst => reset, 
      clk => clk, 
      we => p_x_bak_op_we, 
      w_addr => p_x_bak_op_waddr, 
      r_addr => p_x_bak_op_raddr, 
      din => p_x_bak_op_din, 
      dout => p_x_bak_op_dout);

  p_x_bak_op_waddr <= 
    r_count_bak_op(5 downto 0) when thisState = b19s0 else
    r_count_bak_op(5 downto 0) when thisState = b19s2 else
    r_count_bak_op(5 downto 0) when thisState = b19s4 else
    r_count_bak_op(5 downto 0) when thisState = b19s5 else
    r_count_bak_op(5 downto 0) when thisState = b19s7 else
    r_count_bak_op(5 downto 0) when thisState = b19s8 else
    r_count_bak_op(5 downto 0) when thisState = b19s10 else
    r_count_bak_op(5 downto 0) when thisState = b19s11 else
    r_count_bak_op(5 downto 0) when thisState = b19s13 else
    (others => 'X');
  p_x_bak_op_raddr <= ni6267145_count_bak_op(5 downto 0);
  p_x_bak_op_re2 <= 
    newState when thisState = b57s0 and s_b57_stage(1) = '1' else
    '0';
  p_x_bak_op_we <= 
    '1' when thisState = b19s0 else
    '1' when thisState = b19s2 else
    '1' when thisState = b19s4 else
    '1' when thisState = b19s5 else
    '1' when thisState = b19s7 else
    '1' when thisState = b19s8 else
    '1' when thisState = b19s10 else
    '1' when thisState = b19s11 else
    '1' when thisState = b19s13 else
    '0';
  p_x_bak_op_din <= 
    r_xoff when thisState = b19s0 else
    r_x when thisState = b19s2 else
    r_x1 when thisState = b19s4 else
    r_x when thisState = b19s5 else
    r_x1 when thisState = b19s7 else
    r_x when thisState = b19s8 else
    r_x1 when thisState = b19s10 else
    r_x when thisState = b19s11 else
    r_x1 when thisState = b19s13 else
    (others => 'X');
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (p_x_bak_op_re2 = '1') then
        r_x_bak_op <= p_x_bak_op_dout;
      end if;
    end if;
  end process;

  p_x_bak_op_imm2 <= 
    p_x_bak_op_dout when newState = '1' else
    r_x_bak_op;
-- "y_bak_op" memory signals
  ram_8: minimax_ex_func_y_bak_op_RAM
    port map (
      rst => reset, 
      clk => clk, 
      we => p_y_bak_op_we, 
      w_addr => p_y_bak_op_waddr, 
      r_addr => p_y_bak_op_raddr, 
      din => p_y_bak_op_din, 
      dout => p_y_bak_op_dout);

  p_y_bak_op_waddr <= 
    r_count_bak_op(5 downto 0) when thisState = b19s0 else
    r_count_bak_op(5 downto 0) when thisState = b19s2 else
    r_count_bak_op(5 downto 0) when thisState = b19s4 else
    r_count_bak_op(5 downto 0) when thisState = b19s5 else
    r_count_bak_op(5 downto 0) when thisState = b19s7 else
    r_count_bak_op(5 downto 0) when thisState = b19s8 else
    r_count_bak_op(5 downto 0) when thisState = b19s10 else
    r_count_bak_op(5 downto 0) when thisState = b19s11 else
    r_count_bak_op(5 downto 0) when thisState = b19s13 else
    (others => 'X');
  p_y_bak_op_raddr <= ni6267145_count_bak_op(5 downto 0);
  p_y_bak_op_re2 <= 
    newState when thisState = b57s0 and s_b57_stage(1) = '1' else
    '0';
  p_y_bak_op_we <= 
    '1' when thisState = b19s0 else
    '1' when thisState = b19s2 else
    '1' when thisState = b19s4 else
    '1' when thisState = b19s5 else
    '1' when thisState = b19s7 else
    '1' when thisState = b19s8 else
    '1' when thisState = b19s10 else
    '1' when thisState = b19s11 else
    '1' when thisState = b19s13 else
    '0';
  p_y_bak_op_din <= 
    r_yoff when thisState = b19s0 else
    r_y when thisState = b19s2 else
    r_y1 when thisState = b19s4 else
    r_y when thisState = b19s5 else
    r_y1 when thisState = b19s7 else
    r_y when thisState = b19s8 else
    r_y1 when thisState = b19s10 else
    r_y when thisState = b19s11 else
    r_y1 when thisState = b19s13 else
    (others => 'X');
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (p_y_bak_op_re2 = '1') then
        r_y_bak_op <= p_y_bak_op_dout;
      end if;
    end if;
  end process;

  p_y_bak_op_imm2 <= 
    p_y_bak_op_dout when newState = '1' else
    r_y_bak_op;
-- "board_bak_op" memory signals
  ram_9: minimax_ex_func_board_bak_op_RAM
    port map (
      rst => reset, 
      clk => clk, 
      we => p_board_bak_op_we, 
      w_addr => p_board_bak_op_waddr, 
      r_addr => p_board_bak_op_raddr, 
      din => p_board_bak_op_din, 
      dout => p_board_bak_op_dout);

  p_board_bak_op_waddr <= 
    r_count_bak_op(5 downto 0) when thisState = b19s1 else
    r_count_bak_op(5 downto 0) when thisState = b19s3 else
    r_count_bak_op(5 downto 0) when thisState = b19s4 else
    r_count_bak_op(5 downto 0) when thisState = b19s6 else
    r_count_bak_op(5 downto 0) when thisState = b19s7 else
    r_count_bak_op(5 downto 0) when thisState = b19s9 else
    r_count_bak_op(5 downto 0) when thisState = b19s10 else
    r_count_bak_op(5 downto 0) when thisState = b19s12 else
    r_count_bak_op(5 downto 0) when thisState = b19s13 else
    (others => 'X');
  p_board_bak_op_raddr <= ni6267145_count_bak_op(5 downto 0);
  p_board_bak_op_re2 <= 
    newState when thisState = b57s0 and s_b57_stage(1) = '1' else
    '0';
  p_board_bak_op_we <= 
    '1' when thisState = b19s1 else
    '1' when thisState = b19s3 else
    '1' when thisState = b19s4 else
    '1' when thisState = b19s6 else
    '1' when thisState = b19s7 else
    '1' when thisState = b19s9 else
    '1' when thisState = b19s10 else
    '1' when thisState = b19s12 else
    '1' when thisState = b19s13 else
    '0';
  p_board_bak_op_din <= 
    ni375_board when thisState = b19s1 else
    ni3390_board_t when thisState = b19s3 else
    r_board_t1 when thisState = b19s4 else
    ni3402_board_t when thisState = b19s6 else
    r_board_t1 when thisState = b19s7 else
    ni3414_board_t when thisState = b19s9 else
    r_board_t1 when thisState = b19s10 else
    ni3426_board_t when thisState = b19s12 else
    r_board_t1 when thisState = b19s13 else
    (others => 'X');
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (p_board_bak_op_re2 = '1') then
        r_board_bak_op <= p_board_bak_op_dout;
      end if;
    end if;
  end process;

  p_board_bak_op_imm2 <= 
    p_board_bak_op_dout when newState = '1' else
    r_board_bak_op;
end rtl;
library ieee;
use ieee.std_logic_1164.all;
library altera_mf;
use altera_mf.altera_mf_components.all;

entity eval_func_piece_sizes_RAM is
  port (
    rst,clk : in std_ulogic;
    we : in std_ulogic;
    w_addr : in std_ulogic_vector(4 downto 0);
    r_addr : in std_ulogic_vector(4 downto 0);
    din : in std_ulogic_vector(7 downto 0);
    dout : out std_ulogic_vector(7 downto 0)
  );
end eval_func_piece_sizes_RAM;

architecture sync of eval_func_piece_sizes_RAM is
  signal q_b : std_logic_vector (7 downto 0);
  signal data_a : std_logic_vector (7 downto 0);
  signal address_a : std_logic_vector (4 downto 0);
  signal address_b : std_logic_vector (4 downto 0);
begin
	address_a <= std_logic_vector(w_addr);
	address_b <= std_logic_vector(r_addr);
	data_a <= std_logic_vector(din);
	i0 : altsyncram
	GENERIC MAP (
		operation_mode => "DUAL_PORT",
		width_a => 8,
		widthad_a => 5,
		numwords_a => 21,
		width_b => 8,
		widthad_b => 5,
		numwords_b => 21,
		lpm_type => "altsyncram",
		width_byteena_a => 1,
		outdata_reg_b => "UNREGISTERED",
		indata_aclr_a => "NONE",
		wrcontrol_aclr_a => "NONE",
		address_aclr_a => "NONE",
		address_reg_b => "CLOCK0",
		address_aclr_b => "NONE",
		outdata_aclr_b => "NONE",
		read_during_write_mode_mixed_ports => "DONT_CARE",
		ram_block_type => "AUTO",
		init_file => "eval_func_piece_sizes_RAM.mif",
		intended_device_family => "Stratix"
	)
	PORT MAP (
		wren_a => we,
		clock0 => clk,
		address_a => address_a,
		address_b => address_b,
		data_a => data_a,
		q_b => q_b
	);
	dout <= std_ulogic_vector(q_b);
end sync;

library ieee;
use ieee.std_logic_1164.all;
library altera_mf;
use altera_mf.altera_mf_components.all;

entity eval_func_piece_y_RAM is
  port (
    rst,clk : in std_ulogic;
    we : in std_ulogic;
    w_addr : in std_ulogic_vector(9 downto 0);
    r_addr : in std_ulogic_vector(9 downto 0);
    din : in std_ulogic_vector(7 downto 0);
    dout : out std_ulogic_vector(7 downto 0)
  );
end eval_func_piece_y_RAM;

architecture sync of eval_func_piece_y_RAM is
  signal q_b : std_logic_vector (7 downto 0);
  signal data_a : std_logic_vector (7 downto 0);
  signal address_a : std_logic_vector (9 downto 0);
  signal address_b : std_logic_vector (9 downto 0);
begin
	address_a <= std_logic_vector(w_addr);
	address_b <= std_logic_vector(r_addr);
	data_a <= std_logic_vector(din);
	i0 : altsyncram
	GENERIC MAP (
		operation_mode => "DUAL_PORT",
		width_a => 8,
		widthad_a => 10,
		numwords_a => 672,
		width_b => 8,
		widthad_b => 10,
		numwords_b => 672,
		lpm_type => "altsyncram",
		width_byteena_a => 1,
		outdata_reg_b => "UNREGISTERED",
		indata_aclr_a => "NONE",
		wrcontrol_aclr_a => "NONE",
		address_aclr_a => "NONE",
		address_reg_b => "CLOCK0",
		address_aclr_b => "NONE",
		outdata_aclr_b => "NONE",
		read_during_write_mode_mixed_ports => "DONT_CARE",
		ram_block_type => "AUTO",
		init_file => "eval_func_piece_y_RAM.mif",
		intended_device_family => "Stratix"
	)
	PORT MAP (
		wren_a => we,
		clock0 => clk,
		address_a => address_a,
		address_b => address_b,
		data_a => data_a,
		q_b => q_b
	);
	dout <= std_ulogic_vector(q_b);
end sync;

library ieee;
use ieee.std_logic_1164.all;
library altera_mf;
use altera_mf.altera_mf_components.all;

entity eval_func_piece_x_RAM is
  port (
    rst,clk : in std_ulogic;
    we : in std_ulogic;
    w_addr : in std_ulogic_vector(9 downto 0);
    r_addr : in std_ulogic_vector(9 downto 0);
    din : in std_ulogic_vector(7 downto 0);
    dout : out std_ulogic_vector(7 downto 0)
  );
end eval_func_piece_x_RAM;

architecture sync of eval_func_piece_x_RAM is
  signal q_b : std_logic_vector (7 downto 0);
  signal data_a : std_logic_vector (7 downto 0);
  signal address_a : std_logic_vector (9 downto 0);
  signal address_b : std_logic_vector (9 downto 0);
begin
	address_a <= std_logic_vector(w_addr);
	address_b <= std_logic_vector(r_addr);
	data_a <= std_logic_vector(din);
	i0 : altsyncram
	GENERIC MAP (
		operation_mode => "DUAL_PORT",
		width_a => 8,
		widthad_a => 10,
		numwords_a => 672,
		width_b => 8,
		widthad_b => 10,
		numwords_b => 672,
		lpm_type => "altsyncram",
		width_byteena_a => 1,
		outdata_reg_b => "UNREGISTERED",
		indata_aclr_a => "NONE",
		wrcontrol_aclr_a => "NONE",
		address_aclr_a => "NONE",
		address_reg_b => "CLOCK0",
		address_aclr_b => "NONE",
		outdata_aclr_b => "NONE",
		read_during_write_mode_mixed_ports => "DONT_CARE",
		ram_block_type => "AUTO",
		init_file => "eval_func_piece_x_RAM.mif",
		intended_device_family => "Stratix"
	)
	PORT MAP (
		wren_a => we,
		clock0 => clk,
		address_a => address_a,
		address_b => address_b,
		data_a => data_a,
		q_b => q_b
	);
	dout <= std_ulogic_vector(q_b);
end sync;

library ieee;
use ieee.std_logic_1164.all;
library altera_mf;
use altera_mf.altera_mf_components.all;

entity eval_func_board_RAM is
  port (
    rst,clk : in std_ulogic;
    we : in std_ulogic;
    addr : in std_ulogic_vector(9 downto 0);
    addr2 : in std_ulogic_vector(9 downto 0);
    din : in std_ulogic_vector(7 downto 0);
    we2 : in std_ulogic;
    din2 : in std_ulogic_vector(7 downto 0);
    dout : out std_ulogic_vector(7 downto 0);
    dout2 : out std_ulogic_vector(7 downto 0)
  );
end eval_func_board_RAM;

architecture dualsync of eval_func_board_RAM is
  signal q_a,q_b : std_logic_vector (7 downto 0);
  signal data_a,data_b : std_logic_vector (7 downto 0);
  signal address_a : std_logic_vector (9 downto 0);
  signal address_b : std_logic_vector (9 downto 0);
begin
	address_a <= std_logic_vector(addr);
	address_b <= std_logic_vector(addr2);
	data_a <= std_logic_vector(din);
	data_b <= std_logic_vector(din2);
	i0 : altsyncram
	GENERIC MAP (
		operation_mode => "BIDIR_DUAL_PORT",
		width_a => 8,
		widthad_a => 10,
		numwords_a => 1024,
		width_b => 8,
		widthad_b => 10,
		numwords_b => 1024,
		lpm_type => "altsyncram",
		width_byteena_a => 1,
		address_aclr_a => "NONE",
		address_aclr_b => "NONE",
		address_reg_b => "CLOCK0",
		indata_aclr_a => "NONE",
		indata_aclr_b => "NONE",
          indata_reg_b => "CLOCK0",
		outdata_aclr_a => "NONE",
		outdata_aclr_b => "NONE",
		outdata_reg_a => "UNREGISTERED",
		outdata_reg_b => "UNREGISTERED",
		wrcontrol_aclr_a => "NONE",
		wrcontrol_aclr_b => "NONE",
		wrcontrol_wraddress_reg_b => "CLOCK0",
		read_during_write_mode_mixed_ports => "DONT_CARE",
		ram_block_type => "AUTO",
		init_file => "UNUSED",
		intended_device_family => "Stratix"
	)
	PORT MAP (
		wren_a => we,
		clock0 => clk,
		wren_b => we2,
		address_a => address_a,
		address_b => address_b,
		data_a => data_a,
		data_b => data_b,
		q_a => q_a,
		q_b => q_b
	);
	dout <= std_ulogic_vector(q_a);
	dout2 <= std_ulogic_vector(q_b);
end dualsync;

library ieee;
use ieee.std_logic_1164.all;
library altera_mf;
use altera_mf.altera_mf_components.all;

entity eval_func_x_bak_s_RAM is
  port (
    rst,clk : in std_ulogic;
    we : in std_ulogic;
    w_addr : in std_ulogic_vector(5 downto 0);
    r_addr : in std_ulogic_vector(5 downto 0);
    din : in std_ulogic_vector(7 downto 0);
    dout : out std_ulogic_vector(7 downto 0)
  );
end eval_func_x_bak_s_RAM;

architecture sync of eval_func_x_bak_s_RAM is
  signal q_b : std_logic_vector (7 downto 0);
  signal data_a : std_logic_vector (7 downto 0);
  signal address_a : std_logic_vector (5 downto 0);
  signal address_b : std_logic_vector (5 downto 0);
begin
	address_a <= std_logic_vector(w_addr);
	address_b <= std_logic_vector(r_addr);
	data_a <= std_logic_vector(din);
	i0 : altsyncram
	GENERIC MAP (
		operation_mode => "DUAL_PORT",
		width_a => 8,
		widthad_a => 6,
		numwords_a => 50,
		width_b => 8,
		widthad_b => 6,
		numwords_b => 50,
		lpm_type => "altsyncram",
		width_byteena_a => 1,
		outdata_reg_b => "UNREGISTERED",
		indata_aclr_a => "NONE",
		wrcontrol_aclr_a => "NONE",
		address_aclr_a => "NONE",
		address_reg_b => "CLOCK0",
		address_aclr_b => "NONE",
		outdata_aclr_b => "NONE",
		read_during_write_mode_mixed_ports => "DONT_CARE",
		ram_block_type => "AUTO",
		init_file => "UNUSED",
		intended_device_family => "Stratix"
	)
	PORT MAP (
		wren_a => we,
		clock0 => clk,
		address_a => address_a,
		address_b => address_b,
		data_a => data_a,
		q_b => q_b
	);
	dout <= std_ulogic_vector(q_b);
end sync;

library ieee;
use ieee.std_logic_1164.all;
library altera_mf;
use altera_mf.altera_mf_components.all;

entity eval_func_y_bak_s_RAM is
  port (
    rst,clk : in std_ulogic;
    we : in std_ulogic;
    w_addr : in std_ulogic_vector(5 downto 0);
    r_addr : in std_ulogic_vector(5 downto 0);
    din : in std_ulogic_vector(7 downto 0);
    dout : out std_ulogic_vector(7 downto 0)
  );
end eval_func_y_bak_s_RAM;

architecture sync of eval_func_y_bak_s_RAM is
  signal q_b : std_logic_vector (7 downto 0);
  signal data_a : std_logic_vector (7 downto 0);
  signal address_a : std_logic_vector (5 downto 0);
  signal address_b : std_logic_vector (5 downto 0);
begin
	address_a <= std_logic_vector(w_addr);
	address_b <= std_logic_vector(r_addr);
	data_a <= std_logic_vector(din);
	i0 : altsyncram
	GENERIC MAP (
		operation_mode => "DUAL_PORT",
		width_a => 8,
		widthad_a => 6,
		numwords_a => 50,
		width_b => 8,
		widthad_b => 6,
		numwords_b => 50,
		lpm_type => "altsyncram",
		width_byteena_a => 1,
		outdata_reg_b => "UNREGISTERED",
		indata_aclr_a => "NONE",
		wrcontrol_aclr_a => "NONE",
		address_aclr_a => "NONE",
		address_reg_b => "CLOCK0",
		address_aclr_b => "NONE",
		outdata_aclr_b => "NONE",
		read_during_write_mode_mixed_ports => "DONT_CARE",
		ram_block_type => "AUTO",
		init_file => "UNUSED",
		intended_device_family => "Stratix"
	)
	PORT MAP (
		wren_a => we,
		clock0 => clk,
		address_a => address_a,
		address_b => address_b,
		data_a => data_a,
		q_b => q_b
	);
	dout <= std_ulogic_vector(q_b);
end sync;

library ieee;
use ieee.std_logic_1164.all;
library altera_mf;
use altera_mf.altera_mf_components.all;

entity eval_func_board_bak_s_RAM is
  port (
    rst,clk : in std_ulogic;
    we : in std_ulogic;
    w_addr : in std_ulogic_vector(5 downto 0);
    r_addr : in std_ulogic_vector(5 downto 0);
    din : in std_ulogic_vector(7 downto 0);
    dout : out std_ulogic_vector(7 downto 0)
  );
end eval_func_board_bak_s_RAM;

architecture sync of eval_func_board_bak_s_RAM is
  signal q_b : std_logic_vector (7 downto 0);
  signal data_a : std_logic_vector (7 downto 0);
  signal address_a : std_logic_vector (5 downto 0);
  signal address_b : std_logic_vector (5 downto 0);
begin
	address_a <= std_logic_vector(w_addr);
	address_b <= std_logic_vector(r_addr);
	data_a <= std_logic_vector(din);
	i0 : altsyncram
	GENERIC MAP (
		operation_mode => "DUAL_PORT",
		width_a => 8,
		widthad_a => 6,
		numwords_a => 50,
		width_b => 8,
		widthad_b => 6,
		numwords_b => 50,
		lpm_type => "altsyncram",
		width_byteena_a => 1,
		outdata_reg_b => "UNREGISTERED",
		indata_aclr_a => "NONE",
		wrcontrol_aclr_a => "NONE",
		address_aclr_a => "NONE",
		address_reg_b => "CLOCK0",
		address_aclr_b => "NONE",
		outdata_aclr_b => "NONE",
		read_during_write_mode_mixed_ports => "DONT_CARE",
		ram_block_type => "AUTO",
		init_file => "UNUSED",
		intended_device_family => "Stratix"
	)
	PORT MAP (
		wren_a => we,
		clock0 => clk,
		address_a => address_a,
		address_b => address_b,
		data_a => data_a,
		q_b => q_b
	);
	dout <= std_ulogic_vector(q_b);
end sync;

library ieee;
use ieee.std_logic_1164.all;
library altera_mf;
use altera_mf.altera_mf_components.all;

entity eval_func_x_bak_op_RAM is
  port (
    rst,clk : in std_ulogic;
    we : in std_ulogic;
    w_addr : in std_ulogic_vector(5 downto 0);
    r_addr : in std_ulogic_vector(5 downto 0);
    din : in std_ulogic_vector(7 downto 0);
    dout : out std_ulogic_vector(7 downto 0)
  );
end eval_func_x_bak_op_RAM;

architecture sync of eval_func_x_bak_op_RAM is
  signal q_b : std_logic_vector (7 downto 0);
  signal data_a : std_logic_vector (7 downto 0);
  signal address_a : std_logic_vector (5 downto 0);
  signal address_b : std_logic_vector (5 downto 0);
begin
	address_a <= std_logic_vector(w_addr);
	address_b <= std_logic_vector(r_addr);
	data_a <= std_logic_vector(din);
	i0 : altsyncram
	GENERIC MAP (
		operation_mode => "DUAL_PORT",
		width_a => 8,
		widthad_a => 6,
		numwords_a => 50,
		width_b => 8,
		widthad_b => 6,
		numwords_b => 50,
		lpm_type => "altsyncram",
		width_byteena_a => 1,
		outdata_reg_b => "UNREGISTERED",
		indata_aclr_a => "NONE",
		wrcontrol_aclr_a => "NONE",
		address_aclr_a => "NONE",
		address_reg_b => "CLOCK0",
		address_aclr_b => "NONE",
		outdata_aclr_b => "NONE",
		read_during_write_mode_mixed_ports => "DONT_CARE",
		ram_block_type => "AUTO",
		init_file => "UNUSED",
		intended_device_family => "Stratix"
	)
	PORT MAP (
		wren_a => we,
		clock0 => clk,
		address_a => address_a,
		address_b => address_b,
		data_a => data_a,
		q_b => q_b
	);
	dout <= std_ulogic_vector(q_b);
end sync;

library ieee;
use ieee.std_logic_1164.all;
library altera_mf;
use altera_mf.altera_mf_components.all;

entity eval_func_y_bak_op_RAM is
  port (
    rst,clk : in std_ulogic;
    we : in std_ulogic;
    w_addr : in std_ulogic_vector(5 downto 0);
    r_addr : in std_ulogic_vector(5 downto 0);
    din : in std_ulogic_vector(7 downto 0);
    dout : out std_ulogic_vector(7 downto 0)
  );
end eval_func_y_bak_op_RAM;

architecture sync of eval_func_y_bak_op_RAM is
  signal q_b : std_logic_vector (7 downto 0);
  signal data_a : std_logic_vector (7 downto 0);
  signal address_a : std_logic_vector (5 downto 0);
  signal address_b : std_logic_vector (5 downto 0);
begin
	address_a <= std_logic_vector(w_addr);
	address_b <= std_logic_vector(r_addr);
	data_a <= std_logic_vector(din);
	i0 : altsyncram
	GENERIC MAP (
		operation_mode => "DUAL_PORT",
		width_a => 8,
		widthad_a => 6,
		numwords_a => 50,
		width_b => 8,
		widthad_b => 6,
		numwords_b => 50,
		lpm_type => "altsyncram",
		width_byteena_a => 1,
		outdata_reg_b => "UNREGISTERED",
		indata_aclr_a => "NONE",
		wrcontrol_aclr_a => "NONE",
		address_aclr_a => "NONE",
		address_reg_b => "CLOCK0",
		address_aclr_b => "NONE",
		outdata_aclr_b => "NONE",
		read_during_write_mode_mixed_ports => "DONT_CARE",
		ram_block_type => "AUTO",
		init_file => "UNUSED",
		intended_device_family => "Stratix"
	)
	PORT MAP (
		wren_a => we,
		clock0 => clk,
		address_a => address_a,
		address_b => address_b,
		data_a => data_a,
		q_b => q_b
	);
	dout <= std_ulogic_vector(q_b);
end sync;

library ieee;
use ieee.std_logic_1164.all;
library altera_mf;
use altera_mf.altera_mf_components.all;

entity eval_func_board_bak_op_RAM is
  port (
    rst,clk : in std_ulogic;
    we : in std_ulogic;
    w_addr : in std_ulogic_vector(5 downto 0);
    r_addr : in std_ulogic_vector(5 downto 0);
    din : in std_ulogic_vector(7 downto 0);
    dout : out std_ulogic_vector(7 downto 0)
  );
end eval_func_board_bak_op_RAM;

architecture sync of eval_func_board_bak_op_RAM is
  signal q_b : std_logic_vector (7 downto 0);
  signal data_a : std_logic_vector (7 downto 0);
  signal address_a : std_logic_vector (5 downto 0);
  signal address_b : std_logic_vector (5 downto 0);
begin
	address_a <= std_logic_vector(w_addr);
	address_b <= std_logic_vector(r_addr);
	data_a <= std_logic_vector(din);
	i0 : altsyncram
	GENERIC MAP (
		operation_mode => "DUAL_PORT",
		width_a => 8,
		widthad_a => 6,
		numwords_a => 50,
		width_b => 8,
		widthad_b => 6,
		numwords_b => 50,
		lpm_type => "altsyncram",
		width_byteena_a => 1,
		outdata_reg_b => "UNREGISTERED",
		indata_aclr_a => "NONE",
		wrcontrol_aclr_a => "NONE",
		address_aclr_a => "NONE",
		address_reg_b => "CLOCK0",
		address_aclr_b => "NONE",
		outdata_aclr_b => "NONE",
		read_during_write_mode_mixed_ports => "DONT_CARE",
		ram_block_type => "AUTO",
		init_file => "UNUSED",
		intended_device_family => "Stratix"
	)
	PORT MAP (
		wren_a => we,
		clock0 => clk,
		address_a => address_a,
		address_b => address_b,
		data_a => data_a,
		q_b => q_b
	);
	dout <= std_ulogic_vector(q_b);
end sync;

library ieee;
use ieee.std_logic_1164.all;
library altera_mf;
use altera_mf.altera_mf_components.all;

entity eval_func_x_bak_s2_RAM is
  port (
    rst,clk : in std_ulogic;
    we : in std_ulogic;
    w_addr : in std_ulogic_vector(5 downto 0);
    r_addr : in std_ulogic_vector(5 downto 0);
    din : in std_ulogic_vector(7 downto 0);
    dout : out std_ulogic_vector(7 downto 0)
  );
end eval_func_x_bak_s2_RAM;

architecture sync of eval_func_x_bak_s2_RAM is
  signal q_b : std_logic_vector (7 downto 0);
  signal data_a : std_logic_vector (7 downto 0);
  signal address_a : std_logic_vector (5 downto 0);
  signal address_b : std_logic_vector (5 downto 0);
begin
	address_a <= std_logic_vector(w_addr);
	address_b <= std_logic_vector(r_addr);
	data_a <= std_logic_vector(din);
	i0 : altsyncram
	GENERIC MAP (
		operation_mode => "DUAL_PORT",
		width_a => 8,
		widthad_a => 6,
		numwords_a => 50,
		width_b => 8,
		widthad_b => 6,
		numwords_b => 50,
		lpm_type => "altsyncram",
		width_byteena_a => 1,
		outdata_reg_b => "UNREGISTERED",
		indata_aclr_a => "NONE",
		wrcontrol_aclr_a => "NONE",
		address_aclr_a => "NONE",
		address_reg_b => "CLOCK0",
		address_aclr_b => "NONE",
		outdata_aclr_b => "NONE",
		read_during_write_mode_mixed_ports => "DONT_CARE",
		ram_block_type => "AUTO",
		init_file => "UNUSED",
		intended_device_family => "Stratix"
	)
	PORT MAP (
		wren_a => we,
		clock0 => clk,
		address_a => address_a,
		address_b => address_b,
		data_a => data_a,
		q_b => q_b
	);
	dout <= std_ulogic_vector(q_b);
end sync;

library ieee;
use ieee.std_logic_1164.all;
library altera_mf;
use altera_mf.altera_mf_components.all;

entity eval_func_y_bak_s2_RAM is
  port (
    rst,clk : in std_ulogic;
    we : in std_ulogic;
    w_addr : in std_ulogic_vector(5 downto 0);
    r_addr : in std_ulogic_vector(5 downto 0);
    din : in std_ulogic_vector(7 downto 0);
    dout : out std_ulogic_vector(7 downto 0)
  );
end eval_func_y_bak_s2_RAM;

architecture sync of eval_func_y_bak_s2_RAM is
  signal q_b : std_logic_vector (7 downto 0);
  signal data_a : std_logic_vector (7 downto 0);
  signal address_a : std_logic_vector (5 downto 0);
  signal address_b : std_logic_vector (5 downto 0);
begin
	address_a <= std_logic_vector(w_addr);
	address_b <= std_logic_vector(r_addr);
	data_a <= std_logic_vector(din);
	i0 : altsyncram
	GENERIC MAP (
		operation_mode => "DUAL_PORT",
		width_a => 8,
		widthad_a => 6,
		numwords_a => 50,
		width_b => 8,
		widthad_b => 6,
		numwords_b => 50,
		lpm_type => "altsyncram",
		width_byteena_a => 1,
		outdata_reg_b => "UNREGISTERED",
		indata_aclr_a => "NONE",
		wrcontrol_aclr_a => "NONE",
		address_aclr_a => "NONE",
		address_reg_b => "CLOCK0",
		address_aclr_b => "NONE",
		outdata_aclr_b => "NONE",
		read_during_write_mode_mixed_ports => "DONT_CARE",
		ram_block_type => "AUTO",
		init_file => "UNUSED",
		intended_device_family => "Stratix"
	)
	PORT MAP (
		wren_a => we,
		clock0 => clk,
		address_a => address_a,
		address_b => address_b,
		data_a => data_a,
		q_b => q_b
	);
	dout <= std_ulogic_vector(q_b);
end sync;

library ieee;
use ieee.std_logic_1164.all;
library altera_mf;
use altera_mf.altera_mf_components.all;

entity eval_func_board_bak_s2_RAM is
  port (
    rst,clk : in std_ulogic;
    we : in std_ulogic;
    w_addr : in std_ulogic_vector(5 downto 0);
    r_addr : in std_ulogic_vector(5 downto 0);
    din : in std_ulogic_vector(7 downto 0);
    dout : out std_ulogic_vector(7 downto 0)
  );
end eval_func_board_bak_s2_RAM;

architecture sync of eval_func_board_bak_s2_RAM is
  signal q_b : std_logic_vector (7 downto 0);
  signal data_a : std_logic_vector (7 downto 0);
  signal address_a : std_logic_vector (5 downto 0);
  signal address_b : std_logic_vector (5 downto 0);
begin
	address_a <= std_logic_vector(w_addr);
	address_b <= std_logic_vector(r_addr);
	data_a <= std_logic_vector(din);
	i0 : altsyncram
	GENERIC MAP (
		operation_mode => "DUAL_PORT",
		width_a => 8,
		widthad_a => 6,
		numwords_a => 50,
		width_b => 8,
		widthad_b => 6,
		numwords_b => 50,
		lpm_type => "altsyncram",
		width_byteena_a => 1,
		outdata_reg_b => "UNREGISTERED",
		indata_aclr_a => "NONE",
		wrcontrol_aclr_a => "NONE",
		address_aclr_a => "NONE",
		address_reg_b => "CLOCK0",
		address_aclr_b => "NONE",
		outdata_aclr_b => "NONE",
		read_during_write_mode_mixed_ports => "DONT_CARE",
		ram_block_type => "AUTO",
		init_file => "UNUSED",
		intended_device_family => "Stratix"
	)
	PORT MAP (
		wren_a => we,
		clock0 => clk,
		address_a => address_a,
		address_b => address_b,
		data_a => data_a,
		q_b => q_b
	);
	dout <= std_ulogic_vector(q_b);
end sync;

library ieee;
use ieee.std_logic_1164.all;

use work.components.all;
    
entity eval_func is
  port (signal reset : in std_ulogic;
    signal sclk : in std_ulogic;
    signal clk : in std_ulogic;
    signal p_stream0_move_input_rdy : in std_ulogic;
    signal p_stream0_move_input_en : inout std_ulogic;
    signal p_stream0_move_input_eos : in std_ulogic;
    signal p_stream0_move_input_data : in std_ulogic_vector (31 downto 0);
    signal p_stream0_move_output_rdy : in std_ulogic;
    signal p_stream0_move_output_en : inout std_ulogic;
    signal p_stream0_move_output_eos : out std_ulogic;
    signal p_stream0_move_output_data : out std_ulogic_vector (31 downto 0));
end eval_func;

use work.external_components_hw_blokus_comp_vhd.all;
architecture rtl of eval_func is
  function mkvec(b : in std_ulogic) return std_ulogic_vector is
    variable res : std_ulogic_vector(0 downto 0);
  begin
    res(0):=b;
    return(res);
  end;

  component eval_func_piece_sizes_RAM is
    port (signal rst : in std_ulogic;
      signal clk : in std_ulogic;
      signal we : in std_ulogic;
      signal w_addr : in std_ulogic_vector (4 downto 0);
      signal r_addr : in std_ulogic_vector (4 downto 0);
      signal din : in std_ulogic_vector (7 downto 0);
      signal dout : out std_ulogic_vector (7 downto 0));
  end component;

  component eval_func_piece_y_RAM is
    port (signal rst : in std_ulogic;
      signal clk : in std_ulogic;
      signal we : in std_ulogic;
      signal w_addr : in std_ulogic_vector (9 downto 0);
      signal r_addr : in std_ulogic_vector (9 downto 0);
      signal din : in std_ulogic_vector (7 downto 0);
      signal dout : out std_ulogic_vector (7 downto 0));
  end component;

  component eval_func_piece_x_RAM is
    port (signal rst : in std_ulogic;
      signal clk : in std_ulogic;
      signal we : in std_ulogic;
      signal w_addr : in std_ulogic_vector (9 downto 0);
      signal r_addr : in std_ulogic_vector (9 downto 0);
      signal din : in std_ulogic_vector (7 downto 0);
      signal dout : out std_ulogic_vector (7 downto 0));
  end component;

  component eval_func_board_RAM is
    port (signal rst : in std_ulogic;
      signal clk : in std_ulogic;
      signal we : in std_ulogic;
      signal addr : in std_ulogic_vector (9 downto 0);
      signal addr2 : in std_ulogic_vector (9 downto 0);
      signal din : in std_ulogic_vector (7 downto 0);
      signal we2 : in std_ulogic;
      signal din2 : in std_ulogic_vector (7 downto 0);
      signal dout : out std_ulogic_vector (7 downto 0);
      signal dout2 : out std_ulogic_vector (7 downto 0));
  end component;

  component eval_func_x_bak_s_RAM is
    port (signal rst : in std_ulogic;
      signal clk : in std_ulogic;
      signal we : in std_ulogic;
      signal w_addr : in std_ulogic_vector (5 downto 0);
      signal r_addr : in std_ulogic_vector (5 downto 0);
      signal din : in std_ulogic_vector (7 downto 0);
      signal dout : out std_ulogic_vector (7 downto 0));
  end component;

  component eval_func_y_bak_s_RAM is
    port (signal rst : in std_ulogic;
      signal clk : in std_ulogic;
      signal we : in std_ulogic;
      signal w_addr : in std_ulogic_vector (5 downto 0);
      signal r_addr : in std_ulogic_vector (5 downto 0);
      signal din : in std_ulogic_vector (7 downto 0);
      signal dout : out std_ulogic_vector (7 downto 0));
  end component;

  component eval_func_board_bak_s_RAM is
    port (signal rst : in std_ulogic;
      signal clk : in std_ulogic;
      signal we : in std_ulogic;
      signal w_addr : in std_ulogic_vector (5 downto 0);
      signal r_addr : in std_ulogic_vector (5 downto 0);
      signal din : in std_ulogic_vector (7 downto 0);
      signal dout : out std_ulogic_vector (7 downto 0));
  end component;

  component eval_func_x_bak_op_RAM is
    port (signal rst : in std_ulogic;
      signal clk : in std_ulogic;
      signal we : in std_ulogic;
      signal w_addr : in std_ulogic_vector (5 downto 0);
      signal r_addr : in std_ulogic_vector (5 downto 0);
      signal din : in std_ulogic_vector (7 downto 0);
      signal dout : out std_ulogic_vector (7 downto 0));
  end component;

  component eval_func_y_bak_op_RAM is
    port (signal rst : in std_ulogic;
      signal clk : in std_ulogic;
      signal we : in std_ulogic;
      signal w_addr : in std_ulogic_vector (5 downto 0);
      signal r_addr : in std_ulogic_vector (5 downto 0);
      signal din : in std_ulogic_vector (7 downto 0);
      signal dout : out std_ulogic_vector (7 downto 0));
  end component;

  component eval_func_board_bak_op_RAM is
    port (signal rst : in std_ulogic;
      signal clk : in std_ulogic;
      signal we : in std_ulogic;
      signal w_addr : in std_ulogic_vector (5 downto 0);
      signal r_addr : in std_ulogic_vector (5 downto 0);
      signal din : in std_ulogic_vector (7 downto 0);
      signal dout : out std_ulogic_vector (7 downto 0));
  end component;

  component eval_func_x_bak_s2_RAM is
    port (signal rst : in std_ulogic;
      signal clk : in std_ulogic;
      signal we : in std_ulogic;
      signal w_addr : in std_ulogic_vector (5 downto 0);
      signal r_addr : in std_ulogic_vector (5 downto 0);
      signal din : in std_ulogic_vector (7 downto 0);
      signal dout : out std_ulogic_vector (7 downto 0));
  end component;

  component eval_func_y_bak_s2_RAM is
    port (signal rst : in std_ulogic;
      signal clk : in std_ulogic;
      signal we : in std_ulogic;
      signal w_addr : in std_ulogic_vector (5 downto 0);
      signal r_addr : in std_ulogic_vector (5 downto 0);
      signal din : in std_ulogic_vector (7 downto 0);
      signal dout : out std_ulogic_vector (7 downto 0));
  end component;

  component eval_func_board_bak_s2_RAM is
    port (signal rst : in std_ulogic;
      signal clk : in std_ulogic;
      signal we : in std_ulogic;
      signal w_addr : in std_ulogic_vector (5 downto 0);
      signal r_addr : in std_ulogic_vector (5 downto 0);
      signal din : in std_ulogic_vector (7 downto 0);
      signal dout : out std_ulogic_vector (7 downto 0));
  end component;

  type stateType is (init, b0s0, b1s0, b2s0, b3s0, b4s0, b5s0, b6s0, b7s0, b8s0, b9s0, b10s0, b11s0, b11s1, b12s0, b12s1, b13s0, b14s0, b15s0, b16s0, b16s1, b17s0, b18s0, b19s0, b19s1, b20s0, b20s1, b20s2, b20s3, b20s4, b20s5, b20s6, b20s7, b20s8, b20s9, b20s10, b20s11, b20s12, b20s13, b20s14, b20s15, b20s16, b20s17, b20s18, b20s19, b20s20, b21s0, b22s0, b23s0, b24s0, b25s0, b26s0, b27s0, b28s0, b29s0, b30s0, b31s0, b32s0, b33s0, b34s0, b35s0, b36s0, b37s0, b38s0, b39s0, b40s0, b41s0, b42s0, b43s0, b44s0, b45s0, b46s0, b47s0, b48s0, b49s0, b50s0, b51s0, b52s0, b53s0, b54s0, b55s0, b56s0, b57s0, b58s0, b59s0, b60s0, b61s0, b62s0, b63s0, b64s0, b65s0, b66s0, b67s0, b68s0, b69s0, b70s0, b71s0, b72s0, b73s0, b74s0, b75s0, b76s0, b77s0, b78s0, b79s0, b80s0, b81s0, b82s0, b82s1, b83s0, b83s1, b83s2, b83s3, b83s4, b83s5, b83s6, b83s7, b83s8, b83s9, b83s10, b83s11, b83s12, b83s13, b83s14, b83s15, b84s0, b85s0, b86s0, b87s0, b87s1, b88s0, b88s1, b88s2, b88s3, b88s4, b88s5, b88s6, b88s7, b88s8, b88s9, b88s10, b88s11, b88s12, b88s13, b88s14, b88s15, b89s0, b90s0, b91s0, b92s0, b92s1, b93s0, b93s1, b93s2, b93s3, b93s4, b93s5, b93s6, b93s7, b93s8, b93s9, b93s10, b93s11, b93s12, b93s13, b93s14, b93s15, b94s0, b95s0, b96s0, b97s0, b97s1, b98s0, b98s1, b98s2, b98s3, b98s4, b98s5, b98s6, b98s7, b98s8, b98s9, b98s10, b98s11, b98s12, b98s13, b98s14, b98s15, b99s0, b99s1, b100s0, b100s1, b100s2, b100s3, b100s4, b100s5, b100s6, b100s7, b100s8, b100s9, b100s10, b100s11, b100s12, b100s13, b100s14, b100s15, b101s0, b102s0, b103s0, b104s0, b105s0, b106s0, b107s0, b108s0, b109s0, b110s0, b111s0, b112s0, b112s1, b113s0, b113s1, b114s0, b115s0, b116s0, b117s0, b118s0, finished);
  type pipeStateType is (idle, init, run, flush);
  type t_b85_0 is record
     f_count_bak_s2 : std_ulogic_vector (7 downto 0);
     f_count_bak_s20 : std_ulogic_vector (7 downto 0);
  end record;
  type t_b85_1 is record
     f_count_bak_s2 : std_ulogic_vector (7 downto 0);
     f_r_e_g_3 : std_ulogic_vector (7 downto 0);
     f_r_e_g_0 : std_ulogic_vector (9 downto 0);
  end record;
  type t_b90_0 is record
     f_count_bak_op : std_ulogic_vector (7 downto 0);
     f_count_bak_op0 : std_ulogic_vector (7 downto 0);
  end record;
  type t_b90_1 is record
     f_count_bak_op : std_ulogic_vector (7 downto 0);
     f_r_e_g_3 : std_ulogic_vector (7 downto 0);
     f_r_e_g_0 : std_ulogic_vector (9 downto 0);
  end record;
  type t_b95_0 is record
     f_count_bak_s : std_ulogic_vector (7 downto 0);
     f_count_bak_s0 : std_ulogic_vector (7 downto 0);
  end record;
  type t_b95_1 is record
     f_count_bak_s : std_ulogic_vector (7 downto 0);
     f_r_e_g_3 : std_ulogic_vector (7 downto 0);
     f_r_e_g_0 : std_ulogic_vector (9 downto 0);
  end record;
  signal thisState : stateType;
  signal nextState : stateType;
  signal stateEn : std_ulogic;
  signal newState : std_ulogic;
  signal r_stream0_move_input : std_ulogic_vector (31 downto 0);
  signal r_piece_sizes : std_ulogic_vector (7 downto 0);
  signal ni3369_piece_sizes : std_ulogic_vector (7 downto 0);
  signal ni4002_piece_sizes : std_ulogic_vector (7 downto 0);
  signal ni4629_piece_sizes : std_ulogic_vector (7 downto 0);
  signal ni5258_piece_sizes : std_ulogic_vector (7 downto 0);
  signal ni5617_piece_sizes : std_ulogic_vector (7 downto 0);
  signal p_piece_sizes_waddr : std_ulogic_vector (4 downto 0);
  signal p_piece_sizes_raddr : std_ulogic_vector (4 downto 0);
  signal p_piece_sizes_we : std_ulogic;
  signal p_piece_sizes_din : std_ulogic_vector (7 downto 0);
  signal p_piece_sizes_dout : std_ulogic_vector (7 downto 0);
  signal p_piece_sizes_imm2 : std_ulogic_vector (7 downto 0);
  signal p_piece_sizes_re2 : std_ulogic;
  signal r_piece_y : std_ulogic_vector (7 downto 0);
  signal ni3911_piece_y : std_ulogic_vector (7 downto 0);
  signal ni4544_piece_y : std_ulogic_vector (7 downto 0);
  signal ni5171_piece_y : std_ulogic_vector (7 downto 0);
  signal ni5585_piece_y : std_ulogic_vector (7 downto 0);
  signal ni5944_piece_y : std_ulogic_vector (7 downto 0);
  signal p_piece_y_waddr : std_ulogic_vector (9 downto 0);
  signal p_piece_y_raddr : std_ulogic_vector (9 downto 0);
  signal p_piece_y_we : std_ulogic;
  signal p_piece_y_din : std_ulogic_vector (7 downto 0);
  signal p_piece_y_dout : std_ulogic_vector (7 downto 0);
  signal p_piece_y_imm2 : std_ulogic_vector (7 downto 0);
  signal p_piece_y_re2 : std_ulogic;
  signal r_piece_x : std_ulogic_vector (7 downto 0);
  signal ni3925_piece_x : std_ulogic_vector (7 downto 0);
  signal ni4558_piece_x : std_ulogic_vector (7 downto 0);
  signal ni5185_piece_x : std_ulogic_vector (7 downto 0);
  signal ni5599_piece_x : std_ulogic_vector (7 downto 0);
  signal ni5958_piece_x : std_ulogic_vector (7 downto 0);
  signal p_piece_x_waddr : std_ulogic_vector (9 downto 0);
  signal p_piece_x_raddr : std_ulogic_vector (9 downto 0);
  signal p_piece_x_we : std_ulogic;
  signal p_piece_x_din : std_ulogic_vector (7 downto 0);
  signal p_piece_x_dout : std_ulogic_vector (7 downto 0);
  signal p_piece_x_imm2 : std_ulogic_vector (7 downto 0);
  signal p_piece_x_re2 : std_ulogic;
  signal r_board : std_ulogic_vector (7 downto 0);
  signal ni97_board : std_ulogic_vector (7 downto 0);
  signal ni113_board : std_ulogic_vector (7 downto 0);
  signal ni248_board : std_ulogic_vector (7 downto 0);
  signal ni321_board : std_ulogic_vector (7 downto 0);
  signal ni353_board : std_ulogic_vector (7 downto 0);
  signal ni387_board : std_ulogic_vector (7 downto 0);
  signal ni419_board : std_ulogic_vector (7 downto 0);
  signal ni453_board : std_ulogic_vector (7 downto 0);
  signal ni487_board : std_ulogic_vector (7 downto 0);
  signal ni521_board : std_ulogic_vector (7 downto 0);
  signal ni553_board : std_ulogic_vector (7 downto 0);
  signal ni587_board : std_ulogic_vector (7 downto 0);
  signal ni621_board : std_ulogic_vector (7 downto 0);
  signal ni655_board : std_ulogic_vector (7 downto 0);
  signal ni689_board : std_ulogic_vector (7 downto 0);
  signal ni723_board : std_ulogic_vector (7 downto 0);
  signal ni755_board : std_ulogic_vector (7 downto 0);
  signal ni789_board : std_ulogic_vector (7 downto 0);
  signal ni823_board : std_ulogic_vector (7 downto 0);
  signal ni857_board : std_ulogic_vector (7 downto 0);
  signal ni889_board : std_ulogic_vector (7 downto 0);
  signal ni921_board : std_ulogic_vector (7 downto 0);
  signal ni953_board : std_ulogic_vector (7 downto 0);
  signal ni985_board : std_ulogic_vector (7 downto 0);
  signal ni1017_board : std_ulogic_vector (7 downto 0);
  signal ni1049_board : std_ulogic_vector (7 downto 0);
  signal ni1081_board : std_ulogic_vector (7 downto 0);
  signal ni1113_board : std_ulogic_vector (7 downto 0);
  signal ni1147_board : std_ulogic_vector (7 downto 0);
  signal ni1181_board : std_ulogic_vector (7 downto 0);
  signal ni1215_board : std_ulogic_vector (7 downto 0);
  signal ni1247_board : std_ulogic_vector (7 downto 0);
  signal ni1281_board : std_ulogic_vector (7 downto 0);
  signal ni1315_board : std_ulogic_vector (7 downto 0);
  signal ni1349_board : std_ulogic_vector (7 downto 0);
  signal ni1383_board : std_ulogic_vector (7 downto 0);
  signal ni1417_board : std_ulogic_vector (7 downto 0);
  signal ni1449_board : std_ulogic_vector (7 downto 0);
  signal ni1483_board : std_ulogic_vector (7 downto 0);
  signal ni1517_board : std_ulogic_vector (7 downto 0);
  signal ni1551_board : std_ulogic_vector (7 downto 0);
  signal ni1583_board : std_ulogic_vector (7 downto 0);
  signal ni1617_board : std_ulogic_vector (7 downto 0);
  signal ni3422_board : std_ulogic_vector (7 downto 0);
  signal ni3434_board : std_ulogic_vector (7 downto 0);
  signal ni3467_board : std_ulogic_vector (7 downto 0);
  signal ni3475_board : std_ulogic_vector (7 downto 0);
  signal ni3482_board : std_ulogic_vector (7 downto 0);
  signal ni3498_board : std_ulogic_vector (7 downto 0);
  signal ni3578_board : std_ulogic_vector (7 downto 0);
  signal ni3586_board : std_ulogic_vector (7 downto 0);
  signal ni3593_board : std_ulogic_vector (7 downto 0);
  signal ni3609_board : std_ulogic_vector (7 downto 0);
  signal ni3689_board : std_ulogic_vector (7 downto 0);
  signal ni3697_board : std_ulogic_vector (7 downto 0);
  signal ni3704_board : std_ulogic_vector (7 downto 0);
  signal ni3720_board : std_ulogic_vector (7 downto 0);
  signal ni3800_board : std_ulogic_vector (7 downto 0);
  signal ni3808_board : std_ulogic_vector (7 downto 0);
  signal ni3815_board : std_ulogic_vector (7 downto 0);
  signal ni3831_board : std_ulogic_vector (7 downto 0);
  signal ni3968_board : std_ulogic_vector (7 downto 0);
  signal ni4055_board : std_ulogic_vector (7 downto 0);
  signal ni4067_board : std_ulogic_vector (7 downto 0);
  signal ni4100_board : std_ulogic_vector (7 downto 0);
  signal ni4108_board : std_ulogic_vector (7 downto 0);
  signal ni4115_board : std_ulogic_vector (7 downto 0);
  signal ni4131_board : std_ulogic_vector (7 downto 0);
  signal ni4211_board : std_ulogic_vector (7 downto 0);
  signal ni4219_board : std_ulogic_vector (7 downto 0);
  signal ni4226_board : std_ulogic_vector (7 downto 0);
  signal ni4242_board : std_ulogic_vector (7 downto 0);
  signal ni4322_board : std_ulogic_vector (7 downto 0);
  signal ni4330_board : std_ulogic_vector (7 downto 0);
  signal ni4337_board : std_ulogic_vector (7 downto 0);
  signal ni4353_board : std_ulogic_vector (7 downto 0);
  signal ni4433_board : std_ulogic_vector (7 downto 0);
  signal ni4441_board : std_ulogic_vector (7 downto 0);
  signal ni4448_board : std_ulogic_vector (7 downto 0);
  signal ni4464_board : std_ulogic_vector (7 downto 0);
  signal ni4595_board : std_ulogic_vector (7 downto 0);
  signal ni4682_board : std_ulogic_vector (7 downto 0);
  signal ni4694_board : std_ulogic_vector (7 downto 0);
  signal ni4727_board : std_ulogic_vector (7 downto 0);
  signal ni4735_board : std_ulogic_vector (7 downto 0);
  signal ni4742_board : std_ulogic_vector (7 downto 0);
  signal ni4758_board : std_ulogic_vector (7 downto 0);
  signal ni4838_board : std_ulogic_vector (7 downto 0);
  signal ni4846_board : std_ulogic_vector (7 downto 0);
  signal ni4853_board : std_ulogic_vector (7 downto 0);
  signal ni4869_board : std_ulogic_vector (7 downto 0);
  signal ni4949_board : std_ulogic_vector (7 downto 0);
  signal ni4957_board : std_ulogic_vector (7 downto 0);
  signal ni4964_board : std_ulogic_vector (7 downto 0);
  signal ni4980_board : std_ulogic_vector (7 downto 0);
  signal ni5060_board : std_ulogic_vector (7 downto 0);
  signal ni5068_board : std_ulogic_vector (7 downto 0);
  signal ni5075_board : std_ulogic_vector (7 downto 0);
  signal ni5091_board : std_ulogic_vector (7 downto 0);
  signal ni5228_board : std_ulogic_vector (7 downto 0);
  signal ni5292_board : std_ulogic_vector (7 downto 0);
  signal ni5325_board : std_ulogic_vector (7 downto 0);
  signal ni5333_board : std_ulogic_vector (7 downto 0);
  signal ni5340_board : std_ulogic_vector (7 downto 0);
  signal ni5356_board : std_ulogic_vector (7 downto 0);
  signal ni5390_board : std_ulogic_vector (7 downto 0);
  signal ni5398_board : std_ulogic_vector (7 downto 0);
  signal ni5405_board : std_ulogic_vector (7 downto 0);
  signal ni5421_board : std_ulogic_vector (7 downto 0);
  signal ni5455_board : std_ulogic_vector (7 downto 0);
  signal ni5463_board : std_ulogic_vector (7 downto 0);
  signal ni5470_board : std_ulogic_vector (7 downto 0);
  signal ni5486_board : std_ulogic_vector (7 downto 0);
  signal ni5520_board : std_ulogic_vector (7 downto 0);
  signal ni5528_board : std_ulogic_vector (7 downto 0);
  signal ni5535_board : std_ulogic_vector (7 downto 0);
  signal ni5551_board : std_ulogic_vector (7 downto 0);
  signal ni5651_board : std_ulogic_vector (7 downto 0);
  signal ni5684_board : std_ulogic_vector (7 downto 0);
  signal ni5692_board : std_ulogic_vector (7 downto 0);
  signal ni5699_board : std_ulogic_vector (7 downto 0);
  signal ni5715_board : std_ulogic_vector (7 downto 0);
  signal ni5749_board : std_ulogic_vector (7 downto 0);
  signal ni5757_board : std_ulogic_vector (7 downto 0);
  signal ni5764_board : std_ulogic_vector (7 downto 0);
  signal ni5780_board : std_ulogic_vector (7 downto 0);
  signal ni5814_board : std_ulogic_vector (7 downto 0);
  signal ni5822_board : std_ulogic_vector (7 downto 0);
  signal ni5829_board : std_ulogic_vector (7 downto 0);
  signal ni5845_board : std_ulogic_vector (7 downto 0);
  signal ni5879_board : std_ulogic_vector (7 downto 0);
  signal ni5887_board : std_ulogic_vector (7 downto 0);
  signal ni5894_board : std_ulogic_vector (7 downto 0);
  signal ni5910_board : std_ulogic_vector (7 downto 0);
  signal ni6022_board : std_ulogic_vector (7 downto 0);
  signal ni6038_board : std_ulogic_vector (7 downto 0);
  signal p_board_addr : std_ulogic_vector (9 downto 0);
  signal p_board_addr2 : std_ulogic_vector (9 downto 0);
  signal p_board_we : std_ulogic;
  signal p_board_din : std_ulogic_vector (7 downto 0);
  signal p_board_dout : std_ulogic_vector (7 downto 0);
  signal p_board_imm : std_ulogic_vector (7 downto 0);
  signal p_board_re : std_ulogic;
  signal r2_board : std_ulogic_vector (7 downto 0);
  signal p_board_dout2 : std_ulogic_vector (7 downto 0);
  signal p_board_imm2 : std_ulogic_vector (7 downto 0);
  signal p_board_re2 : std_ulogic;
  signal r_score_self : std_ulogic_vector (7 downto 0);
  signal ni6345_score_self : std_ulogic_vector (7 downto 0);
  signal ni6779_score_self : std_ulogic_vector (7 downto 0);
  signal ni6848_score_self : std_ulogic_vector (7 downto 0);
  signal ni6931_score_self : std_ulogic_vector (7 downto 0);
  signal ni7000_score_self : std_ulogic_vector (7 downto 0);
  signal ni7005_score_self : std_ulogic_vector (7 downto 0);
  signal ni7134_score_self : std_ulogic_vector (7 downto 0);
  signal r_score_opp : std_ulogic_vector (7 downto 0);
  signal ni6346_score_opp : std_ulogic_vector (7 downto 0);
  signal ni6855_score_opp : std_ulogic_vector (7 downto 0);
  signal ni6924_score_opp : std_ulogic_vector (7 downto 0);
  signal ni7059_score_opp : std_ulogic_vector (7 downto 0);
  signal ni7135_score_opp : std_ulogic_vector (7 downto 0);
  signal r_avail_self : std_ulogic_vector (23 downto 0);
  signal ni6343_avail_self : std_ulogic_vector (23 downto 0);
  signal ni6778_avail_self : std_ulogic_vector (23 downto 0);
  signal ni6849_avail_self : std_ulogic_vector (23 downto 0);
  signal ni6930_avail_self : std_ulogic_vector (23 downto 0);
  signal ni7001_avail_self : std_ulogic_vector (23 downto 0);
  signal ni7004_avail_self : std_ulogic_vector (23 downto 0);
  signal ni7132_avail_self : std_ulogic_vector (23 downto 0);
  signal r_avail_opp : std_ulogic_vector (23 downto 0);
  signal ni6344_avail_opp : std_ulogic_vector (23 downto 0);
  signal ni6854_avail_opp : std_ulogic_vector (23 downto 0);
  signal ni6925_avail_opp : std_ulogic_vector (23 downto 0);
  signal ni7058_avail_opp : std_ulogic_vector (23 downto 0);
  signal ni7133_avail_opp : std_ulogic_vector (23 downto 0);
  signal r_x : std_ulogic_vector (7 downto 0);
  signal ni6325_x : std_ulogic_vector (7 downto 0);
  signal ni6339_x : std_ulogic_vector (7 downto 0);
  signal ni6362_x : std_ulogic_vector (7 downto 0);
  signal ni6767_x : std_ulogic_vector (7 downto 0);
  signal ni6788_x : std_ulogic_vector (7 downto 0);
  signal ni6800_x : std_ulogic_vector (7 downto 0);
  signal ni6812_x : std_ulogic_vector (7 downto 0);
  signal ni6824_x : std_ulogic_vector (7 downto 0);
  signal ni6864_x : std_ulogic_vector (7 downto 0);
  signal ni6876_x : std_ulogic_vector (7 downto 0);
  signal ni6888_x : std_ulogic_vector (7 downto 0);
  signal ni6900_x : std_ulogic_vector (7 downto 0);
  signal ni6940_x : std_ulogic_vector (7 downto 0);
  signal ni6952_x : std_ulogic_vector (7 downto 0);
  signal ni6964_x : std_ulogic_vector (7 downto 0);
  signal ni6976_x : std_ulogic_vector (7 downto 0);
  signal ni7011_x : std_ulogic_vector (7 downto 0);
  signal ni7021_x : std_ulogic_vector (7 downto 0);
  signal ni7031_x : std_ulogic_vector (7 downto 0);
  signal ni7041_x : std_ulogic_vector (7 downto 0);
  signal ni7065_x : std_ulogic_vector (7 downto 0);
  signal ni7075_x : std_ulogic_vector (7 downto 0);
  signal ni7085_x : std_ulogic_vector (7 downto 0);
  signal ni7095_x : std_ulogic_vector (7 downto 0);
  signal ni7114_x : std_ulogic_vector (7 downto 0);
  signal ni7128_x : std_ulogic_vector (7 downto 0);
  signal r_y : std_ulogic_vector (7 downto 0);
  signal ni6322_y : std_ulogic_vector (7 downto 0);
  signal ni6341_y : std_ulogic_vector (7 downto 0);
  signal ni6359_y : std_ulogic_vector (7 downto 0);
  signal ni6769_y : std_ulogic_vector (7 downto 0);
  signal ni6787_y : std_ulogic_vector (7 downto 0);
  signal ni6799_y : std_ulogic_vector (7 downto 0);
  signal ni6811_y : std_ulogic_vector (7 downto 0);
  signal ni6823_y : std_ulogic_vector (7 downto 0);
  signal ni6863_y : std_ulogic_vector (7 downto 0);
  signal ni6875_y : std_ulogic_vector (7 downto 0);
  signal ni6887_y : std_ulogic_vector (7 downto 0);
  signal ni6899_y : std_ulogic_vector (7 downto 0);
  signal ni6939_y : std_ulogic_vector (7 downto 0);
  signal ni6951_y : std_ulogic_vector (7 downto 0);
  signal ni6963_y : std_ulogic_vector (7 downto 0);
  signal ni6975_y : std_ulogic_vector (7 downto 0);
  signal ni7010_y : std_ulogic_vector (7 downto 0);
  signal ni7020_y : std_ulogic_vector (7 downto 0);
  signal ni7030_y : std_ulogic_vector (7 downto 0);
  signal ni7040_y : std_ulogic_vector (7 downto 0);
  signal ni7064_y : std_ulogic_vector (7 downto 0);
  signal ni7074_y : std_ulogic_vector (7 downto 0);
  signal ni7084_y : std_ulogic_vector (7 downto 0);
  signal ni7094_y : std_ulogic_vector (7 downto 0);
  signal ni7111_y : std_ulogic_vector (7 downto 0);
  signal ni7130_y : std_ulogic_vector (7 downto 0);
  signal r_xoff : std_ulogic_vector (7 downto 0);
  signal ni6782_xoff : std_ulogic_vector (7 downto 0);
  signal ni6839_xoff : std_ulogic_vector (7 downto 0);
  signal ni6844_xoff : std_ulogic_vector (7 downto 0);
  signal ni6858_xoff : std_ulogic_vector (7 downto 0);
  signal ni6915_xoff : std_ulogic_vector (7 downto 0);
  signal ni6919_xoff : std_ulogic_vector (7 downto 0);
  signal ni6934_xoff : std_ulogic_vector (7 downto 0);
  signal ni6991_xoff : std_ulogic_vector (7 downto 0);
  signal ni6996_xoff : std_ulogic_vector (7 downto 0);
  signal ni7008_xoff : std_ulogic_vector (7 downto 0);
  signal ni7054_xoff : std_ulogic_vector (7 downto 0);
  signal ni7062_xoff : std_ulogic_vector (7 downto 0);
  signal ni7108_xoff : std_ulogic_vector (7 downto 0);
  signal r_yoff : std_ulogic_vector (7 downto 0);
  signal ni6781_yoff : std_ulogic_vector (7 downto 0);
  signal ni6837_yoff : std_ulogic_vector (7 downto 0);
  signal ni6845_yoff : std_ulogic_vector (7 downto 0);
  signal ni6857_yoff : std_ulogic_vector (7 downto 0);
  signal ni6913_yoff : std_ulogic_vector (7 downto 0);
  signal ni6920_yoff : std_ulogic_vector (7 downto 0);
  signal ni6933_yoff : std_ulogic_vector (7 downto 0);
  signal ni6989_yoff : std_ulogic_vector (7 downto 0);
  signal ni6997_yoff : std_ulogic_vector (7 downto 0);
  signal ni7007_yoff : std_ulogic_vector (7 downto 0);
  signal ni7052_yoff : std_ulogic_vector (7 downto 0);
  signal ni7061_yoff : std_ulogic_vector (7 downto 0);
  signal ni7106_yoff : std_ulogic_vector (7 downto 0);
  signal r_board_t : std_ulogic_vector (7 downto 0);
  signal ni6791_board_t : std_ulogic_vector (7 downto 0);
  signal ni6803_board_t : std_ulogic_vector (7 downto 0);
  signal ni6815_board_t : std_ulogic_vector (7 downto 0);
  signal ni6827_board_t : std_ulogic_vector (7 downto 0);
  signal ni6867_board_t : std_ulogic_vector (7 downto 0);
  signal ni6879_board_t : std_ulogic_vector (7 downto 0);
  signal ni6891_board_t : std_ulogic_vector (7 downto 0);
  signal ni6903_board_t : std_ulogic_vector (7 downto 0);
  signal ni6943_board_t : std_ulogic_vector (7 downto 0);
  signal ni6955_board_t : std_ulogic_vector (7 downto 0);
  signal ni6967_board_t : std_ulogic_vector (7 downto 0);
  signal ni6979_board_t : std_ulogic_vector (7 downto 0);
  signal ni7014_board_t : std_ulogic_vector (7 downto 0);
  signal ni7024_board_t : std_ulogic_vector (7 downto 0);
  signal ni7034_board_t : std_ulogic_vector (7 downto 0);
  signal ni7044_board_t : std_ulogic_vector (7 downto 0);
  signal ni7068_board_t : std_ulogic_vector (7 downto 0);
  signal ni7078_board_t : std_ulogic_vector (7 downto 0);
  signal ni7088_board_t : std_ulogic_vector (7 downto 0);
  signal ni7098_board_t : std_ulogic_vector (7 downto 0);
  signal r_size : std_ulogic_vector (7 downto 0);
  signal ni6777_size : std_ulogic_vector (7 downto 0);
  signal ni6780_size : std_ulogic_vector (7 downto 0);
  signal ni6835_size : std_ulogic_vector (7 downto 0);
  signal ni6853_size : std_ulogic_vector (7 downto 0);
  signal ni6856_size : std_ulogic_vector (7 downto 0);
  signal ni6911_size : std_ulogic_vector (7 downto 0);
  signal ni6929_size : std_ulogic_vector (7 downto 0);
  signal ni6932_size : std_ulogic_vector (7 downto 0);
  signal ni6987_size : std_ulogic_vector (7 downto 0);
  signal ni7003_size : std_ulogic_vector (7 downto 0);
  signal ni7006_size : std_ulogic_vector (7 downto 0);
  signal ni7050_size : std_ulogic_vector (7 downto 0);
  signal ni7057_size : std_ulogic_vector (7 downto 0);
  signal ni7060_size : std_ulogic_vector (7 downto 0);
  signal ni7104_size : std_ulogic_vector (7 downto 0);
  signal r_temp : std_ulogic_vector (7 downto 0);
  signal ni6365_temp : std_ulogic_vector (7 downto 0);
  signal ni6372_temp : std_ulogic_vector (7 downto 0);
  signal ni6376_temp : std_ulogic_vector (7 downto 0);
  signal ni6380_temp : std_ulogic_vector (7 downto 0);
  signal ni6384_temp : std_ulogic_vector (7 downto 0);
  signal ni6388_temp : std_ulogic_vector (7 downto 0);
  signal ni6392_temp : std_ulogic_vector (7 downto 0);
  signal ni6396_temp : std_ulogic_vector (7 downto 0);
  signal ni6400_temp : std_ulogic_vector (7 downto 0);
  signal ni6404_temp : std_ulogic_vector (7 downto 0);
  signal ni6408_temp : std_ulogic_vector (7 downto 0);
  signal ni6412_temp : std_ulogic_vector (7 downto 0);
  signal ni6416_temp : std_ulogic_vector (7 downto 0);
  signal ni6420_temp : std_ulogic_vector (7 downto 0);
  signal ni6424_temp : std_ulogic_vector (7 downto 0);
  signal ni6428_temp : std_ulogic_vector (7 downto 0);
  signal ni6432_temp : std_ulogic_vector (7 downto 0);
  signal ni6436_temp : std_ulogic_vector (7 downto 0);
  signal ni6440_temp : std_ulogic_vector (7 downto 0);
  signal ni6444_temp : std_ulogic_vector (7 downto 0);
  signal ni6448_temp : std_ulogic_vector (7 downto 0);
  signal ni6452_temp : std_ulogic_vector (7 downto 0);
  signal ni6456_temp : std_ulogic_vector (7 downto 0);
  signal ni6460_temp : std_ulogic_vector (7 downto 0);
  signal ni6464_temp : std_ulogic_vector (7 downto 0);
  signal ni6468_temp : std_ulogic_vector (7 downto 0);
  signal ni6472_temp : std_ulogic_vector (7 downto 0);
  signal ni6476_temp : std_ulogic_vector (7 downto 0);
  signal ni6480_temp : std_ulogic_vector (7 downto 0);
  signal ni6484_temp : std_ulogic_vector (7 downto 0);
  signal ni6488_temp : std_ulogic_vector (7 downto 0);
  signal ni6492_temp : std_ulogic_vector (7 downto 0);
  signal ni6496_temp : std_ulogic_vector (7 downto 0);
  signal ni6500_temp : std_ulogic_vector (7 downto 0);
  signal ni6504_temp : std_ulogic_vector (7 downto 0);
  signal ni6508_temp : std_ulogic_vector (7 downto 0);
  signal ni6512_temp : std_ulogic_vector (7 downto 0);
  signal ni6516_temp : std_ulogic_vector (7 downto 0);
  signal ni6520_temp : std_ulogic_vector (7 downto 0);
  signal ni6524_temp : std_ulogic_vector (7 downto 0);
  signal ni6528_temp : std_ulogic_vector (7 downto 0);
  signal r_move_type : std_ulogic_vector (7 downto 0);
  signal ni6350_move_type : std_ulogic_vector (7 downto 0);
  signal r_x1 : std_ulogic_vector (7 downto 0);
  signal ni6790_x1 : std_ulogic_vector (7 downto 0);
  signal ni6802_x1 : std_ulogic_vector (7 downto 0);
  signal ni6814_x1 : std_ulogic_vector (7 downto 0);
  signal ni6826_x1 : std_ulogic_vector (7 downto 0);
  signal ni6866_x1 : std_ulogic_vector (7 downto 0);
  signal ni6878_x1 : std_ulogic_vector (7 downto 0);
  signal ni6890_x1 : std_ulogic_vector (7 downto 0);
  signal ni6902_x1 : std_ulogic_vector (7 downto 0);
  signal ni6942_x1 : std_ulogic_vector (7 downto 0);
  signal ni6954_x1 : std_ulogic_vector (7 downto 0);
  signal ni6966_x1 : std_ulogic_vector (7 downto 0);
  signal ni6978_x1 : std_ulogic_vector (7 downto 0);
  signal ni7013_x1 : std_ulogic_vector (7 downto 0);
  signal ni7023_x1 : std_ulogic_vector (7 downto 0);
  signal ni7033_x1 : std_ulogic_vector (7 downto 0);
  signal ni7043_x1 : std_ulogic_vector (7 downto 0);
  signal ni7067_x1 : std_ulogic_vector (7 downto 0);
  signal ni7077_x1 : std_ulogic_vector (7 downto 0);
  signal ni7087_x1 : std_ulogic_vector (7 downto 0);
  signal ni7097_x1 : std_ulogic_vector (7 downto 0);
  signal r_y1 : std_ulogic_vector (7 downto 0);
  signal ni6789_y1 : std_ulogic_vector (7 downto 0);
  signal ni6801_y1 : std_ulogic_vector (7 downto 0);
  signal ni6813_y1 : std_ulogic_vector (7 downto 0);
  signal ni6825_y1 : std_ulogic_vector (7 downto 0);
  signal ni6865_y1 : std_ulogic_vector (7 downto 0);
  signal ni6877_y1 : std_ulogic_vector (7 downto 0);
  signal ni6889_y1 : std_ulogic_vector (7 downto 0);
  signal ni6901_y1 : std_ulogic_vector (7 downto 0);
  signal ni6941_y1 : std_ulogic_vector (7 downto 0);
  signal ni6953_y1 : std_ulogic_vector (7 downto 0);
  signal ni6965_y1 : std_ulogic_vector (7 downto 0);
  signal ni6977_y1 : std_ulogic_vector (7 downto 0);
  signal ni7012_y1 : std_ulogic_vector (7 downto 0);
  signal ni7022_y1 : std_ulogic_vector (7 downto 0);
  signal ni7032_y1 : std_ulogic_vector (7 downto 0);
  signal ni7042_y1 : std_ulogic_vector (7 downto 0);
  signal ni7066_y1 : std_ulogic_vector (7 downto 0);
  signal ni7076_y1 : std_ulogic_vector (7 downto 0);
  signal ni7086_y1 : std_ulogic_vector (7 downto 0);
  signal ni7096_y1 : std_ulogic_vector (7 downto 0);
  signal r_board_t1 : std_ulogic_vector (7 downto 0);
  signal ni6793_board_t1 : std_ulogic_vector (7 downto 0);
  signal ni6805_board_t1 : std_ulogic_vector (7 downto 0);
  signal ni6817_board_t1 : std_ulogic_vector (7 downto 0);
  signal ni6829_board_t1 : std_ulogic_vector (7 downto 0);
  signal ni6869_board_t1 : std_ulogic_vector (7 downto 0);
  signal ni6881_board_t1 : std_ulogic_vector (7 downto 0);
  signal ni6893_board_t1 : std_ulogic_vector (7 downto 0);
  signal ni6905_board_t1 : std_ulogic_vector (7 downto 0);
  signal ni6945_board_t1 : std_ulogic_vector (7 downto 0);
  signal ni6957_board_t1 : std_ulogic_vector (7 downto 0);
  signal ni6969_board_t1 : std_ulogic_vector (7 downto 0);
  signal ni6981_board_t1 : std_ulogic_vector (7 downto 0);
  signal ni7016_board_t1 : std_ulogic_vector (7 downto 0);
  signal ni7026_board_t1 : std_ulogic_vector (7 downto 0);
  signal ni7036_board_t1 : std_ulogic_vector (7 downto 0);
  signal ni7046_board_t1 : std_ulogic_vector (7 downto 0);
  signal ni7070_board_t1 : std_ulogic_vector (7 downto 0);
  signal ni7080_board_t1 : std_ulogic_vector (7 downto 0);
  signal ni7090_board_t1 : std_ulogic_vector (7 downto 0);
  signal ni7100_board_t1 : std_ulogic_vector (7 downto 0);
  signal r_m_x : std_ulogic_vector (7 downto 0);
  signal ni6351_m_x : std_ulogic_vector (7 downto 0);
  signal r_m_y : std_ulogic_vector (7 downto 0);
  signal ni6352_m_y : std_ulogic_vector (7 downto 0);
  signal r_m_piece : std_ulogic_vector (7 downto 0);
  signal ni6353_m_piece : std_ulogic_vector (7 downto 0);
  signal r_m_rotate : std_ulogic_vector (7 downto 0);
  signal ni6354_m_rotate : std_ulogic_vector (7 downto 0);
  signal r_move : std_ulogic_vector (31 downto 0);
  signal ni6349_move : std_ulogic_vector (31 downto 0);
  signal ni6772_move : std_ulogic_vector (31 downto 0);
  signal ni6773_move : std_ulogic_vector (31 downto 0);
  signal r_x_bak_s : std_ulogic_vector (7 downto 0);
  signal ni4665_x_bak_s : std_ulogic_vector (7 downto 0);
  signal ni4774_x_bak_s : std_ulogic_vector (7 downto 0);
  signal ni4797_x_bak_s : std_ulogic_vector (7 downto 0);
  signal ni4885_x_bak_s : std_ulogic_vector (7 downto 0);
  signal ni4908_x_bak_s : std_ulogic_vector (7 downto 0);
  signal ni4996_x_bak_s : std_ulogic_vector (7 downto 0);
  signal ni5019_x_bak_s : std_ulogic_vector (7 downto 0);
  signal ni5107_x_bak_s : std_ulogic_vector (7 downto 0);
  signal ni5130_x_bak_s : std_ulogic_vector (7 downto 0);
  signal ni5217_x_bak_s : std_ulogic_vector (7 downto 0);
  signal p_x_bak_s_waddr : std_ulogic_vector (5 downto 0);
  signal p_x_bak_s_raddr : std_ulogic_vector (5 downto 0);
  signal p_x_bak_s_we : std_ulogic;
  signal p_x_bak_s_din : std_ulogic_vector (7 downto 0);
  signal p_x_bak_s_dout : std_ulogic_vector (7 downto 0);
  signal p_x_bak_s_imm2 : std_ulogic_vector (7 downto 0);
  signal p_x_bak_s_re2 : std_ulogic;
  signal r_y_bak_s : std_ulogic_vector (7 downto 0);
  signal ni4671_y_bak_s : std_ulogic_vector (7 downto 0);
  signal ni4780_y_bak_s : std_ulogic_vector (7 downto 0);
  signal ni4803_y_bak_s : std_ulogic_vector (7 downto 0);
  signal ni4891_y_bak_s : std_ulogic_vector (7 downto 0);
  signal ni4914_y_bak_s : std_ulogic_vector (7 downto 0);
  signal ni5002_y_bak_s : std_ulogic_vector (7 downto 0);
  signal ni5025_y_bak_s : std_ulogic_vector (7 downto 0);
  signal ni5113_y_bak_s : std_ulogic_vector (7 downto 0);
  signal ni5136_y_bak_s : std_ulogic_vector (7 downto 0);
  signal ni5223_y_bak_s : std_ulogic_vector (7 downto 0);
  signal p_y_bak_s_waddr : std_ulogic_vector (5 downto 0);
  signal p_y_bak_s_raddr : std_ulogic_vector (5 downto 0);
  signal p_y_bak_s_we : std_ulogic;
  signal p_y_bak_s_din : std_ulogic_vector (7 downto 0);
  signal p_y_bak_s_dout : std_ulogic_vector (7 downto 0);
  signal p_y_bak_s_imm2 : std_ulogic_vector (7 downto 0);
  signal p_y_bak_s_re2 : std_ulogic;
  signal r_board_bak_s : std_ulogic_vector (7 downto 0);
  signal ni4677_board_bak_s : std_ulogic_vector (7 downto 0);
  signal ni4786_board_bak_s : std_ulogic_vector (7 downto 0);
  signal ni4809_board_bak_s : std_ulogic_vector (7 downto 0);
  signal ni4897_board_bak_s : std_ulogic_vector (7 downto 0);
  signal ni4920_board_bak_s : std_ulogic_vector (7 downto 0);
  signal ni5008_board_bak_s : std_ulogic_vector (7 downto 0);
  signal ni5031_board_bak_s : std_ulogic_vector (7 downto 0);
  signal ni5119_board_bak_s : std_ulogic_vector (7 downto 0);
  signal ni5142_board_bak_s : std_ulogic_vector (7 downto 0);
  signal ni5235_board_bak_s : std_ulogic_vector (7 downto 0);
  signal p_board_bak_s_waddr : std_ulogic_vector (5 downto 0);
  signal p_board_bak_s_raddr : std_ulogic_vector (5 downto 0);
  signal p_board_bak_s_we : std_ulogic;
  signal p_board_bak_s_din : std_ulogic_vector (7 downto 0);
  signal p_board_bak_s_dout : std_ulogic_vector (7 downto 0);
  signal p_board_bak_s_imm2 : std_ulogic_vector (7 downto 0);
  signal p_board_bak_s_re2 : std_ulogic;
  signal r_count_bak_s : std_ulogic_vector (7 downto 0);
  signal ni6935_count_bak_s : std_ulogic_vector (7 downto 0);
  signal ni6937_count_bak_s : std_ulogic_vector (7 downto 0);
  signal ni6949_count_bak_s : std_ulogic_vector (7 downto 0);
  signal ni6950_count_bak_s : std_ulogic_vector (7 downto 0);
  signal ni6961_count_bak_s : std_ulogic_vector (7 downto 0);
  signal ni6962_count_bak_s : std_ulogic_vector (7 downto 0);
  signal ni6973_count_bak_s : std_ulogic_vector (7 downto 0);
  signal ni6974_count_bak_s : std_ulogic_vector (7 downto 0);
  signal ni6985_count_bak_s : std_ulogic_vector (7 downto 0);
  signal ni6986_count_bak_s : std_ulogic_vector (7 downto 0);
  signal ni6994_count_bak_s : std_ulogic_vector (7 downto 0);
  signal ni6666083_count_bak_s : std_ulogic_vector (7 downto 0);
  signal ni6666084_count_bak_s : std_ulogic_vector (7 downto 0);
  signal r_x_bak_op : std_ulogic_vector (7 downto 0);
  signal ni4038_x_bak_op : std_ulogic_vector (7 downto 0);
  signal ni4147_x_bak_op : std_ulogic_vector (7 downto 0);
  signal ni4170_x_bak_op : std_ulogic_vector (7 downto 0);
  signal ni4258_x_bak_op : std_ulogic_vector (7 downto 0);
  signal ni4281_x_bak_op : std_ulogic_vector (7 downto 0);
  signal ni4369_x_bak_op : std_ulogic_vector (7 downto 0);
  signal ni4392_x_bak_op : std_ulogic_vector (7 downto 0);
  signal ni4480_x_bak_op : std_ulogic_vector (7 downto 0);
  signal ni4503_x_bak_op : std_ulogic_vector (7 downto 0);
  signal ni4584_x_bak_op : std_ulogic_vector (7 downto 0);
  signal p_x_bak_op_waddr : std_ulogic_vector (5 downto 0);
  signal p_x_bak_op_raddr : std_ulogic_vector (5 downto 0);
  signal p_x_bak_op_we : std_ulogic;
  signal p_x_bak_op_din : std_ulogic_vector (7 downto 0);
  signal p_x_bak_op_dout : std_ulogic_vector (7 downto 0);
  signal p_x_bak_op_imm2 : std_ulogic_vector (7 downto 0);
  signal p_x_bak_op_re2 : std_ulogic;
  signal r_y_bak_op : std_ulogic_vector (7 downto 0);
  signal ni4044_y_bak_op : std_ulogic_vector (7 downto 0);
  signal ni4153_y_bak_op : std_ulogic_vector (7 downto 0);
  signal ni4176_y_bak_op : std_ulogic_vector (7 downto 0);
  signal ni4264_y_bak_op : std_ulogic_vector (7 downto 0);
  signal ni4287_y_bak_op : std_ulogic_vector (7 downto 0);
  signal ni4375_y_bak_op : std_ulogic_vector (7 downto 0);
  signal ni4398_y_bak_op : std_ulogic_vector (7 downto 0);
  signal ni4486_y_bak_op : std_ulogic_vector (7 downto 0);
  signal ni4509_y_bak_op : std_ulogic_vector (7 downto 0);
  signal ni4590_y_bak_op : std_ulogic_vector (7 downto 0);
  signal p_y_bak_op_waddr : std_ulogic_vector (5 downto 0);
  signal p_y_bak_op_raddr : std_ulogic_vector (5 downto 0);
  signal p_y_bak_op_we : std_ulogic;
  signal p_y_bak_op_din : std_ulogic_vector (7 downto 0);
  signal p_y_bak_op_dout : std_ulogic_vector (7 downto 0);
  signal p_y_bak_op_imm2 : std_ulogic_vector (7 downto 0);
  signal p_y_bak_op_re2 : std_ulogic;
  signal r_board_bak_op : std_ulogic_vector (7 downto 0);
  signal ni4050_board_bak_op : std_ulogic_vector (7 downto 0);
  signal ni4159_board_bak_op : std_ulogic_vector (7 downto 0);
  signal ni4182_board_bak_op : std_ulogic_vector (7 downto 0);
  signal ni4270_board_bak_op : std_ulogic_vector (7 downto 0);
  signal ni4293_board_bak_op : std_ulogic_vector (7 downto 0);
  signal ni4381_board_bak_op : std_ulogic_vector (7 downto 0);
  signal ni4404_board_bak_op : std_ulogic_vector (7 downto 0);
  signal ni4492_board_bak_op : std_ulogic_vector (7 downto 0);
  signal ni4515_board_bak_op : std_ulogic_vector (7 downto 0);
  signal ni4602_board_bak_op : std_ulogic_vector (7 downto 0);
  signal p_board_bak_op_waddr : std_ulogic_vector (5 downto 0);
  signal p_board_bak_op_raddr : std_ulogic_vector (5 downto 0);
  signal p_board_bak_op_we : std_ulogic;
  signal p_board_bak_op_din : std_ulogic_vector (7 downto 0);
  signal p_board_bak_op_dout : std_ulogic_vector (7 downto 0);
  signal p_board_bak_op_imm2 : std_ulogic_vector (7 downto 0);
  signal p_board_bak_op_re2 : std_ulogic;
  signal r_count_bak_op : std_ulogic_vector (7 downto 0);
  signal ni6859_count_bak_op : std_ulogic_vector (7 downto 0);
  signal ni6861_count_bak_op : std_ulogic_vector (7 downto 0);
  signal ni6873_count_bak_op : std_ulogic_vector (7 downto 0);
  signal ni6874_count_bak_op : std_ulogic_vector (7 downto 0);
  signal ni6885_count_bak_op : std_ulogic_vector (7 downto 0);
  signal ni6886_count_bak_op : std_ulogic_vector (7 downto 0);
  signal ni6897_count_bak_op : std_ulogic_vector (7 downto 0);
  signal ni6898_count_bak_op : std_ulogic_vector (7 downto 0);
  signal ni6909_count_bak_op : std_ulogic_vector (7 downto 0);
  signal ni6910_count_bak_op : std_ulogic_vector (7 downto 0);
  signal ni6918_count_bak_op : std_ulogic_vector (7 downto 0);
  signal ni6666080_count_bak_op : std_ulogic_vector (7 downto 0);
  signal ni6666081_count_bak_op : std_ulogic_vector (7 downto 0);
  signal r_x_bak_s2 : std_ulogic_vector (7 downto 0);
  signal ni3405_x_bak_s2 : std_ulogic_vector (7 downto 0);
  signal ni3514_x_bak_s2 : std_ulogic_vector (7 downto 0);
  signal ni3537_x_bak_s2 : std_ulogic_vector (7 downto 0);
  signal ni3625_x_bak_s2 : std_ulogic_vector (7 downto 0);
  signal ni3648_x_bak_s2 : std_ulogic_vector (7 downto 0);
  signal ni3736_x_bak_s2 : std_ulogic_vector (7 downto 0);
  signal ni3759_x_bak_s2 : std_ulogic_vector (7 downto 0);
  signal ni3847_x_bak_s2 : std_ulogic_vector (7 downto 0);
  signal ni3870_x_bak_s2 : std_ulogic_vector (7 downto 0);
  signal ni3957_x_bak_s2 : std_ulogic_vector (7 downto 0);
  signal p_x_bak_s2_waddr : std_ulogic_vector (5 downto 0);
  signal p_x_bak_s2_raddr : std_ulogic_vector (5 downto 0);
  signal p_x_bak_s2_we : std_ulogic;
  signal p_x_bak_s2_din : std_ulogic_vector (7 downto 0);
  signal p_x_bak_s2_dout : std_ulogic_vector (7 downto 0);
  signal p_x_bak_s2_imm2 : std_ulogic_vector (7 downto 0);
  signal p_x_bak_s2_re2 : std_ulogic;
  signal r_y_bak_s2 : std_ulogic_vector (7 downto 0);
  signal ni3411_y_bak_s2 : std_ulogic_vector (7 downto 0);
  signal ni3520_y_bak_s2 : std_ulogic_vector (7 downto 0);
  signal ni3543_y_bak_s2 : std_ulogic_vector (7 downto 0);
  signal ni3631_y_bak_s2 : std_ulogic_vector (7 downto 0);
  signal ni3654_y_bak_s2 : std_ulogic_vector (7 downto 0);
  signal ni3742_y_bak_s2 : std_ulogic_vector (7 downto 0);
  signal ni3765_y_bak_s2 : std_ulogic_vector (7 downto 0);
  signal ni3853_y_bak_s2 : std_ulogic_vector (7 downto 0);
  signal ni3876_y_bak_s2 : std_ulogic_vector (7 downto 0);
  signal ni3963_y_bak_s2 : std_ulogic_vector (7 downto 0);
  signal p_y_bak_s2_waddr : std_ulogic_vector (5 downto 0);
  signal p_y_bak_s2_raddr : std_ulogic_vector (5 downto 0);
  signal p_y_bak_s2_we : std_ulogic;
  signal p_y_bak_s2_din : std_ulogic_vector (7 downto 0);
  signal p_y_bak_s2_dout : std_ulogic_vector (7 downto 0);
  signal p_y_bak_s2_imm2 : std_ulogic_vector (7 downto 0);
  signal p_y_bak_s2_re2 : std_ulogic;
  signal r_board_bak_s2 : std_ulogic_vector (7 downto 0);
  signal ni3417_board_bak_s2 : std_ulogic_vector (7 downto 0);
  signal ni3526_board_bak_s2 : std_ulogic_vector (7 downto 0);
  signal ni3549_board_bak_s2 : std_ulogic_vector (7 downto 0);
  signal ni3637_board_bak_s2 : std_ulogic_vector (7 downto 0);
  signal ni3660_board_bak_s2 : std_ulogic_vector (7 downto 0);
  signal ni3748_board_bak_s2 : std_ulogic_vector (7 downto 0);
  signal ni3771_board_bak_s2 : std_ulogic_vector (7 downto 0);
  signal ni3859_board_bak_s2 : std_ulogic_vector (7 downto 0);
  signal ni3882_board_bak_s2 : std_ulogic_vector (7 downto 0);
  signal ni3975_board_bak_s2 : std_ulogic_vector (7 downto 0);
  signal p_board_bak_s2_waddr : std_ulogic_vector (5 downto 0);
  signal p_board_bak_s2_raddr : std_ulogic_vector (5 downto 0);
  signal p_board_bak_s2_we : std_ulogic;
  signal p_board_bak_s2_din : std_ulogic_vector (7 downto 0);
  signal p_board_bak_s2_dout : std_ulogic_vector (7 downto 0);
  signal p_board_bak_s2_imm2 : std_ulogic_vector (7 downto 0);
  signal p_board_bak_s2_re2 : std_ulogic;
  signal r_count_bak_s2 : std_ulogic_vector (7 downto 0);
  signal ni6783_count_bak_s2 : std_ulogic_vector (7 downto 0);
  signal ni6785_count_bak_s2 : std_ulogic_vector (7 downto 0);
  signal ni6797_count_bak_s2 : std_ulogic_vector (7 downto 0);
  signal ni6798_count_bak_s2 : std_ulogic_vector (7 downto 0);
  signal ni6809_count_bak_s2 : std_ulogic_vector (7 downto 0);
  signal ni6810_count_bak_s2 : std_ulogic_vector (7 downto 0);
  signal ni6821_count_bak_s2 : std_ulogic_vector (7 downto 0);
  signal ni6822_count_bak_s2 : std_ulogic_vector (7 downto 0);
  signal ni6833_count_bak_s2 : std_ulogic_vector (7 downto 0);
  signal ni6834_count_bak_s2 : std_ulogic_vector (7 downto 0);
  signal ni6842_count_bak_s2 : std_ulogic_vector (7 downto 0);
  signal ni6666077_count_bak_s2 : std_ulogic_vector (7 downto 0);
  signal ni6666078_count_bak_s2 : std_ulogic_vector (7 downto 0);
  signal r_score_self_bak : std_ulogic_vector (7 downto 0);
  signal ni6928_score_self_bak : std_ulogic_vector (7 downto 0);
  signal r_score_opp_bak : std_ulogic_vector (7 downto 0);
  signal ni6852_score_opp_bak : std_ulogic_vector (7 downto 0);
  signal r_score_self2_bak : std_ulogic_vector (7 downto 0);
  signal ni6776_score_self2_bak : std_ulogic_vector (7 downto 0);
  signal r_avail_self_bak : std_ulogic_vector (23 downto 0);
  signal ni6927_avail_self_bak : std_ulogic_vector (23 downto 0);
  signal r_avail_opp_bak : std_ulogic_vector (23 downto 0);
  signal ni6851_avail_opp_bak : std_ulogic_vector (23 downto 0);
  signal r_avail_self2_bak : std_ulogic_vector (23 downto 0);
  signal ni6775_avail_self2_bak : std_ulogic_vector (23 downto 0);
  signal r_s_m4_0 : std_ulogic_vector (7 downto 0);
  signal ni6374_s_m4_0 : std_ulogic_vector (7 downto 0);
  signal r_s_m3_m1 : std_ulogic_vector (7 downto 0);
  signal ni6378_s_m3_m1 : std_ulogic_vector (7 downto 0);
  signal r_s_m3_0 : std_ulogic_vector (7 downto 0);
  signal ni6382_s_m3_0 : std_ulogic_vector (7 downto 0);
  signal r_s_m3_1 : std_ulogic_vector (7 downto 0);
  signal ni6386_s_m3_1 : std_ulogic_vector (7 downto 0);
  signal r_s_m2_m2 : std_ulogic_vector (7 downto 0);
  signal ni6390_s_m2_m2 : std_ulogic_vector (7 downto 0);
  signal r_s_m2_m1 : std_ulogic_vector (7 downto 0);
  signal ni6394_s_m2_m1 : std_ulogic_vector (7 downto 0);
  signal r_s_m2_0 : std_ulogic_vector (7 downto 0);
  signal ni6398_s_m2_0 : std_ulogic_vector (7 downto 0);
  signal r_s_m2_1 : std_ulogic_vector (7 downto 0);
  signal ni6402_s_m2_1 : std_ulogic_vector (7 downto 0);
  signal r_s_m2_2 : std_ulogic_vector (7 downto 0);
  signal ni6406_s_m2_2 : std_ulogic_vector (7 downto 0);
  signal r_s_m1_m3 : std_ulogic_vector (7 downto 0);
  signal ni6410_s_m1_m3 : std_ulogic_vector (7 downto 0);
  signal r_s_m1_m2 : std_ulogic_vector (7 downto 0);
  signal ni6414_s_m1_m2 : std_ulogic_vector (7 downto 0);
  signal r_s_m1_m1 : std_ulogic_vector (7 downto 0);
  signal ni6418_s_m1_m1 : std_ulogic_vector (7 downto 0);
  signal r_s_m1_0 : std_ulogic_vector (7 downto 0);
  signal ni6422_s_m1_0 : std_ulogic_vector (7 downto 0);
  signal r_s_m1_1 : std_ulogic_vector (7 downto 0);
  signal ni6426_s_m1_1 : std_ulogic_vector (7 downto 0);
  signal r_s_m1_2 : std_ulogic_vector (7 downto 0);
  signal ni6430_s_m1_2 : std_ulogic_vector (7 downto 0);
  signal r_s_m1_3 : std_ulogic_vector (7 downto 0);
  signal ni6434_s_m1_3 : std_ulogic_vector (7 downto 0);
  signal r_s_0_m4 : std_ulogic_vector (7 downto 0);
  signal ni6438_s_0_m4 : std_ulogic_vector (7 downto 0);
  signal r_s_0_m3 : std_ulogic_vector (7 downto 0);
  signal ni6442_s_0_m3 : std_ulogic_vector (7 downto 0);
  signal r_s_0_m2 : std_ulogic_vector (7 downto 0);
  signal ni6446_s_0_m2 : std_ulogic_vector (7 downto 0);
  signal r_s_0_m1 : std_ulogic_vector (7 downto 0);
  signal ni6450_s_0_m1 : std_ulogic_vector (7 downto 0);
  signal r_s_0_0 : std_ulogic_vector (7 downto 0);
  signal ni6367_s_0_0 : std_ulogic_vector (7 downto 0);
  signal r_s_0_1 : std_ulogic_vector (7 downto 0);
  signal ni6454_s_0_1 : std_ulogic_vector (7 downto 0);
  signal r_s_0_2 : std_ulogic_vector (7 downto 0);
  signal ni6458_s_0_2 : std_ulogic_vector (7 downto 0);
  signal r_s_0_3 : std_ulogic_vector (7 downto 0);
  signal ni6462_s_0_3 : std_ulogic_vector (7 downto 0);
  signal r_s_0_4 : std_ulogic_vector (7 downto 0);
  signal ni6466_s_0_4 : std_ulogic_vector (7 downto 0);
  signal r_s_1_m3 : std_ulogic_vector (7 downto 0);
  signal ni6470_s_1_m3 : std_ulogic_vector (7 downto 0);
  signal r_s_1_m2 : std_ulogic_vector (7 downto 0);
  signal ni6474_s_1_m2 : std_ulogic_vector (7 downto 0);
  signal r_s_1_m1 : std_ulogic_vector (7 downto 0);
  signal ni6478_s_1_m1 : std_ulogic_vector (7 downto 0);
  signal r_s_1_0 : std_ulogic_vector (7 downto 0);
  signal ni6482_s_1_0 : std_ulogic_vector (7 downto 0);
  signal r_s_1_1 : std_ulogic_vector (7 downto 0);
  signal ni6486_s_1_1 : std_ulogic_vector (7 downto 0);
  signal r_s_1_2 : std_ulogic_vector (7 downto 0);
  signal ni6490_s_1_2 : std_ulogic_vector (7 downto 0);
  signal r_s_1_3 : std_ulogic_vector (7 downto 0);
  signal ni6494_s_1_3 : std_ulogic_vector (7 downto 0);
  signal r_s_2_m2 : std_ulogic_vector (7 downto 0);
  signal ni6498_s_2_m2 : std_ulogic_vector (7 downto 0);
  signal r_s_2_m1 : std_ulogic_vector (7 downto 0);
  signal ni6502_s_2_m1 : std_ulogic_vector (7 downto 0);
  signal r_s_2_0 : std_ulogic_vector (7 downto 0);
  signal ni6506_s_2_0 : std_ulogic_vector (7 downto 0);
  signal r_s_2_1 : std_ulogic_vector (7 downto 0);
  signal ni6510_s_2_1 : std_ulogic_vector (7 downto 0);
  signal r_s_2_2 : std_ulogic_vector (7 downto 0);
  signal ni6514_s_2_2 : std_ulogic_vector (7 downto 0);
  signal r_s_3_m1 : std_ulogic_vector (7 downto 0);
  signal ni6518_s_3_m1 : std_ulogic_vector (7 downto 0);
  signal r_s_3_0 : std_ulogic_vector (7 downto 0);
  signal ni6522_s_3_0 : std_ulogic_vector (7 downto 0);
  signal r_s_3_1 : std_ulogic_vector (7 downto 0);
  signal ni6526_s_3_1 : std_ulogic_vector (7 downto 0);
  signal r_s_4_0 : std_ulogic_vector (7 downto 0);
  signal ni6530_s_4_0 : std_ulogic_vector (7 downto 0);
  signal r_o_m4_0 : std_ulogic_vector (7 downto 0);
  signal ni6375_o_m4_0 : std_ulogic_vector (7 downto 0);
  signal r_o_m3_m1 : std_ulogic_vector (7 downto 0);
  signal ni6379_o_m3_m1 : std_ulogic_vector (7 downto 0);
  signal r_o_m3_0 : std_ulogic_vector (7 downto 0);
  signal ni6383_o_m3_0 : std_ulogic_vector (7 downto 0);
  signal r_o_m3_1 : std_ulogic_vector (7 downto 0);
  signal ni6387_o_m3_1 : std_ulogic_vector (7 downto 0);
  signal r_o_m2_m2 : std_ulogic_vector (7 downto 0);
  signal ni6391_o_m2_m2 : std_ulogic_vector (7 downto 0);
  signal r_o_m2_m1 : std_ulogic_vector (7 downto 0);
  signal ni6395_o_m2_m1 : std_ulogic_vector (7 downto 0);
  signal r_o_m2_0 : std_ulogic_vector (7 downto 0);
  signal ni6399_o_m2_0 : std_ulogic_vector (7 downto 0);
  signal r_o_m2_1 : std_ulogic_vector (7 downto 0);
  signal ni6403_o_m2_1 : std_ulogic_vector (7 downto 0);
  signal r_o_m2_2 : std_ulogic_vector (7 downto 0);
  signal ni6407_o_m2_2 : std_ulogic_vector (7 downto 0);
  signal r_o_m1_m3 : std_ulogic_vector (7 downto 0);
  signal ni6411_o_m1_m3 : std_ulogic_vector (7 downto 0);
  signal r_o_m1_m2 : std_ulogic_vector (7 downto 0);
  signal ni6415_o_m1_m2 : std_ulogic_vector (7 downto 0);
  signal r_o_m1_m1 : std_ulogic_vector (7 downto 0);
  signal ni6419_o_m1_m1 : std_ulogic_vector (7 downto 0);
  signal r_o_m1_0 : std_ulogic_vector (7 downto 0);
  signal ni6423_o_m1_0 : std_ulogic_vector (7 downto 0);
  signal r_o_m1_1 : std_ulogic_vector (7 downto 0);
  signal ni6427_o_m1_1 : std_ulogic_vector (7 downto 0);
  signal r_o_m1_2 : std_ulogic_vector (7 downto 0);
  signal ni6431_o_m1_2 : std_ulogic_vector (7 downto 0);
  signal r_o_m1_3 : std_ulogic_vector (7 downto 0);
  signal ni6435_o_m1_3 : std_ulogic_vector (7 downto 0);
  signal r_o_0_m4 : std_ulogic_vector (7 downto 0);
  signal ni6439_o_0_m4 : std_ulogic_vector (7 downto 0);
  signal r_o_0_m3 : std_ulogic_vector (7 downto 0);
  signal ni6443_o_0_m3 : std_ulogic_vector (7 downto 0);
  signal r_o_0_m2 : std_ulogic_vector (7 downto 0);
  signal ni6447_o_0_m2 : std_ulogic_vector (7 downto 0);
  signal r_o_0_m1 : std_ulogic_vector (7 downto 0);
  signal ni6451_o_0_m1 : std_ulogic_vector (7 downto 0);
  signal r_o_0_0 : std_ulogic_vector (7 downto 0);
  signal ni6368_o_0_0 : std_ulogic_vector (7 downto 0);
  signal r_o_0_1 : std_ulogic_vector (7 downto 0);
  signal ni6455_o_0_1 : std_ulogic_vector (7 downto 0);
  signal r_o_0_2 : std_ulogic_vector (7 downto 0);
  signal ni6459_o_0_2 : std_ulogic_vector (7 downto 0);
  signal r_o_0_3 : std_ulogic_vector (7 downto 0);
  signal ni6463_o_0_3 : std_ulogic_vector (7 downto 0);
  signal r_o_0_4 : std_ulogic_vector (7 downto 0);
  signal ni6467_o_0_4 : std_ulogic_vector (7 downto 0);
  signal r_o_1_m3 : std_ulogic_vector (7 downto 0);
  signal ni6471_o_1_m3 : std_ulogic_vector (7 downto 0);
  signal r_o_1_m2 : std_ulogic_vector (7 downto 0);
  signal ni6475_o_1_m2 : std_ulogic_vector (7 downto 0);
  signal r_o_1_m1 : std_ulogic_vector (7 downto 0);
  signal ni6479_o_1_m1 : std_ulogic_vector (7 downto 0);
  signal r_o_1_0 : std_ulogic_vector (7 downto 0);
  signal ni6483_o_1_0 : std_ulogic_vector (7 downto 0);
  signal r_o_1_1 : std_ulogic_vector (7 downto 0);
  signal ni6487_o_1_1 : std_ulogic_vector (7 downto 0);
  signal r_o_1_2 : std_ulogic_vector (7 downto 0);
  signal ni6491_o_1_2 : std_ulogic_vector (7 downto 0);
  signal r_o_1_3 : std_ulogic_vector (7 downto 0);
  signal ni6495_o_1_3 : std_ulogic_vector (7 downto 0);
  signal r_o_2_m2 : std_ulogic_vector (7 downto 0);
  signal ni6499_o_2_m2 : std_ulogic_vector (7 downto 0);
  signal r_o_2_m1 : std_ulogic_vector (7 downto 0);
  signal ni6503_o_2_m1 : std_ulogic_vector (7 downto 0);
  signal r_o_2_0 : std_ulogic_vector (7 downto 0);
  signal ni6507_o_2_0 : std_ulogic_vector (7 downto 0);
  signal r_o_2_1 : std_ulogic_vector (7 downto 0);
  signal ni6511_o_2_1 : std_ulogic_vector (7 downto 0);
  signal r_o_2_2 : std_ulogic_vector (7 downto 0);
  signal ni6515_o_2_2 : std_ulogic_vector (7 downto 0);
  signal r_o_3_m1 : std_ulogic_vector (7 downto 0);
  signal ni6519_o_3_m1 : std_ulogic_vector (7 downto 0);
  signal r_o_3_0 : std_ulogic_vector (7 downto 0);
  signal ni6523_o_3_0 : std_ulogic_vector (7 downto 0);
  signal r_o_3_1 : std_ulogic_vector (7 downto 0);
  signal ni6527_o_3_1 : std_ulogic_vector (7 downto 0);
  signal r_o_4_0 : std_ulogic_vector (7 downto 0);
  signal ni6531_o_4_0 : std_ulogic_vector (7 downto 0);
  signal r_net_lib : std_ulogic_vector (15 downto 0);
  signal ni6358_net_lib : std_ulogic_vector (15 downto 0);
  signal ni6766_net_lib : std_ulogic_vector (15 downto 0);
  signal r_utility : std_ulogic_vector (15 downto 0);
  signal ni6357_utility : std_ulogic_vector (15 downto 0);
  signal ni6771_utility : std_ulogic_vector (15 downto 0);
  signal r_value_self : std_ulogic_vector (15 downto 0);
  signal ni6370_value_self : std_ulogic_vector (15 downto 0);
  signal ni6534_value_self : std_ulogic_vector (15 downto 0);
  signal ni6543_value_self : std_ulogic_vector (15 downto 0);
  signal ni6552_value_self : std_ulogic_vector (15 downto 0);
  signal ni6561_value_self : std_ulogic_vector (15 downto 0);
  signal ni6563_value_self : std_ulogic_vector (15 downto 0);
  signal ni6572_value_self : std_ulogic_vector (15 downto 0);
  signal ni6581_value_self : std_ulogic_vector (15 downto 0);
  signal ni6590_value_self : std_ulogic_vector (15 downto 0);
  signal ni6592_value_self : std_ulogic_vector (15 downto 0);
  signal ni6601_value_self : std_ulogic_vector (15 downto 0);
  signal ni6610_value_self : std_ulogic_vector (15 downto 0);
  signal ni6619_value_self : std_ulogic_vector (15 downto 0);
  signal ni6621_value_self : std_ulogic_vector (15 downto 0);
  signal ni6630_value_self : std_ulogic_vector (15 downto 0);
  signal ni6639_value_self : std_ulogic_vector (15 downto 0);
  signal ni6648_value_self : std_ulogic_vector (15 downto 0);
  signal r_value_opp : std_ulogic_vector (15 downto 0);
  signal ni6371_value_opp : std_ulogic_vector (15 downto 0);
  signal ni6651_value_opp : std_ulogic_vector (15 downto 0);
  signal ni6660_value_opp : std_ulogic_vector (15 downto 0);
  signal ni6669_value_opp : std_ulogic_vector (15 downto 0);
  signal ni6678_value_opp : std_ulogic_vector (15 downto 0);
  signal ni6680_value_opp : std_ulogic_vector (15 downto 0);
  signal ni6689_value_opp : std_ulogic_vector (15 downto 0);
  signal ni6698_value_opp : std_ulogic_vector (15 downto 0);
  signal ni6707_value_opp : std_ulogic_vector (15 downto 0);
  signal ni6709_value_opp : std_ulogic_vector (15 downto 0);
  signal ni6718_value_opp : std_ulogic_vector (15 downto 0);
  signal ni6727_value_opp : std_ulogic_vector (15 downto 0);
  signal ni6736_value_opp : std_ulogic_vector (15 downto 0);
  signal ni6738_value_opp : std_ulogic_vector (15 downto 0);
  signal ni6747_value_opp : std_ulogic_vector (15 downto 0);
  signal ni6756_value_opp : std_ulogic_vector (15 downto 0);
  signal ni6765_value_opp : std_ulogic_vector (15 downto 0);
  signal r_val : std_ulogic_vector (7 downto 0);
  signal ni6536_val : std_ulogic_vector (7 downto 0);
  signal ni6538_val : std_ulogic_vector (7 downto 0);
  signal ni6540_val : std_ulogic_vector (7 downto 0);
  signal ni6542_val : std_ulogic_vector (7 downto 0);
  signal ni6545_val : std_ulogic_vector (7 downto 0);
  signal ni6547_val : std_ulogic_vector (7 downto 0);
  signal ni6549_val : std_ulogic_vector (7 downto 0);
  signal ni6551_val : std_ulogic_vector (7 downto 0);
  signal ni6554_val : std_ulogic_vector (7 downto 0);
  signal ni6556_val : std_ulogic_vector (7 downto 0);
  signal ni6558_val : std_ulogic_vector (7 downto 0);
  signal ni6560_val : std_ulogic_vector (7 downto 0);
  signal ni6565_val : std_ulogic_vector (7 downto 0);
  signal ni6567_val : std_ulogic_vector (7 downto 0);
  signal ni6569_val : std_ulogic_vector (7 downto 0);
  signal ni6571_val : std_ulogic_vector (7 downto 0);
  signal ni6574_val : std_ulogic_vector (7 downto 0);
  signal ni6576_val : std_ulogic_vector (7 downto 0);
  signal ni6578_val : std_ulogic_vector (7 downto 0);
  signal ni6580_val : std_ulogic_vector (7 downto 0);
  signal ni6583_val : std_ulogic_vector (7 downto 0);
  signal ni6585_val : std_ulogic_vector (7 downto 0);
  signal ni6587_val : std_ulogic_vector (7 downto 0);
  signal ni6589_val : std_ulogic_vector (7 downto 0);
  signal ni6594_val : std_ulogic_vector (7 downto 0);
  signal ni6596_val : std_ulogic_vector (7 downto 0);
  signal ni6598_val : std_ulogic_vector (7 downto 0);
  signal ni6600_val : std_ulogic_vector (7 downto 0);
  signal ni6603_val : std_ulogic_vector (7 downto 0);
  signal ni6605_val : std_ulogic_vector (7 downto 0);
  signal ni6607_val : std_ulogic_vector (7 downto 0);
  signal ni6609_val : std_ulogic_vector (7 downto 0);
  signal ni6612_val : std_ulogic_vector (7 downto 0);
  signal ni6614_val : std_ulogic_vector (7 downto 0);
  signal ni6616_val : std_ulogic_vector (7 downto 0);
  signal ni6618_val : std_ulogic_vector (7 downto 0);
  signal ni6623_val : std_ulogic_vector (7 downto 0);
  signal ni6625_val : std_ulogic_vector (7 downto 0);
  signal ni6627_val : std_ulogic_vector (7 downto 0);
  signal ni6629_val : std_ulogic_vector (7 downto 0);
  signal ni6632_val : std_ulogic_vector (7 downto 0);
  signal ni6634_val : std_ulogic_vector (7 downto 0);
  signal ni6636_val : std_ulogic_vector (7 downto 0);
  signal ni6638_val : std_ulogic_vector (7 downto 0);
  signal ni6641_val : std_ulogic_vector (7 downto 0);
  signal ni6643_val : std_ulogic_vector (7 downto 0);
  signal ni6645_val : std_ulogic_vector (7 downto 0);
  signal ni6647_val : std_ulogic_vector (7 downto 0);
  signal ni6653_val : std_ulogic_vector (7 downto 0);
  signal ni6655_val : std_ulogic_vector (7 downto 0);
  signal ni6657_val : std_ulogic_vector (7 downto 0);
  signal ni6659_val : std_ulogic_vector (7 downto 0);
  signal ni6662_val : std_ulogic_vector (7 downto 0);
  signal ni6664_val : std_ulogic_vector (7 downto 0);
  signal ni6666_val : std_ulogic_vector (7 downto 0);
  signal ni6668_val : std_ulogic_vector (7 downto 0);
  signal ni6671_val : std_ulogic_vector (7 downto 0);
  signal ni6673_val : std_ulogic_vector (7 downto 0);
  signal ni6675_val : std_ulogic_vector (7 downto 0);
  signal ni6677_val : std_ulogic_vector (7 downto 0);
  signal ni6682_val : std_ulogic_vector (7 downto 0);
  signal ni6684_val : std_ulogic_vector (7 downto 0);
  signal ni6686_val : std_ulogic_vector (7 downto 0);
  signal ni6688_val : std_ulogic_vector (7 downto 0);
  signal ni6691_val : std_ulogic_vector (7 downto 0);
  signal ni6693_val : std_ulogic_vector (7 downto 0);
  signal ni6695_val : std_ulogic_vector (7 downto 0);
  signal ni6697_val : std_ulogic_vector (7 downto 0);
  signal ni6700_val : std_ulogic_vector (7 downto 0);
  signal ni6702_val : std_ulogic_vector (7 downto 0);
  signal ni6704_val : std_ulogic_vector (7 downto 0);
  signal ni6706_val : std_ulogic_vector (7 downto 0);
  signal ni6711_val : std_ulogic_vector (7 downto 0);
  signal ni6713_val : std_ulogic_vector (7 downto 0);
  signal ni6715_val : std_ulogic_vector (7 downto 0);
  signal ni6717_val : std_ulogic_vector (7 downto 0);
  signal ni6720_val : std_ulogic_vector (7 downto 0);
  signal ni6722_val : std_ulogic_vector (7 downto 0);
  signal ni6724_val : std_ulogic_vector (7 downto 0);
  signal ni6726_val : std_ulogic_vector (7 downto 0);
  signal ni6729_val : std_ulogic_vector (7 downto 0);
  signal ni6731_val : std_ulogic_vector (7 downto 0);
  signal ni6733_val : std_ulogic_vector (7 downto 0);
  signal ni6735_val : std_ulogic_vector (7 downto 0);
  signal ni6740_val : std_ulogic_vector (7 downto 0);
  signal ni6742_val : std_ulogic_vector (7 downto 0);
  signal ni6744_val : std_ulogic_vector (7 downto 0);
  signal ni6746_val : std_ulogic_vector (7 downto 0);
  signal ni6749_val : std_ulogic_vector (7 downto 0);
  signal ni6751_val : std_ulogic_vector (7 downto 0);
  signal ni6753_val : std_ulogic_vector (7 downto 0);
  signal ni6755_val : std_ulogic_vector (7 downto 0);
  signal ni6758_val : std_ulogic_vector (7 downto 0);
  signal ni6760_val : std_ulogic_vector (7 downto 0);
  signal ni6762_val : std_ulogic_vector (7 downto 0);
  signal ni6764_val : std_ulogic_vector (7 downto 0);
  signal r_suif_tmp : std_ulogic_vector (31 downto 0);
  signal ni6342_suif_tmp : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp0 : std_ulogic_vector (31 downto 0);
  signal ni6340_suif_tmp0 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp1 : std_ulogic_vector (31 downto 0);
  signal ni6332_suif_tmp1 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp00 : std_ulogic_vector (31 downto 0);
  signal ni6333_suif_tmp00 : std_ulogic_vector (31 downto 0);
  signal ni6334_suif_tmp00 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp10 : std_ulogic_vector (31 downto 0);
  signal ni6330_suif_tmp10 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp2 : std_ulogic_vector (31 downto 0);
  signal ni6331_suif_tmp2 : std_ulogic_vector (31 downto 0);
  signal ni6335_suif_tmp2 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp3 : std_ulogic_vector (31 downto 0);
  signal ni6328_suif_tmp3 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp4 : std_ulogic_vector (31 downto 0);
  signal ni6329_suif_tmp4 : std_ulogic_vector (31 downto 0);
  signal ni6336_suif_tmp4 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp5 : std_ulogic_vector (31 downto 0);
  signal ni6356_suif_tmp5 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp6 : std_ulogic_vector (31 downto 0);
  signal ni6770_suif_tmp6 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp7 : std_ulogic_vector (31 downto 0);
  signal ni6768_suif_tmp7 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp8 : std_ulogic_vector (31 downto 0);
  signal ni6369_suif_tmp8 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp9 : std_ulogic_vector (31 downto 0);
  signal ni6532_suif_tmp9 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp11 : std_ulogic_vector (31 downto 0);
  signal ni6533_suif_tmp11 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp12 : std_ulogic_vector (31 downto 0);
  signal ni6535_suif_tmp12 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp13 : std_ulogic_vector (31 downto 0);
  signal ni6537_suif_tmp13 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp14 : std_ulogic_vector (31 downto 0);
  signal ni6539_suif_tmp14 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp15 : std_ulogic_vector (31 downto 0);
  signal ni6541_suif_tmp15 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp16 : std_ulogic_vector (31 downto 0);
  signal ni6544_suif_tmp16 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp17 : std_ulogic_vector (31 downto 0);
  signal ni6546_suif_tmp17 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp18 : std_ulogic_vector (31 downto 0);
  signal ni6548_suif_tmp18 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp19 : std_ulogic_vector (31 downto 0);
  signal ni6550_suif_tmp19 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp20 : std_ulogic_vector (31 downto 0);
  signal ni6553_suif_tmp20 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp21 : std_ulogic_vector (31 downto 0);
  signal ni6555_suif_tmp21 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp22 : std_ulogic_vector (31 downto 0);
  signal ni6557_suif_tmp22 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp23 : std_ulogic_vector (31 downto 0);
  signal ni6559_suif_tmp23 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp24 : std_ulogic_vector (31 downto 0);
  signal ni6562_suif_tmp24 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp25 : std_ulogic_vector (31 downto 0);
  signal ni6564_suif_tmp25 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp26 : std_ulogic_vector (31 downto 0);
  signal ni6566_suif_tmp26 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp27 : std_ulogic_vector (31 downto 0);
  signal ni6568_suif_tmp27 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp28 : std_ulogic_vector (31 downto 0);
  signal ni6570_suif_tmp28 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp29 : std_ulogic_vector (31 downto 0);
  signal ni6573_suif_tmp29 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp30 : std_ulogic_vector (31 downto 0);
  signal ni6575_suif_tmp30 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp31 : std_ulogic_vector (31 downto 0);
  signal ni6577_suif_tmp31 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp32 : std_ulogic_vector (31 downto 0);
  signal ni6579_suif_tmp32 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp33 : std_ulogic_vector (31 downto 0);
  signal ni6582_suif_tmp33 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp34 : std_ulogic_vector (31 downto 0);
  signal ni6584_suif_tmp34 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp35 : std_ulogic_vector (31 downto 0);
  signal ni6586_suif_tmp35 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp36 : std_ulogic_vector (31 downto 0);
  signal ni6588_suif_tmp36 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp37 : std_ulogic_vector (31 downto 0);
  signal ni6591_suif_tmp37 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp38 : std_ulogic_vector (31 downto 0);
  signal ni6593_suif_tmp38 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp39 : std_ulogic_vector (31 downto 0);
  signal ni6595_suif_tmp39 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp40 : std_ulogic_vector (31 downto 0);
  signal ni6597_suif_tmp40 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp41 : std_ulogic_vector (31 downto 0);
  signal ni6599_suif_tmp41 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp42 : std_ulogic_vector (31 downto 0);
  signal ni6602_suif_tmp42 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp43 : std_ulogic_vector (31 downto 0);
  signal ni6604_suif_tmp43 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp44 : std_ulogic_vector (31 downto 0);
  signal ni6606_suif_tmp44 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp45 : std_ulogic_vector (31 downto 0);
  signal ni6608_suif_tmp45 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp46 : std_ulogic_vector (31 downto 0);
  signal ni6611_suif_tmp46 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp47 : std_ulogic_vector (31 downto 0);
  signal ni6613_suif_tmp47 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp48 : std_ulogic_vector (31 downto 0);
  signal ni6615_suif_tmp48 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp49 : std_ulogic_vector (31 downto 0);
  signal ni6617_suif_tmp49 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp50 : std_ulogic_vector (31 downto 0);
  signal ni6620_suif_tmp50 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp51 : std_ulogic_vector (31 downto 0);
  signal ni6622_suif_tmp51 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp52 : std_ulogic_vector (31 downto 0);
  signal ni6624_suif_tmp52 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp53 : std_ulogic_vector (31 downto 0);
  signal ni6626_suif_tmp53 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp54 : std_ulogic_vector (31 downto 0);
  signal ni6628_suif_tmp54 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp55 : std_ulogic_vector (31 downto 0);
  signal ni6631_suif_tmp55 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp56 : std_ulogic_vector (31 downto 0);
  signal ni6633_suif_tmp56 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp57 : std_ulogic_vector (31 downto 0);
  signal ni6635_suif_tmp57 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp58 : std_ulogic_vector (31 downto 0);
  signal ni6637_suif_tmp58 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp59 : std_ulogic_vector (31 downto 0);
  signal ni6640_suif_tmp59 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp60 : std_ulogic_vector (31 downto 0);
  signal ni6642_suif_tmp60 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp61 : std_ulogic_vector (31 downto 0);
  signal ni6644_suif_tmp61 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp62 : std_ulogic_vector (31 downto 0);
  signal ni6646_suif_tmp62 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp63 : std_ulogic_vector (31 downto 0);
  signal ni6649_suif_tmp63 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp64 : std_ulogic_vector (31 downto 0);
  signal ni6650_suif_tmp64 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp65 : std_ulogic_vector (31 downto 0);
  signal ni6652_suif_tmp65 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp66 : std_ulogic_vector (31 downto 0);
  signal ni6654_suif_tmp66 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp67 : std_ulogic_vector (31 downto 0);
  signal ni6656_suif_tmp67 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp68 : std_ulogic_vector (31 downto 0);
  signal ni6658_suif_tmp68 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp69 : std_ulogic_vector (31 downto 0);
  signal ni6661_suif_tmp69 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp70 : std_ulogic_vector (31 downto 0);
  signal ni6663_suif_tmp70 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp71 : std_ulogic_vector (31 downto 0);
  signal ni6665_suif_tmp71 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp72 : std_ulogic_vector (31 downto 0);
  signal ni6667_suif_tmp72 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp73 : std_ulogic_vector (31 downto 0);
  signal ni6670_suif_tmp73 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp74 : std_ulogic_vector (31 downto 0);
  signal ni6672_suif_tmp74 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp75 : std_ulogic_vector (31 downto 0);
  signal ni6674_suif_tmp75 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp76 : std_ulogic_vector (31 downto 0);
  signal ni6676_suif_tmp76 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp77 : std_ulogic_vector (31 downto 0);
  signal ni6679_suif_tmp77 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp78 : std_ulogic_vector (31 downto 0);
  signal ni6681_suif_tmp78 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp79 : std_ulogic_vector (31 downto 0);
  signal ni6683_suif_tmp79 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp80 : std_ulogic_vector (31 downto 0);
  signal ni6685_suif_tmp80 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp81 : std_ulogic_vector (31 downto 0);
  signal ni6687_suif_tmp81 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp82 : std_ulogic_vector (31 downto 0);
  signal ni6690_suif_tmp82 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp83 : std_ulogic_vector (31 downto 0);
  signal ni6692_suif_tmp83 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp84 : std_ulogic_vector (31 downto 0);
  signal ni6694_suif_tmp84 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp85 : std_ulogic_vector (31 downto 0);
  signal ni6696_suif_tmp85 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp86 : std_ulogic_vector (31 downto 0);
  signal ni6699_suif_tmp86 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp87 : std_ulogic_vector (31 downto 0);
  signal ni6701_suif_tmp87 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp88 : std_ulogic_vector (31 downto 0);
  signal ni6703_suif_tmp88 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp89 : std_ulogic_vector (31 downto 0);
  signal ni6705_suif_tmp89 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp90 : std_ulogic_vector (31 downto 0);
  signal ni6708_suif_tmp90 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp91 : std_ulogic_vector (31 downto 0);
  signal ni6710_suif_tmp91 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp92 : std_ulogic_vector (31 downto 0);
  signal ni6712_suif_tmp92 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp93 : std_ulogic_vector (31 downto 0);
  signal ni6714_suif_tmp93 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp94 : std_ulogic_vector (31 downto 0);
  signal ni6716_suif_tmp94 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp95 : std_ulogic_vector (31 downto 0);
  signal ni6719_suif_tmp95 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp96 : std_ulogic_vector (31 downto 0);
  signal ni6721_suif_tmp96 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp97 : std_ulogic_vector (31 downto 0);
  signal ni6723_suif_tmp97 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp98 : std_ulogic_vector (31 downto 0);
  signal ni6725_suif_tmp98 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp99 : std_ulogic_vector (31 downto 0);
  signal ni6728_suif_tmp99 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp100 : std_ulogic_vector (31 downto 0);
  signal ni6730_suif_tmp100 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp101 : std_ulogic_vector (31 downto 0);
  signal ni6732_suif_tmp101 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp102 : std_ulogic_vector (31 downto 0);
  signal ni6734_suif_tmp102 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp103 : std_ulogic_vector (31 downto 0);
  signal ni6737_suif_tmp103 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp104 : std_ulogic_vector (31 downto 0);
  signal ni6739_suif_tmp104 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp105 : std_ulogic_vector (31 downto 0);
  signal ni6741_suif_tmp105 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp106 : std_ulogic_vector (31 downto 0);
  signal ni6743_suif_tmp106 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp107 : std_ulogic_vector (31 downto 0);
  signal ni6745_suif_tmp107 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp108 : std_ulogic_vector (31 downto 0);
  signal ni6748_suif_tmp108 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp109 : std_ulogic_vector (31 downto 0);
  signal ni6750_suif_tmp109 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp110 : std_ulogic_vector (31 downto 0);
  signal ni6752_suif_tmp110 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp111 : std_ulogic_vector (31 downto 0);
  signal ni6754_suif_tmp111 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp112 : std_ulogic_vector (31 downto 0);
  signal ni6757_suif_tmp112 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp113 : std_ulogic_vector (31 downto 0);
  signal ni6759_suif_tmp113 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp114 : std_ulogic_vector (31 downto 0);
  signal ni6761_suif_tmp114 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp115 : std_ulogic_vector (31 downto 0);
  signal ni6763_suif_tmp115 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp116 : std_ulogic_vector (31 downto 0);
  signal ni6774_suif_tmp116 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp117 : std_ulogic_vector (31 downto 0);
  signal ni6836_suif_tmp117 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp118 : std_ulogic_vector (31 downto 0);
  signal ni6841_suif_tmp118 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp119 : std_ulogic_vector (31 downto 0);
  signal ni6843_suif_tmp119 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp120 : std_ulogic_vector (31 downto 0);
  signal ni6850_suif_tmp120 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp121 : std_ulogic_vector (31 downto 0);
  signal ni6912_suif_tmp121 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp122 : std_ulogic_vector (31 downto 0);
  signal ni6917_suif_tmp122 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp123 : std_ulogic_vector (31 downto 0);
  signal ni6923_suif_tmp123 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp124 : std_ulogic_vector (31 downto 0);
  signal ni6926_suif_tmp124 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp125 : std_ulogic_vector (31 downto 0);
  signal ni6988_suif_tmp125 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp126 : std_ulogic_vector (31 downto 0);
  signal ni6993_suif_tmp126 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp127 : std_ulogic_vector (31 downto 0);
  signal ni6995_suif_tmp127 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp128 : std_ulogic_vector (31 downto 0);
  signal ni7002_suif_tmp128 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp129 : std_ulogic_vector (31 downto 0);
  signal ni7051_suif_tmp129 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp130 : std_ulogic_vector (31 downto 0);
  signal ni7056_suif_tmp130 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp131 : std_ulogic_vector (31 downto 0);
  signal ni7105_suif_tmp131 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp132 : std_ulogic_vector (31 downto 0);
  signal ni7110_suif_tmp132 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp133 : std_ulogic_vector (31 downto 0);
  signal ni7131_suif_tmp133 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp134 : std_ulogic_vector (31 downto 0);
  signal ni7129_suif_tmp134 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp_0 : std_ulogic_vector (31 downto 0);
  signal ni6355_suif_tmp_0 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp_1 : std_ulogic_vector (31 downto 0);
  signal ni7121_suif_tmp_1 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp0_0 : std_ulogic_vector (31 downto 0);
  signal ni7122_suif_tmp0_0 : std_ulogic_vector (31 downto 0);
  signal ni7123_suif_tmp0_0 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp1_0 : std_ulogic_vector (31 downto 0);
  signal ni7119_suif_tmp1_0 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp2_0 : std_ulogic_vector (31 downto 0);
  signal ni7120_suif_tmp2_0 : std_ulogic_vector (31 downto 0);
  signal ni7124_suif_tmp2_0 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp3_0 : std_ulogic_vector (31 downto 0);
  signal ni7117_suif_tmp3_0 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp4_0 : std_ulogic_vector (31 downto 0);
  signal ni7118_suif_tmp4_0 : std_ulogic_vector (31 downto 0);
  signal ni7125_suif_tmp4_0 : std_ulogic_vector (31 downto 0);
  signal r_switched : std_ulogic_vector (0 downto 0);
  signal ni6666055_switched : std_ulogic_vector (0 downto 0);
  signal r_count_bak_s20 : std_ulogic_vector (7 downto 0);
  signal ni6666076_count_bak_s20 : std_ulogic_vector (7 downto 0);
  signal ni6847_count_bak_s20 : std_ulogic_vector (7 downto 0);
  signal r_count_bak_op0 : std_ulogic_vector (7 downto 0);
  signal ni6666079_count_bak_op0 : std_ulogic_vector (7 downto 0);
  signal ni6922_count_bak_op0 : std_ulogic_vector (7 downto 0);
  signal r_count_bak_s0 : std_ulogic_vector (7 downto 0);
  signal ni6666082_count_bak_s0 : std_ulogic_vector (7 downto 0);
  signal ni6999_count_bak_s0 : std_ulogic_vector (7 downto 0);
  signal r_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni6337_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni6338_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni6366_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni6373_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni6381_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni6389_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni6397_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni6405_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni6413_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni6421_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni6429_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni6437_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni6445_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni6453_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni6461_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni6469_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni6477_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni6485_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni6493_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni6501_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni6509_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni6517_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni6525_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni6784_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni6792_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni6796_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni6804_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni6808_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni6816_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni6820_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni6828_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni6832_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni6838_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni6846_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni6860_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni6868_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni6872_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni6880_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni6884_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni6892_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni6896_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni6904_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni6908_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni6914_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni6921_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni6936_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni6944_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni6948_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni6956_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni6960_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni6968_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni6972_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni6980_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni6984_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni6990_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni6998_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni7009_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni7015_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni7019_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni7025_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni7029_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni7035_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni7039_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni7045_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni7049_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni7053_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni7063_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni7069_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni7073_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni7079_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni7083_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni7089_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni7093_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni7099_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni7103_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni7107_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni7126_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal ni7127_r_e_g_0 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni6377_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni6385_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni6393_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni6401_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni6409_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni6417_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni6425_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni6433_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni6441_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni6449_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni6457_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni6465_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni6473_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni6481_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni6489_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni6497_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni6505_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni6513_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni6521_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni6529_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni6786_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni6794_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni6806_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni6818_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni6830_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni6840_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni6862_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni6870_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni6882_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni6894_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni6906_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni6916_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni6938_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni6946_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni6958_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni6970_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni6982_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni6992_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni6665887_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni7017_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni7027_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni7037_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni7047_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni7055_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni6665969_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni7071_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni7081_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni7091_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni7101_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal ni7109_r_e_g_1 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni6795_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni6807_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni6819_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni6831_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni6871_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni6883_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni6895_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni6907_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni6947_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni6959_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni6971_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni6983_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni6665890_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni7018_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni7028_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni7038_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni7048_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni6665972_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni7072_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni7082_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni7092_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal ni7102_r_e_g_2 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_3 : std_ulogic_vector (7 downto 0);
  signal ni3975_r_e_g_3 : std_ulogic_vector (7 downto 0);
  signal ni4602_r_e_g_3 : std_ulogic_vector (7 downto 0);
  signal ni5235_r_e_g_3 : std_ulogic_vector (7 downto 0);
  signal r_r_e_g_4 : std_ulogic_vector (9 downto 0);
  signal ni6665891_r_e_g_4 : std_ulogic_vector (9 downto 0);
  signal ni6665973_r_e_g_4 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_5 : std_ulogic_vector (9 downto 0);
  signal ni6665894_r_e_g_5 : std_ulogic_vector (9 downto 0);
  signal ni6665976_r_e_g_5 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_6 : std_ulogic_vector (9 downto 0);
  signal ni6665895_r_e_g_6 : std_ulogic_vector (9 downto 0);
  signal ni6665977_r_e_g_6 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_7 : std_ulogic_vector (9 downto 0);
  signal ni6665898_r_e_g_7 : std_ulogic_vector (9 downto 0);
  signal ni6665980_r_e_g_7 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_8 : std_ulogic_vector (9 downto 0);
  signal ni6665899_r_e_g_8 : std_ulogic_vector (9 downto 0);
  signal ni6665981_r_e_g_8 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_9 : std_ulogic_vector (9 downto 0);
  signal ni6665902_r_e_g_9 : std_ulogic_vector (9 downto 0);
  signal ni6665984_r_e_g_9 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_10 : std_ulogic_vector (9 downto 0);
  signal ni6665903_r_e_g_10 : std_ulogic_vector (9 downto 0);
  signal ni6665985_r_e_g_10 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_11 : std_ulogic_vector (9 downto 0);
  signal ni6665906_r_e_g_11 : std_ulogic_vector (9 downto 0);
  signal ni6665988_r_e_g_11 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_12 : std_ulogic_vector (9 downto 0);
  signal ni6665907_r_e_g_12 : std_ulogic_vector (9 downto 0);
  signal ni6665989_r_e_g_12 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_13 : std_ulogic_vector (9 downto 0);
  signal ni6665910_r_e_g_13 : std_ulogic_vector (9 downto 0);
  signal ni6665992_r_e_g_13 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_14 : std_ulogic_vector (9 downto 0);
  signal ni6665911_r_e_g_14 : std_ulogic_vector (9 downto 0);
  signal ni6665993_r_e_g_14 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_15 : std_ulogic_vector (9 downto 0);
  signal ni6665914_r_e_g_15 : std_ulogic_vector (9 downto 0);
  signal ni6665996_r_e_g_15 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_16 : std_ulogic_vector (9 downto 0);
  signal ni6665915_r_e_g_16 : std_ulogic_vector (9 downto 0);
  signal ni6665997_r_e_g_16 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_17 : std_ulogic_vector (9 downto 0);
  signal ni6665918_r_e_g_17 : std_ulogic_vector (9 downto 0);
  signal ni6666000_r_e_g_17 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_18 : std_ulogic_vector (9 downto 0);
  signal ni6665919_r_e_g_18 : std_ulogic_vector (9 downto 0);
  signal ni6666001_r_e_g_18 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_19 : std_ulogic_vector (9 downto 0);
  signal ni6665922_r_e_g_19 : std_ulogic_vector (9 downto 0);
  signal ni6666004_r_e_g_19 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_20 : std_ulogic_vector (9 downto 0);
  signal ni6665923_r_e_g_20 : std_ulogic_vector (9 downto 0);
  signal ni6666005_r_e_g_20 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_21 : std_ulogic_vector (9 downto 0);
  signal ni6665926_r_e_g_21 : std_ulogic_vector (9 downto 0);
  signal ni6666008_r_e_g_21 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_22 : std_ulogic_vector (9 downto 0);
  signal ni6665927_r_e_g_22 : std_ulogic_vector (9 downto 0);
  signal ni6666009_r_e_g_22 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_23 : std_ulogic_vector (9 downto 0);
  signal ni6665930_r_e_g_23 : std_ulogic_vector (9 downto 0);
  signal ni6666012_r_e_g_23 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_24 : std_ulogic_vector (9 downto 0);
  signal ni6665931_r_e_g_24 : std_ulogic_vector (9 downto 0);
  signal ni6666013_r_e_g_24 : std_ulogic_vector (9 downto 0);
  signal r_r_e_g_25 : std_ulogic_vector (9 downto 0);
  signal ni6665934_r_e_g_25 : std_ulogic_vector (9 downto 0);
  signal ni6666016_r_e_g_25 : std_ulogic_vector (9 downto 0);
  signal ti5617_piece_sizes : std_ulogic_vector (4 downto 0);
  signal ti5258_piece_sizes : std_ulogic_vector (4 downto 0);
  signal ti5235_board_bak_s : std_ulogic_vector (5 downto 0);
  signal ti5223_y_bak_s : std_ulogic_vector (5 downto 0);
  signal ti5217_x_bak_s : std_ulogic_vector (5 downto 0);
  signal t_152 : std_ulogic_vector (5 downto 0);
  signal t_151 : std_ulogic_vector (5 downto 0);
  signal t_150 : std_ulogic_vector (5 downto 0);
  signal t_149 : std_ulogic_vector (5 downto 0);
  signal t_148 : std_ulogic_vector (5 downto 0);
  signal t_147 : std_ulogic_vector (5 downto 0);
  signal t_146 : std_ulogic_vector (5 downto 0);
  signal t_145 : std_ulogic_vector (5 downto 0);
  signal t_144 : std_ulogic_vector (5 downto 0);
  signal t_143 : std_ulogic_vector (5 downto 0);
  signal t_142 : std_ulogic_vector (5 downto 0);
  signal t_141 : std_ulogic_vector (5 downto 0);
  signal t_140 : std_ulogic_vector (5 downto 0);
  signal t_139 : std_ulogic_vector (5 downto 0);
  signal t_138 : std_ulogic_vector (5 downto 0);
  signal t_137 : std_ulogic_vector (5 downto 0);
  signal t_136 : std_ulogic_vector (5 downto 0);
  signal t_135 : std_ulogic_vector (5 downto 0);
  signal t_134 : std_ulogic_vector (5 downto 0);
  signal t_133 : std_ulogic_vector (5 downto 0);
  signal t_132 : std_ulogic_vector (5 downto 0);
  signal t_131 : std_ulogic_vector (5 downto 0);
  signal t_130 : std_ulogic_vector (5 downto 0);
  signal t_129 : std_ulogic_vector (5 downto 0);
  signal t_128 : std_ulogic_vector (5 downto 0);
  signal t_127 : std_ulogic_vector (5 downto 0);
  signal t_126 : std_ulogic_vector (5 downto 0);
  signal ti4629_piece_sizes : std_ulogic_vector (4 downto 0);
  signal ti4602_board_bak_op : std_ulogic_vector (5 downto 0);
  signal ti4590_y_bak_op : std_ulogic_vector (5 downto 0);
  signal ti4584_x_bak_op : std_ulogic_vector (5 downto 0);
  signal t_125 : std_ulogic_vector (5 downto 0);
  signal t_124 : std_ulogic_vector (5 downto 0);
  signal t_123 : std_ulogic_vector (5 downto 0);
  signal t_122 : std_ulogic_vector (5 downto 0);
  signal t_121 : std_ulogic_vector (5 downto 0);
  signal t_120 : std_ulogic_vector (5 downto 0);
  signal t_119 : std_ulogic_vector (5 downto 0);
  signal t_118 : std_ulogic_vector (5 downto 0);
  signal t_117 : std_ulogic_vector (5 downto 0);
  signal t_116 : std_ulogic_vector (5 downto 0);
  signal t_115 : std_ulogic_vector (5 downto 0);
  signal t_114 : std_ulogic_vector (5 downto 0);
  signal t_113 : std_ulogic_vector (5 downto 0);
  signal t_112 : std_ulogic_vector (5 downto 0);
  signal t_111 : std_ulogic_vector (5 downto 0);
  signal t_110 : std_ulogic_vector (5 downto 0);
  signal t_109 : std_ulogic_vector (5 downto 0);
  signal t_108 : std_ulogic_vector (5 downto 0);
  signal t_107 : std_ulogic_vector (5 downto 0);
  signal t_106 : std_ulogic_vector (5 downto 0);
  signal t_105 : std_ulogic_vector (5 downto 0);
  signal t_104 : std_ulogic_vector (5 downto 0);
  signal t_103 : std_ulogic_vector (5 downto 0);
  signal t_102 : std_ulogic_vector (5 downto 0);
  signal t_101 : std_ulogic_vector (5 downto 0);
  signal t_100 : std_ulogic_vector (5 downto 0);
  signal t_99 : std_ulogic_vector (5 downto 0);
  signal ti4002_piece_sizes : std_ulogic_vector (4 downto 0);
  signal ti3975_board_bak_s2 : std_ulogic_vector (5 downto 0);
  signal ti3963_y_bak_s2 : std_ulogic_vector (5 downto 0);
  signal ti3957_x_bak_s2 : std_ulogic_vector (5 downto 0);
  signal t_98 : std_ulogic_vector (5 downto 0);
  signal t_97 : std_ulogic_vector (5 downto 0);
  signal t_96 : std_ulogic_vector (5 downto 0);
  signal t_95 : std_ulogic_vector (5 downto 0);
  signal t_94 : std_ulogic_vector (5 downto 0);
  signal t_93 : std_ulogic_vector (5 downto 0);
  signal t_92 : std_ulogic_vector (5 downto 0);
  signal t_91 : std_ulogic_vector (5 downto 0);
  signal t_90 : std_ulogic_vector (5 downto 0);
  signal t_89 : std_ulogic_vector (5 downto 0);
  signal t_88 : std_ulogic_vector (5 downto 0);
  signal t_87 : std_ulogic_vector (5 downto 0);
  signal t_86 : std_ulogic_vector (5 downto 0);
  signal t_85 : std_ulogic_vector (5 downto 0);
  signal t_84 : std_ulogic_vector (5 downto 0);
  signal t_83 : std_ulogic_vector (5 downto 0);
  signal t_82 : std_ulogic_vector (5 downto 0);
  signal t_81 : std_ulogic_vector (5 downto 0);
  signal t_80 : std_ulogic_vector (5 downto 0);
  signal t_79 : std_ulogic_vector (5 downto 0);
  signal t_78 : std_ulogic_vector (5 downto 0);
  signal t_77 : std_ulogic_vector (5 downto 0);
  signal t_76 : std_ulogic_vector (5 downto 0);
  signal t_75 : std_ulogic_vector (5 downto 0);
  signal t_74 : std_ulogic_vector (5 downto 0);
  signal t_73 : std_ulogic_vector (5 downto 0);
  signal t_72 : std_ulogic_vector (5 downto 0);
  signal ti3369_piece_sizes : std_ulogic_vector (4 downto 0);
  signal t_71 : std_ulogic_vector (7 downto 0);
  signal t_70 : std_ulogic_vector (7 downto 0);
  signal t_69 : std_ulogic_vector (7 downto 0);
  signal t_68 : std_ulogic_vector (7 downto 0);
  signal t_67 : std_ulogic_vector (7 downto 0);
  signal t_66 : std_ulogic_vector (7 downto 0);
  signal t_65 : std_ulogic_vector (7 downto 0);
  signal t_64 : std_ulogic_vector (7 downto 0);
  signal t_63 : std_ulogic_vector (7 downto 0);
  signal t_62 : std_ulogic_vector (7 downto 0);
  signal t_61 : std_ulogic_vector (7 downto 0);
  signal t_60 : std_ulogic_vector (7 downto 0);
  signal t_59 : std_ulogic_vector (7 downto 0);
  signal t_58 : std_ulogic_vector (7 downto 0);
  signal t_57 : std_ulogic_vector (7 downto 0);
  signal t_56 : std_ulogic_vector (7 downto 0);
  signal t_55 : std_ulogic_vector (7 downto 0);
  signal t_54 : std_ulogic_vector (7 downto 0);
  signal t_53 : std_ulogic_vector (7 downto 0);
  signal t_52 : std_ulogic_vector (7 downto 0);
  signal t_51 : std_ulogic_vector (7 downto 0);
  signal t_50 : std_ulogic_vector (7 downto 0);
  signal t_49 : std_ulogic_vector (7 downto 0);
  signal t_48 : std_ulogic_vector (7 downto 0);
  signal t_47 : std_ulogic_vector (7 downto 0);
  signal t_46 : std_ulogic_vector (7 downto 0);
  signal t_45 : std_ulogic_vector (7 downto 0);
  signal t_44 : std_ulogic_vector (7 downto 0);
  signal t_43 : std_ulogic_vector (7 downto 0);
  signal t_42 : std_ulogic_vector (7 downto 0);
  signal t_41 : std_ulogic_vector (7 downto 0);
  signal t_40 : std_ulogic_vector (7 downto 0);
  signal t_39 : std_ulogic_vector (7 downto 0);
  signal t_38 : std_ulogic_vector (7 downto 0);
  signal t_37 : std_ulogic_vector (7 downto 0);
  signal t_36 : std_ulogic_vector (7 downto 0);
  signal t_35 : std_ulogic_vector (7 downto 0);
  signal t_34 : std_ulogic_vector (7 downto 0);
  signal t_33 : std_ulogic_vector (7 downto 0);
  signal t_32 : std_ulogic_vector (7 downto 0);
  signal t_31 : std_ulogic_vector (7 downto 0);
  signal t_30 : std_ulogic_vector (7 downto 0);
  signal t_29 : std_ulogic_vector (7 downto 0);
  signal t_28 : std_ulogic_vector (7 downto 0);
  signal t_27 : std_ulogic_vector (7 downto 0);
  signal t_26 : std_ulogic_vector (7 downto 0);
  signal t_25 : std_ulogic_vector (7 downto 0);
  signal t_24 : std_ulogic_vector (7 downto 0);
  signal t_23 : std_ulogic_vector (7 downto 0);
  signal t_22 : std_ulogic_vector (7 downto 0);
  signal t_21 : std_ulogic_vector (7 downto 0);
  signal t_20 : std_ulogic_vector (7 downto 0);
  signal t_19 : std_ulogic_vector (7 downto 0);
  signal t_18 : std_ulogic_vector (7 downto 0);
  signal t_17 : std_ulogic_vector (7 downto 0);
  signal t_16 : std_ulogic_vector (7 downto 0);
  signal t_15 : std_ulogic_vector (7 downto 0);
  signal t_14 : std_ulogic_vector (7 downto 0);
  signal t_13 : std_ulogic_vector (7 downto 0);
  signal t_12 : std_ulogic_vector (7 downto 0);
  signal t_11 : std_ulogic_vector (7 downto 0);
  signal t_10 : std_ulogic_vector (7 downto 0);
  signal t_9 : std_ulogic_vector (7 downto 0);
  signal t_8 : std_ulogic_vector (7 downto 0);
  signal t_7 : std_ulogic_vector (7 downto 0);
  signal t_6 : std_ulogic_vector (7 downto 0);
  signal t_5 : std_ulogic_vector (7 downto 0);
  signal t_4 : std_ulogic_vector (7 downto 0);
  signal t_3 : std_ulogic_vector (7 downto 0);
  signal t_2 : std_ulogic_vector (7 downto 0);
  signal t_1 : std_ulogic_vector (7 downto 0);
  signal t_0 : std_ulogic_vector (7 downto 0);
  signal s_b23_predicates : std_ulogic_vector (5 downto 0);
  signal s_b23_predicates_r : std_ulogic_vector (5 downto 0);
  signal s_b25_predicates : std_ulogic_vector (5 downto 0);
  signal s_b25_predicates_r : std_ulogic_vector (5 downto 0);
  signal s_b27_predicates : std_ulogic_vector (5 downto 0);
  signal s_b27_predicates_r : std_ulogic_vector (5 downto 0);
  signal s_b30_predicates : std_ulogic_vector (5 downto 0);
  signal s_b30_predicates_r : std_ulogic_vector (5 downto 0);
  signal s_b32_predicates : std_ulogic_vector (5 downto 0);
  signal s_b32_predicates_r : std_ulogic_vector (5 downto 0);
  signal s_b34_predicates : std_ulogic_vector (5 downto 0);
  signal s_b34_predicates_r : std_ulogic_vector (5 downto 0);
  signal s_b37_predicates : std_ulogic_vector (5 downto 0);
  signal s_b37_predicates_r : std_ulogic_vector (5 downto 0);
  signal s_b39_predicates : std_ulogic_vector (5 downto 0);
  signal s_b39_predicates_r : std_ulogic_vector (5 downto 0);
  signal s_b41_predicates : std_ulogic_vector (5 downto 0);
  signal s_b41_predicates_r : std_ulogic_vector (5 downto 0);
  signal s_b44_predicates : std_ulogic_vector (5 downto 0);
  signal s_b44_predicates_r : std_ulogic_vector (5 downto 0);
  signal s_b46_predicates : std_ulogic_vector (5 downto 0);
  signal s_b46_predicates_r : std_ulogic_vector (5 downto 0);
  signal s_b48_predicates : std_ulogic_vector (5 downto 0);
  signal s_b48_predicates_r : std_ulogic_vector (5 downto 0);
  signal s_b52_predicates : std_ulogic_vector (5 downto 0);
  signal s_b52_predicates_r : std_ulogic_vector (5 downto 0);
  signal s_b54_predicates : std_ulogic_vector (5 downto 0);
  signal s_b54_predicates_r : std_ulogic_vector (5 downto 0);
  signal s_b56_predicates : std_ulogic_vector (5 downto 0);
  signal s_b56_predicates_r : std_ulogic_vector (5 downto 0);
  signal s_b59_predicates : std_ulogic_vector (5 downto 0);
  signal s_b59_predicates_r : std_ulogic_vector (5 downto 0);
  signal s_b61_predicates : std_ulogic_vector (5 downto 0);
  signal s_b61_predicates_r : std_ulogic_vector (5 downto 0);
  signal s_b63_predicates : std_ulogic_vector (5 downto 0);
  signal s_b63_predicates_r : std_ulogic_vector (5 downto 0);
  signal s_b66_predicates : std_ulogic_vector (5 downto 0);
  signal s_b66_predicates_r : std_ulogic_vector (5 downto 0);
  signal s_b68_predicates : std_ulogic_vector (5 downto 0);
  signal s_b68_predicates_r : std_ulogic_vector (5 downto 0);
  signal s_b70_predicates : std_ulogic_vector (5 downto 0);
  signal s_b70_predicates_r : std_ulogic_vector (5 downto 0);
  signal s_b73_predicates : std_ulogic_vector (5 downto 0);
  signal s_b73_predicates_r : std_ulogic_vector (5 downto 0);
  signal s_b75_predicates : std_ulogic_vector (5 downto 0);
  signal s_b75_predicates_r : std_ulogic_vector (5 downto 0);
  signal s_b77_predicates : std_ulogic_vector (5 downto 0);
  signal s_b77_predicates_r : std_ulogic_vector (5 downto 0);
  signal s_b85_state : pipeStateType;
  signal s_b85_0 : t_b85_0;
  signal s_b85_1 : t_b85_1;
  signal s_b85_stall : std_ulogic;
  signal s_b85_break : std_ulogic;
  signal s_b85_final : std_ulogic;
  signal s_b85_flushing : std_ulogic;
  signal s_b85_flushed : std_ulogic;
  signal s_b85_done : std_ulogic;
  signal s_b85_vstall : std_ulogic_vector (2 downto 0);
  signal s_b85_vbreak : std_ulogic_vector (2 downto 0);
  signal s_b85_vlast : std_ulogic_vector (2 downto 0);
  signal s_b85_vflush : std_ulogic_vector (2 downto 0);
  signal s_b85_stage : std_ulogic_vector (2 downto 0);
  signal s_b85_vwrite : std_ulogic_vector (2 downto 0);
  signal s_b85_vcont : std_ulogic_vector (2 downto 0);
  signal s_b90_state : pipeStateType;
  signal s_b90_0 : t_b90_0;
  signal s_b90_1 : t_b90_1;
  signal s_b90_stall : std_ulogic;
  signal s_b90_break : std_ulogic;
  signal s_b90_final : std_ulogic;
  signal s_b90_flushing : std_ulogic;
  signal s_b90_flushed : std_ulogic;
  signal s_b90_done : std_ulogic;
  signal s_b90_vstall : std_ulogic_vector (2 downto 0);
  signal s_b90_vbreak : std_ulogic_vector (2 downto 0);
  signal s_b90_vlast : std_ulogic_vector (2 downto 0);
  signal s_b90_vflush : std_ulogic_vector (2 downto 0);
  signal s_b90_stage : std_ulogic_vector (2 downto 0);
  signal s_b90_vwrite : std_ulogic_vector (2 downto 0);
  signal s_b90_vcont : std_ulogic_vector (2 downto 0);
  signal s_b95_state : pipeStateType;
  signal s_b95_0 : t_b95_0;
  signal s_b95_1 : t_b95_1;
  signal s_b95_stall : std_ulogic;
  signal s_b95_break : std_ulogic;
  signal s_b95_final : std_ulogic;
  signal s_b95_flushing : std_ulogic;
  signal s_b95_flushed : std_ulogic;
  signal s_b95_done : std_ulogic;
  signal s_b95_vstall : std_ulogic_vector (2 downto 0);
  signal s_b95_vbreak : std_ulogic_vector (2 downto 0);
  signal s_b95_vlast : std_ulogic_vector (2 downto 0);
  signal s_b95_vflush : std_ulogic_vector (2 downto 0);
  signal s_b95_stage : std_ulogic_vector (2 downto 0);
  signal s_b95_vwrite : std_ulogic_vector (2 downto 0);
  signal s_b95_vcont : std_ulogic_vector (2 downto 0);
  signal s_b16s0_en : std_ulogic;
  signal s_b81s0_en : std_ulogic;
  signal s_b85s0_en : std_ulogic;
  signal s_b90s0_en : std_ulogic;
  signal s_b95s0_en : std_ulogic;
begin
  process (clk,reset)
  begin
    if (reset='1') then
      thisState <= init;
    elsif (clk'event and clk='1') then
      if (stateEn = '1') then
        thisState <= nextState;
      end if;
    end if;
  end process;

  s_b16s0_en <= p_stream0_move_input_rdy;
  s_b81s0_en <= p_stream0_move_output_rdy;
  s_b85s0_en <= s_b85_done;
  s_b90s0_en <= s_b90_done;
  s_b95s0_en <= s_b95_done;
  stateEn <= 
    '0' when thisState = b16s0 and s_b16s0_en = '0' else
    '0' when thisState = b81s0 and s_b81s0_en = '0' else
    '0' when thisState = b85s0 and s_b85s0_en = '0' else
    '0' when thisState = b90s0 and s_b90s0_en = '0' else
    '0' when thisState = b95s0 and s_b95s0_en = '0' else
    '1';

  process (ni7131_suif_tmp133,ni7129_suif_tmp134,ni7125_suif_tmp4_0,ni7121_suif_tmp_1,ni7119_suif_tmp1_0,ni7118_suif_tmp4_0,ni7117_suif_tmp3_0,r_suif_tmp131,r_suif_tmp129,r_suif_tmp125,r_suif_tmp121,r_suif_tmp117,ni6770_suif_tmp6,ni6768_suif_tmp7,ni6757_suif_tmp112,ni6748_suif_tmp108,ni6739_suif_tmp104,ni6737_suif_tmp103,ni6728_suif_tmp99,ni6719_suif_tmp95,ni6710_suif_tmp91,ni6708_suif_tmp90,ni6699_suif_tmp86,ni6690_suif_tmp82,ni6681_suif_tmp78,ni6679_suif_tmp77,ni6670_suif_tmp73,ni6661_suif_tmp69,ni6652_suif_tmp65,ni6650_suif_tmp64,ni6649_suif_tmp63,ni6640_suif_tmp59,ni6631_suif_tmp55,ni6622_suif_tmp51,ni6620_suif_tmp50,ni6611_suif_tmp46,ni6602_suif_tmp42,ni6593_suif_tmp38,ni6591_suif_tmp37,ni6582_suif_tmp33,ni6573_suif_tmp29,ni6564_suif_tmp25,ni6562_suif_tmp24,ni6553_suif_tmp20,ni6544_suif_tmp16,ni6535_suif_tmp12,ni6533_suif_tmp11,r_suif_tmp9,ni6369_suif_tmp8,ni6666055_switched,ni7110_suif_tmp132,ni7056_suif_tmp130,ni7002_suif_tmp128,ni6993_suif_tmp126,ni6926_suif_tmp124,ni6917_suif_tmp122,ni6850_suif_tmp120,ni6841_suif_tmp118,ni6774_suif_tmp116,ni6356_suif_tmp5,ni6342_suif_tmp,ni6340_suif_tmp0,ni6336_suif_tmp4,ni6332_suif_tmp1,ni6330_suif_tmp10,ni6329_suif_tmp4,ni6328_suif_tmp3,thisState)
  begin
    case thisState is
    when init =>
      nextState <= b0s0;
    when b0s0 =>
      nextState <= b1s0;
    when b1s0 =>
      nextState <= b2s0;
    when b2s0 =>
      if (ni6328_suif_tmp3(0) = '1') then
        nextState <= b3s0;
      elsif ((not ni6328_suif_tmp3(0)) = '1') then
        nextState <= b4s0;
      else
        nextState <= b2s0;
      end if;
    when b3s0 =>
      if (ni6329_suif_tmp4(0) = '1') then
        nextState <= b11s0;
      elsif ((not ni6329_suif_tmp4(0)) = '1') then
        nextState <= b12s0;
      else
        nextState <= b3s0;
      end if;
    when b4s0 =>
      if (ni6330_suif_tmp10(0) = '1') then
        nextState <= b5s0;
      elsif ((not ni6330_suif_tmp10(0)) = '1') then
        nextState <= b6s0;
      else
        nextState <= b4s0;
      end if;
    when b5s0 =>
      nextState <= b10s0;
    when b6s0 =>
      if (ni6332_suif_tmp1(0) = '1') then
        nextState <= b7s0;
      elsif ((not ni6332_suif_tmp1(0)) = '1') then
        nextState <= b8s0;
      else
        nextState <= b6s0;
      end if;
    when b7s0 =>
      nextState <= b9s0;
    when b8s0 =>
      nextState <= b9s0;
    when b9s0 =>
      nextState <= b10s0;
    when b10s0 =>
      if (ni6336_suif_tmp4(0) = '1') then
        nextState <= b11s0;
      elsif ((not ni6336_suif_tmp4(0)) = '1') then
        nextState <= b12s0;
      else
        nextState <= b10s0;
      end if;
    when b11s0 =>
      nextState <= b11s1;
    when b11s1 =>
      nextState <= b13s0;
    when b12s0 =>
      nextState <= b12s1;
    when b12s1 =>
      nextState <= b13s0;
    when b13s0 =>
      if (ni6340_suif_tmp0(0) = '1') then
        nextState <= b2s0;
      elsif ((not ni6340_suif_tmp0(0)) = '1') then
        nextState <= b14s0;
      else
        nextState <= b13s0;
      end if;
    when b14s0 =>
      if (ni6342_suif_tmp(0) = '1') then
        nextState <= b1s0;
      elsif ((not ni6342_suif_tmp(0)) = '1') then
        nextState <= b15s0;
      else
        nextState <= b14s0;
      end if;
    when b15s0 =>
      nextState <= b16s0;
    when b16s0 =>
      nextState <= b16s1;
    when b16s1 =>
      if (ni6356_suif_tmp5(0) = '1') then
        nextState <= b17s0;
      elsif (ni6774_suif_tmp116(0) = '1') then
        nextState <= b82s0;
      elsif (ni6841_suif_tmp118(0) = '1') then
        nextState <= b84s0;
      elsif (ni6850_suif_tmp120(0) = '1') then
        nextState <= b87s0;
      elsif (ni6917_suif_tmp122(0) = '1') then
        nextState <= b89s0;
      elsif (ni6926_suif_tmp124(0) = '1') then
        nextState <= b92s0;
      elsif (ni6993_suif_tmp126(0) = '1') then
        nextState <= b94s0;
      elsif (ni7002_suif_tmp128(0) = '1') then
        nextState <= b97s0;
      elsif (ni7056_suif_tmp130(0) = '1') then
        nextState <= b99s0;
      elsif (ni7110_suif_tmp132(0) = '1') then
        nextState <= b101s0;
      elsif ((not ni6666055_switched(0)) = '1') then
        nextState <= b117s0;
      else
        nextState <= b16s1;
      end if;
    when b17s0 =>
      nextState <= b18s0;
    when b18s0 =>
      nextState <= b19s0;
    when b19s0 =>
      nextState <= b19s1;
    when b19s1 =>
      if (ni6369_suif_tmp8(0) = '1') then
        nextState <= b20s0;
      elsif ((not ni6369_suif_tmp8(0)) = '1') then
        nextState <= b79s0;
      else
        nextState <= b19s1;
      end if;
    when b20s0 =>
      nextState <= b20s1;
    when b20s1 =>
      nextState <= b20s2;
    when b20s2 =>
      nextState <= b20s3;
    when b20s3 =>
      nextState <= b20s4;
    when b20s4 =>
      nextState <= b20s5;
    when b20s5 =>
      nextState <= b20s6;
    when b20s6 =>
      nextState <= b20s7;
    when b20s7 =>
      nextState <= b20s8;
    when b20s8 =>
      nextState <= b20s9;
    when b20s9 =>
      nextState <= b20s10;
    when b20s10 =>
      nextState <= b20s11;
    when b20s11 =>
      nextState <= b20s12;
    when b20s12 =>
      nextState <= b20s13;
    when b20s13 =>
      nextState <= b20s14;
    when b20s14 =>
      nextState <= b20s15;
    when b20s15 =>
      nextState <= b20s16;
    when b20s16 =>
      nextState <= b20s17;
    when b20s17 =>
      nextState <= b20s18;
    when b20s18 =>
      nextState <= b20s19;
    when b20s19 =>
      nextState <= b20s20;
    when b20s20 =>
      if (r_suif_tmp9(0) = '1') then
        nextState <= b21s0;
      elsif ((not r_suif_tmp9(0)) = '1') then
        nextState <= b49s0;
      else
        nextState <= b20s20;
      end if;
    when b21s0 =>
      if (ni6533_suif_tmp11(0) = '1') then
        nextState <= b22s0;
      elsif ((not ni6533_suif_tmp11(0)) = '1') then
        nextState <= b28s0;
      else
        nextState <= b21s0;
      end if;
    when b22s0 =>
      if (ni6535_suif_tmp12(0) = '1') then
        nextState <= b23s0;
      elsif ((not ni6535_suif_tmp12(0)) = '1') then
        nextState <= b24s0;
      else
        nextState <= b22s0;
      end if;
    when b23s0 =>
      nextState <= b24s0;
    when b24s0 =>
      if (ni6544_suif_tmp16(0) = '1') then
        nextState <= b25s0;
      elsif ((not ni6544_suif_tmp16(0)) = '1') then
        nextState <= b26s0;
      else
        nextState <= b24s0;
      end if;
    when b25s0 =>
      nextState <= b26s0;
    when b26s0 =>
      if (ni6553_suif_tmp20(0) = '1') then
        nextState <= b27s0;
      elsif ((not ni6553_suif_tmp20(0)) = '1') then
        nextState <= b28s0;
      else
        nextState <= b26s0;
      end if;
    when b27s0 =>
      nextState <= b28s0;
    when b28s0 =>
      if (ni6562_suif_tmp24(0) = '1') then
        nextState <= b29s0;
      elsif ((not ni6562_suif_tmp24(0)) = '1') then
        nextState <= b35s0;
      else
        nextState <= b28s0;
      end if;
    when b29s0 =>
      if (ni6564_suif_tmp25(0) = '1') then
        nextState <= b30s0;
      elsif ((not ni6564_suif_tmp25(0)) = '1') then
        nextState <= b31s0;
      else
        nextState <= b29s0;
      end if;
    when b30s0 =>
      nextState <= b31s0;
    when b31s0 =>
      if (ni6573_suif_tmp29(0) = '1') then
        nextState <= b32s0;
      elsif ((not ni6573_suif_tmp29(0)) = '1') then
        nextState <= b33s0;
      else
        nextState <= b31s0;
      end if;
    when b32s0 =>
      nextState <= b33s0;
    when b33s0 =>
      if (ni6582_suif_tmp33(0) = '1') then
        nextState <= b34s0;
      elsif ((not ni6582_suif_tmp33(0)) = '1') then
        nextState <= b35s0;
      else
        nextState <= b33s0;
      end if;
    when b34s0 =>
      nextState <= b35s0;
    when b35s0 =>
      if (ni6591_suif_tmp37(0) = '1') then
        nextState <= b36s0;
      elsif ((not ni6591_suif_tmp37(0)) = '1') then
        nextState <= b42s0;
      else
        nextState <= b35s0;
      end if;
    when b36s0 =>
      if (ni6593_suif_tmp38(0) = '1') then
        nextState <= b37s0;
      elsif ((not ni6593_suif_tmp38(0)) = '1') then
        nextState <= b38s0;
      else
        nextState <= b36s0;
      end if;
    when b37s0 =>
      nextState <= b38s0;
    when b38s0 =>
      if (ni6602_suif_tmp42(0) = '1') then
        nextState <= b39s0;
      elsif ((not ni6602_suif_tmp42(0)) = '1') then
        nextState <= b40s0;
      else
        nextState <= b38s0;
      end if;
    when b39s0 =>
      nextState <= b40s0;
    when b40s0 =>
      if (ni6611_suif_tmp46(0) = '1') then
        nextState <= b41s0;
      elsif ((not ni6611_suif_tmp46(0)) = '1') then
        nextState <= b42s0;
      else
        nextState <= b40s0;
      end if;
    when b41s0 =>
      nextState <= b42s0;
    when b42s0 =>
      if (ni6620_suif_tmp50(0) = '1') then
        nextState <= b43s0;
      elsif ((not ni6620_suif_tmp50(0)) = '1') then
        nextState <= b49s0;
      else
        nextState <= b42s0;
      end if;
    when b43s0 =>
      if (ni6622_suif_tmp51(0) = '1') then
        nextState <= b44s0;
      elsif ((not ni6622_suif_tmp51(0)) = '1') then
        nextState <= b45s0;
      else
        nextState <= b43s0;
      end if;
    when b44s0 =>
      nextState <= b45s0;
    when b45s0 =>
      if (ni6631_suif_tmp55(0) = '1') then
        nextState <= b46s0;
      elsif ((not ni6631_suif_tmp55(0)) = '1') then
        nextState <= b47s0;
      else
        nextState <= b45s0;
      end if;
    when b46s0 =>
      nextState <= b47s0;
    when b47s0 =>
      if (ni6640_suif_tmp59(0) = '1') then
        nextState <= b48s0;
      elsif ((not ni6640_suif_tmp59(0)) = '1') then
        nextState <= b49s0;
      else
        nextState <= b47s0;
      end if;
    when b48s0 =>
      nextState <= b49s0;
    when b49s0 =>
      if (ni6649_suif_tmp63(0) = '1') then
        nextState <= b50s0;
      elsif ((not ni6649_suif_tmp63(0)) = '1') then
        nextState <= b78s0;
      else
        nextState <= b49s0;
      end if;
    when b50s0 =>
      if (ni6650_suif_tmp64(0) = '1') then
        nextState <= b51s0;
      elsif ((not ni6650_suif_tmp64(0)) = '1') then
        nextState <= b57s0;
      else
        nextState <= b50s0;
      end if;
    when b51s0 =>
      if (ni6652_suif_tmp65(0) = '1') then
        nextState <= b52s0;
      elsif ((not ni6652_suif_tmp65(0)) = '1') then
        nextState <= b53s0;
      else
        nextState <= b51s0;
      end if;
    when b52s0 =>
      nextState <= b53s0;
    when b53s0 =>
      if (ni6661_suif_tmp69(0) = '1') then
        nextState <= b54s0;
      elsif ((not ni6661_suif_tmp69(0)) = '1') then
        nextState <= b55s0;
      else
        nextState <= b53s0;
      end if;
    when b54s0 =>
      nextState <= b55s0;
    when b55s0 =>
      if (ni6670_suif_tmp73(0) = '1') then
        nextState <= b56s0;
      elsif ((not ni6670_suif_tmp73(0)) = '1') then
        nextState <= b57s0;
      else
        nextState <= b55s0;
      end if;
    when b56s0 =>
      nextState <= b57s0;
    when b57s0 =>
      if (ni6679_suif_tmp77(0) = '1') then
        nextState <= b58s0;
      elsif ((not ni6679_suif_tmp77(0)) = '1') then
        nextState <= b64s0;
      else
        nextState <= b57s0;
      end if;
    when b58s0 =>
      if (ni6681_suif_tmp78(0) = '1') then
        nextState <= b59s0;
      elsif ((not ni6681_suif_tmp78(0)) = '1') then
        nextState <= b60s0;
      else
        nextState <= b58s0;
      end if;
    when b59s0 =>
      nextState <= b60s0;
    when b60s0 =>
      if (ni6690_suif_tmp82(0) = '1') then
        nextState <= b61s0;
      elsif ((not ni6690_suif_tmp82(0)) = '1') then
        nextState <= b62s0;
      else
        nextState <= b60s0;
      end if;
    when b61s0 =>
      nextState <= b62s0;
    when b62s0 =>
      if (ni6699_suif_tmp86(0) = '1') then
        nextState <= b63s0;
      elsif ((not ni6699_suif_tmp86(0)) = '1') then
        nextState <= b64s0;
      else
        nextState <= b62s0;
      end if;
    when b63s0 =>
      nextState <= b64s0;
    when b64s0 =>
      if (ni6708_suif_tmp90(0) = '1') then
        nextState <= b65s0;
      elsif ((not ni6708_suif_tmp90(0)) = '1') then
        nextState <= b71s0;
      else
        nextState <= b64s0;
      end if;
    when b65s0 =>
      if (ni6710_suif_tmp91(0) = '1') then
        nextState <= b66s0;
      elsif ((not ni6710_suif_tmp91(0)) = '1') then
        nextState <= b67s0;
      else
        nextState <= b65s0;
      end if;
    when b66s0 =>
      nextState <= b67s0;
    when b67s0 =>
      if (ni6719_suif_tmp95(0) = '1') then
        nextState <= b68s0;
      elsif ((not ni6719_suif_tmp95(0)) = '1') then
        nextState <= b69s0;
      else
        nextState <= b67s0;
      end if;
    when b68s0 =>
      nextState <= b69s0;
    when b69s0 =>
      if (ni6728_suif_tmp99(0) = '1') then
        nextState <= b70s0;
      elsif ((not ni6728_suif_tmp99(0)) = '1') then
        nextState <= b71s0;
      else
        nextState <= b69s0;
      end if;
    when b70s0 =>
      nextState <= b71s0;
    when b71s0 =>
      if (ni6737_suif_tmp103(0) = '1') then
        nextState <= b72s0;
      elsif ((not ni6737_suif_tmp103(0)) = '1') then
        nextState <= b78s0;
      else
        nextState <= b71s0;
      end if;
    when b72s0 =>
      if (ni6739_suif_tmp104(0) = '1') then
        nextState <= b73s0;
      elsif ((not ni6739_suif_tmp104(0)) = '1') then
        nextState <= b74s0;
      else
        nextState <= b72s0;
      end if;
    when b73s0 =>
      nextState <= b74s0;
    when b74s0 =>
      if (ni6748_suif_tmp108(0) = '1') then
        nextState <= b75s0;
      elsif ((not ni6748_suif_tmp108(0)) = '1') then
        nextState <= b76s0;
      else
        nextState <= b74s0;
      end if;
    when b75s0 =>
      nextState <= b76s0;
    when b76s0 =>
      if (ni6757_suif_tmp112(0) = '1') then
        nextState <= b77s0;
      elsif ((not ni6757_suif_tmp112(0)) = '1') then
        nextState <= b78s0;
      else
        nextState <= b76s0;
      end if;
    when b77s0 =>
      nextState <= b78s0;
    when b78s0 =>
      nextState <= b79s0;
    when b79s0 =>
      if (ni6768_suif_tmp7(0) = '1') then
        nextState <= b19s0;
      elsif ((not ni6768_suif_tmp7(0)) = '1') then
        nextState <= b80s0;
      else
        nextState <= b79s0;
      end if;
    when b80s0 =>
      if (ni6770_suif_tmp6(0) = '1') then
        nextState <= b18s0;
      elsif ((not ni6770_suif_tmp6(0)) = '1') then
        nextState <= b81s0;
      else
        nextState <= b80s0;
      end if;
    when b81s0 =>
      nextState <= b16s0;
    when b82s0 =>
      nextState <= b82s1;
    when b82s1 =>
      nextState <= b83s0;
    when b83s0 =>
      nextState <= b83s1;
    when b83s1 =>
      nextState <= b83s2;
    when b83s2 =>
      nextState <= b83s3;
    when b83s3 =>
      nextState <= b83s4;
    when b83s4 =>
      nextState <= b83s5;
    when b83s5 =>
      nextState <= b83s6;
    when b83s6 =>
      nextState <= b83s7;
    when b83s7 =>
      nextState <= b83s8;
    when b83s8 =>
      nextState <= b83s9;
    when b83s9 =>
      nextState <= b83s10;
    when b83s10 =>
      nextState <= b83s11;
    when b83s11 =>
      nextState <= b83s12;
    when b83s12 =>
      nextState <= b83s13;
    when b83s13 =>
      if (r_suif_tmp117(0) = '1') then
        nextState <= b16s0;
      else
        nextState <= b83s14;
      end if;
    when b83s14 =>
      nextState <= b83s15;
    when b83s15 =>
      nextState <= b83s0;
    when b84s0 =>
      nextState <= b85s0;
    when b85s0 =>
      nextState <= b86s0;
    when b86s0 =>
      nextState <= b16s0;
    when b87s0 =>
      nextState <= b87s1;
    when b87s1 =>
      nextState <= b88s0;
    when b88s0 =>
      nextState <= b88s1;
    when b88s1 =>
      nextState <= b88s2;
    when b88s2 =>
      nextState <= b88s3;
    when b88s3 =>
      nextState <= b88s4;
    when b88s4 =>
      nextState <= b88s5;
    when b88s5 =>
      nextState <= b88s6;
    when b88s6 =>
      nextState <= b88s7;
    when b88s7 =>
      nextState <= b88s8;
    when b88s8 =>
      nextState <= b88s9;
    when b88s9 =>
      nextState <= b88s10;
    when b88s10 =>
      nextState <= b88s11;
    when b88s11 =>
      nextState <= b88s12;
    when b88s12 =>
      nextState <= b88s13;
    when b88s13 =>
      if (r_suif_tmp121(0) = '1') then
        nextState <= b16s0;
      else
        nextState <= b88s14;
      end if;
    when b88s14 =>
      nextState <= b88s15;
    when b88s15 =>
      nextState <= b88s0;
    when b89s0 =>
      nextState <= b90s0;
    when b90s0 =>
      nextState <= b91s0;
    when b91s0 =>
      nextState <= b16s0;
    when b92s0 =>
      nextState <= b92s1;
    when b92s1 =>
      nextState <= b93s0;
    when b93s0 =>
      nextState <= b93s1;
    when b93s1 =>
      nextState <= b93s2;
    when b93s2 =>
      nextState <= b93s3;
    when b93s3 =>
      nextState <= b93s4;
    when b93s4 =>
      nextState <= b93s5;
    when b93s5 =>
      nextState <= b93s6;
    when b93s6 =>
      nextState <= b93s7;
    when b93s7 =>
      nextState <= b93s8;
    when b93s8 =>
      nextState <= b93s9;
    when b93s9 =>
      nextState <= b93s10;
    when b93s10 =>
      nextState <= b93s11;
    when b93s11 =>
      nextState <= b93s12;
    when b93s12 =>
      nextState <= b93s13;
    when b93s13 =>
      if (r_suif_tmp125(0) = '1') then
        nextState <= b16s0;
      else
        nextState <= b93s14;
      end if;
    when b93s14 =>
      nextState <= b93s15;
    when b93s15 =>
      nextState <= b93s0;
    when b94s0 =>
      nextState <= b95s0;
    when b95s0 =>
      nextState <= b96s0;
    when b96s0 =>
      nextState <= b16s0;
    when b97s0 =>
      nextState <= b97s1;
    when b97s1 =>
      nextState <= b98s0;
    when b98s0 =>
      nextState <= b98s1;
    when b98s1 =>
      nextState <= b98s2;
    when b98s2 =>
      nextState <= b98s3;
    when b98s3 =>
      nextState <= b98s4;
    when b98s4 =>
      nextState <= b98s5;
    when b98s5 =>
      nextState <= b98s6;
    when b98s6 =>
      nextState <= b98s7;
    when b98s7 =>
      nextState <= b98s8;
    when b98s8 =>
      nextState <= b98s9;
    when b98s9 =>
      nextState <= b98s10;
    when b98s10 =>
      nextState <= b98s11;
    when b98s11 =>
      nextState <= b98s12;
    when b98s12 =>
      nextState <= b98s13;
    when b98s13 =>
      if (r_suif_tmp129(0) = '1') then
        nextState <= b16s0;
      else
        nextState <= b98s14;
      end if;
    when b98s14 =>
      nextState <= b98s15;
    when b98s15 =>
      nextState <= b98s0;
    when b99s0 =>
      nextState <= b99s1;
    when b99s1 =>
      nextState <= b100s0;
    when b100s0 =>
      nextState <= b100s1;
    when b100s1 =>
      nextState <= b100s2;
    when b100s2 =>
      nextState <= b100s3;
    when b100s3 =>
      nextState <= b100s4;
    when b100s4 =>
      nextState <= b100s5;
    when b100s5 =>
      nextState <= b100s6;
    when b100s6 =>
      nextState <= b100s7;
    when b100s7 =>
      nextState <= b100s8;
    when b100s8 =>
      nextState <= b100s9;
    when b100s9 =>
      nextState <= b100s10;
    when b100s10 =>
      nextState <= b100s11;
    when b100s11 =>
      nextState <= b100s12;
    when b100s12 =>
      nextState <= b100s13;
    when b100s13 =>
      if (r_suif_tmp131(0) = '1') then
        nextState <= b16s0;
      else
        nextState <= b100s14;
      end if;
    when b100s14 =>
      nextState <= b100s15;
    when b100s15 =>
      nextState <= b100s0;
    when b101s0 =>
      nextState <= b102s0;
    when b102s0 =>
      nextState <= b103s0;
    when b103s0 =>
      if (ni7117_suif_tmp3_0(0) = '1') then
        nextState <= b104s0;
      elsif ((not ni7117_suif_tmp3_0(0)) = '1') then
        nextState <= b105s0;
      else
        nextState <= b103s0;
      end if;
    when b104s0 =>
      if (ni7118_suif_tmp4_0(0) = '1') then
        nextState <= b112s0;
      elsif ((not ni7118_suif_tmp4_0(0)) = '1') then
        nextState <= b113s0;
      else
        nextState <= b104s0;
      end if;
    when b105s0 =>
      if (ni7119_suif_tmp1_0(0) = '1') then
        nextState <= b106s0;
      elsif ((not ni7119_suif_tmp1_0(0)) = '1') then
        nextState <= b107s0;
      else
        nextState <= b105s0;
      end if;
    when b106s0 =>
      nextState <= b111s0;
    when b107s0 =>
      if (ni7121_suif_tmp_1(0) = '1') then
        nextState <= b108s0;
      elsif ((not ni7121_suif_tmp_1(0)) = '1') then
        nextState <= b109s0;
      else
        nextState <= b107s0;
      end if;
    when b108s0 =>
      nextState <= b110s0;
    when b109s0 =>
      nextState <= b110s0;
    when b110s0 =>
      nextState <= b111s0;
    when b111s0 =>
      if (ni7125_suif_tmp4_0(0) = '1') then
        nextState <= b112s0;
      elsif ((not ni7125_suif_tmp4_0(0)) = '1') then
        nextState <= b113s0;
      else
        nextState <= b111s0;
      end if;
    when b112s0 =>
      nextState <= b112s1;
    when b112s1 =>
      nextState <= b114s0;
    when b113s0 =>
      nextState <= b113s1;
    when b113s1 =>
      nextState <= b114s0;
    when b114s0 =>
      if (ni7129_suif_tmp134(0) = '1') then
        nextState <= b103s0;
      elsif ((not ni7129_suif_tmp134(0)) = '1') then
        nextState <= b115s0;
      else
        nextState <= b114s0;
      end if;
    when b115s0 =>
      if (ni7131_suif_tmp133(0) = '1') then
        nextState <= b102s0;
      elsif ((not ni7131_suif_tmp133(0)) = '1') then
        nextState <= b116s0;
      else
        nextState <= b115s0;
      end if;
    when b116s0 =>
      nextState <= b16s0;
    when b117s0 =>
      nextState <= b16s0;
    when b118s0 =>
      nextState <= finished;
    when finished =>
      nextState <= finished;
    when others =>
      nextState <= init;
    end case;
  end process;

  process (clk,reset)
  begin
    if (reset='1') then
      newState <= '1';
    elsif (clk'event and clk='1') then
      case thisState is
      when b85s0 =>
       newState <= not s_b85_stall;
      when b90s0 =>
       newState <= not s_b90_stall;
      when b95s0 =>
       newState <= not s_b95_stall;
      when  others =>
       newState <= stateEn;
      end case;
    end if;
  end process;

-- b0s0
  ni6322_y <= X"00";

-- b1s0
  ni6325_x <= X"00";

-- b2s0
  ni6328_suif_tmp3 <= "0000000000000000000000000000000" & cmp_less_s(r_x, X"04");

-- b3s0
  ni6329_suif_tmp4 <= r_suif_tmp3;

-- b4s0
  ni6330_suif_tmp10 <= "0000000000000000000000000000000" & cmp_less_s(r_y, X"04");

-- b5s0
  ni6331_suif_tmp2 <= r_suif_tmp10;

-- b6s0
  ni6332_suif_tmp1 <= "0000000000000000000000000000000" & cmp_less_s(X"11", r_x);

-- b7s0
  ni6333_suif_tmp00 <= r_suif_tmp1;

-- b8s0
  ni6334_suif_tmp00 <= "0000000000000000000000000000000" & cmp_less_s(X"11", r_y);

-- b9s0
  ni6335_suif_tmp2 <= r_suif_tmp00;

-- b10s0
  ni6336_suif_tmp4 <= r_suif_tmp2;

-- b11s0
  ni6337_r_e_g_0 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));

-- b11s1
  ni97_board <= X"0f";

-- b12s0
  ni6338_r_e_g_0 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));

-- b12s1
  ni113_board <= X"00";

-- b13s0
  ni6339_x <= add(r_x, X"01");
  ni6340_suif_tmp0 <= "0000000000000000000000000000000" & cmp_less_s(ni6339_x, X"20");

-- b14s0
  ni6341_y <= add(r_y, X"01");
  ni6342_suif_tmp <= "0000000000000000000000000000000" & cmp_less_s(ni6341_y, X"20");

-- b15s0
  ni6343_avail_self <= X"7fffff";
  ni6344_avail_opp <= X"7fffff";
  ni6345_score_self <= X"00";
  ni6346_score_opp <= X"00";

-- b16s0

-- b16s1
  ni6349_move <= r_stream0_move_input;
  ni6350_move_type <= ashr(ni6349_move, 24)(7 downto 0) and X"ff";
  ni6351_m_x <= add(ashr(ni6349_move(7 downto 0), 0) and X"0f", X"03");
  ni6352_m_y <= add(ashr(ni6349_move(11 downto 0), 4)(7 downto 0) and X"0f", X"03");
  ni6353_m_piece <= ashr(ni6349_move(15 downto 0), 8)(7 downto 0) and X"1f";
  ni6354_m_rotate <= ashr(ni6349_move(20 downto 0), 13)(7 downto 0) and X"07";
  ni6355_suif_tmp_0 <= sign_ext(ni6350_move_type, 32);
  ni6356_suif_tmp5 <= "0000000000000000000000000000000" & eq(ni6355_suif_tmp_0(7 downto 0), X"06");
  ni6774_suif_tmp116 <= "0000000000000000000000000000000" & eq(ni6355_suif_tmp_0(7 downto 0), X"05");
  ni6841_suif_tmp118 <= "0000000000000000000000000000000" & eq(ni6355_suif_tmp_0(7 downto 0), X"09");
  ni6850_suif_tmp120 <= "0000000000000000000000000000000" & eq(ni6355_suif_tmp_0(7 downto 0), X"04");
  ni6917_suif_tmp122 <= "0000000000000000000000000000000" & eq(ni6355_suif_tmp_0(7 downto 0), X"08");
  ni6926_suif_tmp124 <= "0000000000000000000000000000000" & eq(ni6355_suif_tmp_0(7 downto 0), X"03");
  ni6993_suif_tmp126 <= "0000000000000000000000000000000" & eq(ni6355_suif_tmp_0(7 downto 0), X"07");
  ni7002_suif_tmp128 <= "0000000000000000000000000000000" & eq(ni6355_suif_tmp_0(7 downto 0), X"01");
  ni7056_suif_tmp130 <= "0000000000000000000000000000000" & eq(ni6355_suif_tmp_0(7 downto 0), X"02");
  ni7110_suif_tmp132 <= "0000000000000000000000000000000" & eq(ni6355_suif_tmp_0(7 downto 0), X"0a");
  ni6666055_switched <= ni7110_suif_tmp132(0 downto 0) or ni7056_suif_tmp130(0 downto 0) or ni7002_suif_tmp128(0 downto 0) or ni6993_suif_tmp126(0 downto 0) or ni6926_suif_tmp124(0 downto 0) or ni6917_suif_tmp122(0 downto 0) or ni6850_suif_tmp120(0 downto 0) or ni6841_suif_tmp118(0 downto 0) or ni6774_suif_tmp116(0 downto 0) or ni6356_suif_tmp5(0 downto 0);

-- b17s0
  ni6357_utility <= mul2_s(sub(sign_ext(r_score_self, 16), sign_ext(r_score_opp, 16)), X"44")(15 downto 0);
  ni6358_net_lib <= X"0000";
  ni6359_y <= X"04";

-- b18s0
  ni6362_x <= X"04";

-- b19s0
  ni6366_r_e_g_0 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));

-- b19s1
  ni248_board <= p_board_imm2;
  ni6365_temp <= ni248_board;
  ni6367_s_0_0 <= "0000000" & eq(sign_ext(ni6365_temp, 32) and X"00000004", X"00000000") and "0000000" & neq(sign_ext(ni6365_temp, 32) and X"00000010", X"00000000");
  ni6368_o_0_0 <= "0000000" & eq(sign_ext(ni6365_temp, 32) and X"00000008", X"00000000") and "0000000" & neq(sign_ext(ni6365_temp, 32) and X"00000020", X"00000000");
  ni6369_suif_tmp8 <= "0000000000000000000000000000000" & neq(sign_ext(ni6367_s_0_0, 32) or sign_ext(ni6368_o_0_0, 32), X"00000000");

-- b20s0
  ni6370_value_self <= X"0000";
  ni6371_value_opp <= X"0000";
  ni6532_suif_tmp9 <= "0000000000000000000000000000000" & neq(r_s_0_0, X"00");
  ni6373_r_e_g_0 <= add(shl(sub(sign_ext(r_y, 10), "0000000100"), 5), sign_ext(r_x, 10));
  ni6377_r_e_g_1 <= add(shl(sub(sign_ext(r_y, 10), "0000000011"), 5), sub(sign_ext(r_x, 10), "0000000001"));

-- b20s1
  ni321_board <= p_board_imm2;
  ni6372_temp <= ni321_board;
  ni6374_s_m4_0 <= "0000000" & eq(sign_ext(ni6372_temp, 32) and X"00000004", X"00000000");
  ni6375_o_m4_0 <= "0000000" & eq(sign_ext(ni6372_temp, 32) and X"00000008", X"00000000");
  ni353_board <= p_board_imm;
  ni6376_temp <= ni353_board;
  ni6378_s_m3_m1 <= "0000000" & eq(sign_ext(ni6376_temp, 32) and X"00000004", X"00000000");
  ni6379_o_m3_m1 <= "0000000" & eq(sign_ext(ni6376_temp, 32) and X"00000008", X"00000000");
  ni6381_r_e_g_0 <= add(shl(sub(sign_ext(r_y, 10), "0000000011"), 5), sign_ext(r_x, 10));
  ni6385_r_e_g_1 <= add(shl(sub(sign_ext(r_y, 10), "0000000011"), 5), add(sign_ext(r_x, 10), "0000000001"));

-- b20s2
  ni387_board <= p_board_imm2;
  ni6380_temp <= ni387_board;
  ni6382_s_m3_0 <= "0000000" & eq(sign_ext(ni6380_temp, 32) and X"00000004", X"00000000");
  ni6383_o_m3_0 <= "0000000" & eq(sign_ext(ni6380_temp, 32) and X"00000008", X"00000000");
  ni419_board <= p_board_imm;
  ni6384_temp <= ni419_board;
  ni6386_s_m3_1 <= "0000000" & eq(sign_ext(ni6384_temp, 32) and X"00000004", X"00000000");
  ni6387_o_m3_1 <= "0000000" & eq(sign_ext(ni6384_temp, 32) and X"00000008", X"00000000");
  ni6389_r_e_g_0 <= add(shl(sub(sign_ext(r_y, 10), "0000000010"), 5), sub(sign_ext(r_x, 10), "0000000010"));
  ni6393_r_e_g_1 <= add(shl(sub(sign_ext(r_y, 10), "0000000010"), 5), sub(sign_ext(r_x, 10), "0000000001"));

-- b20s3
  ni453_board <= p_board_imm2;
  ni6388_temp <= ni453_board;
  ni6390_s_m2_m2 <= "0000000" & eq(sign_ext(ni6388_temp, 32) and X"00000004", X"00000000");
  ni6391_o_m2_m2 <= "0000000" & eq(sign_ext(ni6388_temp, 32) and X"00000008", X"00000000");
  ni487_board <= p_board_imm;
  ni6392_temp <= ni487_board;
  ni6394_s_m2_m1 <= "0000000" & eq(sign_ext(ni6392_temp, 32) and X"00000004", X"00000000");
  ni6395_o_m2_m1 <= "0000000" & eq(sign_ext(ni6392_temp, 32) and X"00000008", X"00000000");
  ni6397_r_e_g_0 <= add(shl(sub(sign_ext(r_y, 10), "0000000010"), 5), sign_ext(r_x, 10));
  ni6401_r_e_g_1 <= add(shl(sub(sign_ext(r_y, 10), "0000000010"), 5), add(sign_ext(r_x, 10), "0000000001"));

-- b20s4
  ni521_board <= p_board_imm2;
  ni6396_temp <= ni521_board;
  ni6398_s_m2_0 <= "0000000" & eq(sign_ext(ni6396_temp, 32) and X"00000004", X"00000000");
  ni6399_o_m2_0 <= "0000000" & eq(sign_ext(ni6396_temp, 32) and X"00000008", X"00000000");
  ni553_board <= p_board_imm;
  ni6400_temp <= ni553_board;
  ni6402_s_m2_1 <= "0000000" & eq(sign_ext(ni6400_temp, 32) and X"00000004", X"00000000");
  ni6403_o_m2_1 <= "0000000" & eq(sign_ext(ni6400_temp, 32) and X"00000008", X"00000000");
  ni6405_r_e_g_0 <= add(shl(sub(sign_ext(r_y, 10), "0000000010"), 5), add(sign_ext(r_x, 10), "0000000010"));
  ni6409_r_e_g_1 <= add(shl(sub(sign_ext(r_y, 10), "0000000001"), 5), sub(sign_ext(r_x, 10), "0000000011"));

-- b20s5
  ni587_board <= p_board_imm2;
  ni6404_temp <= ni587_board;
  ni6406_s_m2_2 <= "0000000" & eq(sign_ext(ni6404_temp, 32) and X"00000004", X"00000000");
  ni6407_o_m2_2 <= "0000000" & eq(sign_ext(ni6404_temp, 32) and X"00000008", X"00000000");
  ni621_board <= p_board_imm;
  ni6408_temp <= ni621_board;
  ni6410_s_m1_m3 <= "0000000" & eq(sign_ext(ni6408_temp, 32) and X"00000004", X"00000000");
  ni6411_o_m1_m3 <= "0000000" & eq(sign_ext(ni6408_temp, 32) and X"00000008", X"00000000");
  ni6413_r_e_g_0 <= add(shl(sub(sign_ext(r_y, 10), "0000000001"), 5), sub(sign_ext(r_x, 10), "0000000010"));
  ni6417_r_e_g_1 <= add(shl(sub(sign_ext(r_y, 10), "0000000001"), 5), sub(sign_ext(r_x, 10), "0000000001"));

-- b20s6
  ni655_board <= p_board_imm2;
  ni6412_temp <= ni655_board;
  ni6414_s_m1_m2 <= "0000000" & eq(sign_ext(ni6412_temp, 32) and X"00000004", X"00000000");
  ni6415_o_m1_m2 <= "0000000" & eq(sign_ext(ni6412_temp, 32) and X"00000008", X"00000000");
  ni689_board <= p_board_imm;
  ni6416_temp <= ni689_board;
  ni6418_s_m1_m1 <= "0000000" & eq(sign_ext(ni6416_temp, 32) and X"00000004", X"00000000");
  ni6419_o_m1_m1 <= "0000000" & eq(sign_ext(ni6416_temp, 32) and X"00000008", X"00000000");
  ni6421_r_e_g_0 <= add(shl(sub(sign_ext(r_y, 10), "0000000001"), 5), sign_ext(r_x, 10));
  ni6425_r_e_g_1 <= add(shl(sub(sign_ext(r_y, 10), "0000000001"), 5), add(sign_ext(r_x, 10), "0000000001"));

-- b20s7
  ni723_board <= p_board_imm2;
  ni6420_temp <= ni723_board;
  ni6422_s_m1_0 <= "0000000" & eq(sign_ext(ni6420_temp, 32) and X"00000004", X"00000000");
  ni6423_o_m1_0 <= "0000000" & eq(sign_ext(ni6420_temp, 32) and X"00000008", X"00000000");
  ni755_board <= p_board_imm;
  ni6424_temp <= ni755_board;
  ni6426_s_m1_1 <= "0000000" & eq(sign_ext(ni6424_temp, 32) and X"00000004", X"00000000");
  ni6427_o_m1_1 <= "0000000" & eq(sign_ext(ni6424_temp, 32) and X"00000008", X"00000000");
  ni6429_r_e_g_0 <= add(shl(sub(sign_ext(r_y, 10), "0000000001"), 5), add(sign_ext(r_x, 10), "0000000010"));
  ni6433_r_e_g_1 <= add(shl(sub(sign_ext(r_y, 10), "0000000001"), 5), add(sign_ext(r_x, 10), "0000000011"));

-- b20s8
  ni789_board <= p_board_imm2;
  ni6428_temp <= ni789_board;
  ni6430_s_m1_2 <= "0000000" & eq(sign_ext(ni6428_temp, 32) and X"00000004", X"00000000");
  ni6431_o_m1_2 <= "0000000" & eq(sign_ext(ni6428_temp, 32) and X"00000008", X"00000000");
  ni823_board <= p_board_imm;
  ni6432_temp <= ni823_board;
  ni6434_s_m1_3 <= "0000000" & eq(sign_ext(ni6432_temp, 32) and X"00000004", X"00000000");
  ni6435_o_m1_3 <= "0000000" & eq(sign_ext(ni6432_temp, 32) and X"00000008", X"00000000");
  ni6437_r_e_g_0 <= add(shl(sign_ext(r_y, 10), 5), sub(sign_ext(r_x, 10), "0000000100"));
  ni6441_r_e_g_1 <= add(shl(sign_ext(r_y, 10), 5), sub(sign_ext(r_x, 10), "0000000011"));

-- b20s9
  ni857_board <= p_board_imm2;
  ni6436_temp <= ni857_board;
  ni6438_s_0_m4 <= "0000000" & eq(sign_ext(ni6436_temp, 32) and X"00000004", X"00000000");
  ni6439_o_0_m4 <= "0000000" & eq(sign_ext(ni6436_temp, 32) and X"00000008", X"00000000");
  ni889_board <= p_board_imm;
  ni6440_temp <= ni889_board;
  ni6442_s_0_m3 <= "0000000" & eq(sign_ext(ni6440_temp, 32) and X"00000004", X"00000000");
  ni6443_o_0_m3 <= "0000000" & eq(sign_ext(ni6440_temp, 32) and X"00000008", X"00000000");
  ni6445_r_e_g_0 <= add(shl(sign_ext(r_y, 10), 5), sub(sign_ext(r_x, 10), "0000000010"));
  ni6449_r_e_g_1 <= add(shl(sign_ext(r_y, 10), 5), sub(sign_ext(r_x, 10), "0000000001"));

-- b20s10
  ni921_board <= p_board_imm2;
  ni6444_temp <= ni921_board;
  ni6446_s_0_m2 <= "0000000" & eq(sign_ext(ni6444_temp, 32) and X"00000004", X"00000000");
  ni6447_o_0_m2 <= "0000000" & eq(sign_ext(ni6444_temp, 32) and X"00000008", X"00000000");
  ni953_board <= p_board_imm;
  ni6448_temp <= ni953_board;
  ni6450_s_0_m1 <= "0000000" & eq(sign_ext(ni6448_temp, 32) and X"00000004", X"00000000");
  ni6451_o_0_m1 <= "0000000" & eq(sign_ext(ni6448_temp, 32) and X"00000008", X"00000000");
  ni6453_r_e_g_0 <= add(shl(sign_ext(r_y, 10), 5), add(sign_ext(r_x, 10), "0000000001"));
  ni6457_r_e_g_1 <= add(shl(sign_ext(r_y, 10), 5), add(sign_ext(r_x, 10), "0000000010"));

-- b20s11
  ni985_board <= p_board_imm2;
  ni6452_temp <= ni985_board;
  ni6454_s_0_1 <= "0000000" & eq(sign_ext(ni6452_temp, 32) and X"00000004", X"00000000");
  ni6455_o_0_1 <= "0000000" & eq(sign_ext(ni6452_temp, 32) and X"00000008", X"00000000");
  ni1017_board <= p_board_imm;
  ni6456_temp <= ni1017_board;
  ni6458_s_0_2 <= "0000000" & eq(sign_ext(ni6456_temp, 32) and X"00000004", X"00000000");
  ni6459_o_0_2 <= "0000000" & eq(sign_ext(ni6456_temp, 32) and X"00000008", X"00000000");
  ni6461_r_e_g_0 <= add(shl(sign_ext(r_y, 10), 5), add(sign_ext(r_x, 10), "0000000011"));
  ni6465_r_e_g_1 <= add(shl(sign_ext(r_y, 10), 5), add(sign_ext(r_x, 10), "0000000100"));

-- b20s12
  ni1049_board <= p_board_imm2;
  ni6460_temp <= ni1049_board;
  ni6462_s_0_3 <= "0000000" & eq(sign_ext(ni6460_temp, 32) and X"00000004", X"00000000");
  ni6463_o_0_3 <= "0000000" & eq(sign_ext(ni6460_temp, 32) and X"00000008", X"00000000");
  ni1081_board <= p_board_imm;
  ni6464_temp <= ni1081_board;
  ni6466_s_0_4 <= "0000000" & eq(sign_ext(ni6464_temp, 32) and X"00000004", X"00000000");
  ni6467_o_0_4 <= "0000000" & eq(sign_ext(ni6464_temp, 32) and X"00000008", X"00000000");
  ni6469_r_e_g_0 <= add(shl(add(sign_ext(r_y, 10), "0000000001"), 5), sub(sign_ext(r_x, 10), "0000000011"));
  ni6473_r_e_g_1 <= add(shl(add(sign_ext(r_y, 10), "0000000001"), 5), sub(sign_ext(r_x, 10), "0000000010"));

-- b20s13
  ni1113_board <= p_board_imm2;
  ni6468_temp <= ni1113_board;
  ni6470_s_1_m3 <= "0000000" & eq(sign_ext(ni6468_temp, 32) and X"00000004", X"00000000");
  ni6471_o_1_m3 <= "0000000" & eq(sign_ext(ni6468_temp, 32) and X"00000008", X"00000000");
  ni1147_board <= p_board_imm;
  ni6472_temp <= ni1147_board;
  ni6474_s_1_m2 <= "0000000" & eq(sign_ext(ni6472_temp, 32) and X"00000004", X"00000000");
  ni6475_o_1_m2 <= "0000000" & eq(sign_ext(ni6472_temp, 32) and X"00000008", X"00000000");
  ni6477_r_e_g_0 <= add(shl(add(sign_ext(r_y, 10), "0000000001"), 5), sub(sign_ext(r_x, 10), "0000000001"));
  ni6481_r_e_g_1 <= add(shl(add(sign_ext(r_y, 10), "0000000001"), 5), sign_ext(r_x, 10));

-- b20s14
  ni1181_board <= p_board_imm2;
  ni6476_temp <= ni1181_board;
  ni6478_s_1_m1 <= "0000000" & eq(sign_ext(ni6476_temp, 32) and X"00000004", X"00000000");
  ni6479_o_1_m1 <= "0000000" & eq(sign_ext(ni6476_temp, 32) and X"00000008", X"00000000");
  ni1215_board <= p_board_imm;
  ni6480_temp <= ni1215_board;
  ni6482_s_1_0 <= "0000000" & eq(sign_ext(ni6480_temp, 32) and X"00000004", X"00000000");
  ni6483_o_1_0 <= "0000000" & eq(sign_ext(ni6480_temp, 32) and X"00000008", X"00000000");
  ni6485_r_e_g_0 <= add(shl(add(sign_ext(r_y, 10), "0000000001"), 5), add(sign_ext(r_x, 10), "0000000001"));
  ni6489_r_e_g_1 <= add(shl(add(sign_ext(r_y, 10), "0000000001"), 5), add(sign_ext(r_x, 10), "0000000010"));

-- b20s15
  ni1247_board <= p_board_imm2;
  ni6484_temp <= ni1247_board;
  ni6486_s_1_1 <= "0000000" & eq(sign_ext(ni6484_temp, 32) and X"00000004", X"00000000");
  ni6487_o_1_1 <= "0000000" & eq(sign_ext(ni6484_temp, 32) and X"00000008", X"00000000");
  ni1281_board <= p_board_imm;
  ni6488_temp <= ni1281_board;
  ni6490_s_1_2 <= "0000000" & eq(sign_ext(ni6488_temp, 32) and X"00000004", X"00000000");
  ni6491_o_1_2 <= "0000000" & eq(sign_ext(ni6488_temp, 32) and X"00000008", X"00000000");
  ni6493_r_e_g_0 <= add(shl(add(sign_ext(r_y, 10), "0000000001"), 5), add(sign_ext(r_x, 10), "0000000011"));
  ni6497_r_e_g_1 <= add(shl(add(sign_ext(r_y, 10), "0000000010"), 5), sub(sign_ext(r_x, 10), "0000000010"));

-- b20s16
  ni1315_board <= p_board_imm2;
  ni6492_temp <= ni1315_board;
  ni6494_s_1_3 <= "0000000" & eq(sign_ext(ni6492_temp, 32) and X"00000004", X"00000000");
  ni6495_o_1_3 <= "0000000" & eq(sign_ext(ni6492_temp, 32) and X"00000008", X"00000000");
  ni1349_board <= p_board_imm;
  ni6496_temp <= ni1349_board;
  ni6498_s_2_m2 <= "0000000" & eq(sign_ext(ni6496_temp, 32) and X"00000004", X"00000000");
  ni6499_o_2_m2 <= "0000000" & eq(sign_ext(ni6496_temp, 32) and X"00000008", X"00000000");
  ni6501_r_e_g_0 <= add(shl(add(sign_ext(r_y, 10), "0000000010"), 5), sub(sign_ext(r_x, 10), "0000000001"));
  ni6505_r_e_g_1 <= add(shl(add(sign_ext(r_y, 10), "0000000010"), 5), sign_ext(r_x, 10));

-- b20s17
  ni1383_board <= p_board_imm2;
  ni6500_temp <= ni1383_board;
  ni6502_s_2_m1 <= "0000000" & eq(sign_ext(ni6500_temp, 32) and X"00000004", X"00000000");
  ni6503_o_2_m1 <= "0000000" & eq(sign_ext(ni6500_temp, 32) and X"00000008", X"00000000");
  ni1417_board <= p_board_imm;
  ni6504_temp <= ni1417_board;
  ni6506_s_2_0 <= "0000000" & eq(sign_ext(ni6504_temp, 32) and X"00000004", X"00000000");
  ni6507_o_2_0 <= "0000000" & eq(sign_ext(ni6504_temp, 32) and X"00000008", X"00000000");
  ni6509_r_e_g_0 <= add(shl(add(sign_ext(r_y, 10), "0000000010"), 5), add(sign_ext(r_x, 10), "0000000001"));
  ni6513_r_e_g_1 <= add(shl(add(sign_ext(r_y, 10), "0000000010"), 5), add(sign_ext(r_x, 10), "0000000010"));

-- b20s18
  ni1449_board <= p_board_imm2;
  ni6508_temp <= ni1449_board;
  ni6510_s_2_1 <= "0000000" & eq(sign_ext(ni6508_temp, 32) and X"00000004", X"00000000");
  ni6511_o_2_1 <= "0000000" & eq(sign_ext(ni6508_temp, 32) and X"00000008", X"00000000");
  ni1483_board <= p_board_imm;
  ni6512_temp <= ni1483_board;
  ni6514_s_2_2 <= "0000000" & eq(sign_ext(ni6512_temp, 32) and X"00000004", X"00000000");
  ni6515_o_2_2 <= "0000000" & eq(sign_ext(ni6512_temp, 32) and X"00000008", X"00000000");
  ni6517_r_e_g_0 <= add(shl(add(sign_ext(r_y, 10), "0000000011"), 5), sub(sign_ext(r_x, 10), "0000000001"));
  ni6521_r_e_g_1 <= add(shl(add(sign_ext(r_y, 10), "0000000011"), 5), sign_ext(r_x, 10));

-- b20s19
  ni1517_board <= p_board_imm2;
  ni6516_temp <= ni1517_board;
  ni6518_s_3_m1 <= "0000000" & eq(sign_ext(ni6516_temp, 32) and X"00000004", X"00000000");
  ni6519_o_3_m1 <= "0000000" & eq(sign_ext(ni6516_temp, 32) and X"00000008", X"00000000");
  ni1551_board <= p_board_imm;
  ni6520_temp <= ni1551_board;
  ni6522_s_3_0 <= "0000000" & eq(sign_ext(ni6520_temp, 32) and X"00000004", X"00000000");
  ni6523_o_3_0 <= "0000000" & eq(sign_ext(ni6520_temp, 32) and X"00000008", X"00000000");
  ni6525_r_e_g_0 <= add(shl(add(sign_ext(r_y, 10), "0000000011"), 5), add(sign_ext(r_x, 10), "0000000001"));
  ni6529_r_e_g_1 <= add(shl(add(sign_ext(r_y, 10), "0000000100"), 5), sign_ext(r_x, 10));

-- b20s20
  ni1583_board <= p_board_imm2;
  ni6524_temp <= ni1583_board;
  ni6526_s_3_1 <= "0000000" & eq(sign_ext(ni6524_temp, 32) and X"00000004", X"00000000");
  ni6527_o_3_1 <= "0000000" & eq(sign_ext(ni6524_temp, 32) and X"00000008", X"00000000");
  ni1617_board <= p_board_imm;
  ni6528_temp <= ni1617_board;
  ni6530_s_4_0 <= "0000000" & eq(sign_ext(ni6528_temp, 32) and X"00000004", X"00000000");
  ni6531_o_4_0 <= "0000000" & eq(sign_ext(ni6528_temp, 32) and X"00000008", X"00000000");

-- b21s0
  ni6533_suif_tmp11 <= "0000000000000000000000000000000" & neq(r_s_1_0(1 downto 0), "00");

-- b22s0
  ni6534_value_self <= X"0001";
  ni6535_suif_tmp12 <= "0000000000000000000000000000000" & neq(r_s_2_0(1 downto 0), "00");

-- b23s0
  ni6536_val <= X"01";
  ni6537_suif_tmp13 <= "0000000000000000000000000000000" & neq(r_s_3_0(1 downto 0), "00");
  ni6538_val <= add(X"01", add(add(add(r_s_4_0, r_s_3_1), r_s_3_m1), X"01"));
  s_b23_predicates(0) <= 
    '1' when ni6537_suif_tmp13(0) = '1' else
    '0';
  s_b23_predicates(1) <= 
    '1' when (not ni6537_suif_tmp13(0)) = '1' else
    '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b23s0) then
      s_b23_predicates_r(0) <= s_b23_predicates(0);
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b23s0) then
      s_b23_predicates_r(1) <= s_b23_predicates(1);
      end if;
    end if;
  end process;

  ni6539_suif_tmp14 <= "0000000000000000000000000000000" & neq(r_s_2_1(1 downto 0), "00");
  ni6540_val <= add(t_0, add(add(add(r_s_3_1, r_s_2_2), r_s_1_1), X"01"));
  t_0 <= 
    ni6538_val when s_b23_predicates(0) = '1' else
    ni6536_val;
  s_b23_predicates(2) <= 
    '1' when ni6539_suif_tmp14(0) = '1' else
    '0';
  s_b23_predicates(3) <= 
    '1' when (not ni6539_suif_tmp14(0)) = '1' else
    '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b23s0) then
      s_b23_predicates_r(2) <= s_b23_predicates(2);
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b23s0) then
      s_b23_predicates_r(3) <= s_b23_predicates(3);
      end if;
    end if;
  end process;

  ni6541_suif_tmp15 <= "0000000000000000000000000000000" & neq(r_s_2_m1(1 downto 0), "00");
  ni6542_val <= add(t_1, add(add(add(r_s_3_m1, r_s_2_m2), r_s_1_m1), X"01"));
  t_1 <= 
    ni6540_val when s_b23_predicates(2) = '1' else
    ni6538_val when s_b23_predicates(0) = '1' else
    ni6536_val;
  s_b23_predicates(4) <= 
    '1' when ni6541_suif_tmp15(0) = '1' else
    '0';
  s_b23_predicates(5) <= 
    '1' when (not ni6541_suif_tmp15(0)) = '1' else
    '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b23s0) then
      s_b23_predicates_r(4) <= s_b23_predicates(4);
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b23s0) then
      s_b23_predicates_r(5) <= s_b23_predicates(5);
      end if;
    end if;
  end process;

  ni6543_value_self <= add(X"0001", sign_ext(t_2, 16));
  t_2 <= 
    ni6542_val when s_b23_predicates(4) = '1' else
    ni6540_val when s_b23_predicates(2) = '1' else
    ni6538_val when s_b23_predicates(0) = '1' else
    ni6536_val;

-- b24s0
  ni6544_suif_tmp16 <= "0000000000000000000000000000000" & neq(r_s_1_1(1 downto 0), "00");

-- b25s0
  ni6545_val <= X"01";
  ni6546_suif_tmp17 <= "0000000000000000000000000000000" & neq(r_s_2_1(1 downto 0), "00");
  ni6547_val <= add(X"01", add(add(add(r_s_3_1, r_s_2_2), r_s_2_0), X"01"));
  s_b25_predicates(0) <= 
    '1' when ni6546_suif_tmp17(0) = '1' else
    '0';
  s_b25_predicates(1) <= 
    '1' when (not ni6546_suif_tmp17(0)) = '1' else
    '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b25s0) then
      s_b25_predicates_r(0) <= s_b25_predicates(0);
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b25s0) then
      s_b25_predicates_r(1) <= s_b25_predicates(1);
      end if;
    end if;
  end process;

  ni6548_suif_tmp18 <= "0000000000000000000000000000000" & neq(r_s_1_2(1 downto 0), "00");
  ni6549_val <= add(t_3, add(add(add(r_s_2_2, r_s_0_2), r_s_1_3), X"01"));
  t_3 <= 
    ni6547_val when s_b25_predicates(0) = '1' else
    ni6545_val;
  s_b25_predicates(2) <= 
    '1' when ni6548_suif_tmp18(0) = '1' else
    '0';
  s_b25_predicates(3) <= 
    '1' when (not ni6548_suif_tmp18(0)) = '1' else
    '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b25s0) then
      s_b25_predicates_r(2) <= s_b25_predicates(2);
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b25s0) then
      s_b25_predicates_r(3) <= s_b25_predicates(3);
      end if;
    end if;
  end process;

  ni6550_suif_tmp19 <= "0000000000000000000000000000000" & neq(r_s_0_1(1 downto 0), "00");
  ni6551_val <= add(t_4, add(add(r_s_m1_1, r_s_0_2), X"01"));
  t_4 <= 
    ni6549_val when s_b25_predicates(2) = '1' else
    ni6547_val when s_b25_predicates(0) = '1' else
    ni6545_val;
  s_b25_predicates(4) <= 
    '1' when ni6550_suif_tmp19(0) = '1' else
    '0';
  s_b25_predicates(5) <= 
    '1' when (not ni6550_suif_tmp19(0)) = '1' else
    '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b25s0) then
      s_b25_predicates_r(4) <= s_b25_predicates(4);
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b25s0) then
      s_b25_predicates_r(5) <= s_b25_predicates(5);
      end if;
    end if;
  end process;

  ni6552_value_self <= add(r_value_self, sign_ext(t_5, 16));
  t_5 <= 
    ni6551_val when s_b25_predicates(4) = '1' else
    ni6549_val when s_b25_predicates(2) = '1' else
    ni6547_val when s_b25_predicates(0) = '1' else
    ni6545_val;

-- b26s0
  ni6553_suif_tmp20 <= "0000000000000000000000000000000" & neq(r_s_1_m1(1 downto 0), "00");

-- b27s0
  ni6554_val <= X"01";
  ni6555_suif_tmp21 <= "0000000000000000000000000000000" & neq(r_s_2_m1(1 downto 0), "00");
  ni6556_val <= add(X"01", add(add(add(r_s_3_m1, r_s_2_m2), r_s_2_0), X"01"));
  s_b27_predicates(0) <= 
    '1' when ni6555_suif_tmp21(0) = '1' else
    '0';
  s_b27_predicates(1) <= 
    '1' when (not ni6555_suif_tmp21(0)) = '1' else
    '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b27s0) then
      s_b27_predicates_r(0) <= s_b27_predicates(0);
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b27s0) then
      s_b27_predicates_r(1) <= s_b27_predicates(1);
      end if;
    end if;
  end process;

  ni6557_suif_tmp22 <= "0000000000000000000000000000000" & neq(r_s_1_m2(1 downto 0), "00");
  ni6558_val <= add(t_6, add(add(add(r_s_2_m2, r_s_0_m2), r_s_1_m3), X"01"));
  t_6 <= 
    ni6556_val when s_b27_predicates(0) = '1' else
    ni6554_val;
  s_b27_predicates(2) <= 
    '1' when ni6557_suif_tmp22(0) = '1' else
    '0';
  s_b27_predicates(3) <= 
    '1' when (not ni6557_suif_tmp22(0)) = '1' else
    '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b27s0) then
      s_b27_predicates_r(2) <= s_b27_predicates(2);
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b27s0) then
      s_b27_predicates_r(3) <= s_b27_predicates(3);
      end if;
    end if;
  end process;

  ni6559_suif_tmp23 <= "0000000000000000000000000000000" & neq(r_s_0_m1(1 downto 0), "00");
  ni6560_val <= add(t_7, add(add(r_s_m1_m1, r_s_0_m2), X"01"));
  t_7 <= 
    ni6558_val when s_b27_predicates(2) = '1' else
    ni6556_val when s_b27_predicates(0) = '1' else
    ni6554_val;
  s_b27_predicates(4) <= 
    '1' when ni6559_suif_tmp23(0) = '1' else
    '0';
  s_b27_predicates(5) <= 
    '1' when (not ni6559_suif_tmp23(0)) = '1' else
    '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b27s0) then
      s_b27_predicates_r(4) <= s_b27_predicates(4);
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b27s0) then
      s_b27_predicates_r(5) <= s_b27_predicates(5);
      end if;
    end if;
  end process;

  ni6561_value_self <= add(r_value_self, sign_ext(t_8, 16));
  t_8 <= 
    ni6560_val when s_b27_predicates(4) = '1' else
    ni6558_val when s_b27_predicates(2) = '1' else
    ni6556_val when s_b27_predicates(0) = '1' else
    ni6554_val;

-- b28s0
  ni6562_suif_tmp24 <= "0000000000000000000000000000000" & neq(r_s_m1_0(1 downto 0), "00");

-- b29s0
  ni6563_value_self <= add(r_value_self, X"0001");
  ni6564_suif_tmp25 <= "0000000000000000000000000000000" & neq(r_s_m2_0(1 downto 0), "00");

-- b30s0
  ni6565_val <= X"01";
  ni6566_suif_tmp26 <= "0000000000000000000000000000000" & neq(r_s_m3_0(1 downto 0), "00");
  ni6567_val <= add(X"01", add(add(add(r_s_m4_0, r_s_m3_1), r_s_m3_m1), X"01"));
  s_b30_predicates(0) <= 
    '1' when ni6566_suif_tmp26(0) = '1' else
    '0';
  s_b30_predicates(1) <= 
    '1' when (not ni6566_suif_tmp26(0)) = '1' else
    '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b30s0) then
      s_b30_predicates_r(0) <= s_b30_predicates(0);
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b30s0) then
      s_b30_predicates_r(1) <= s_b30_predicates(1);
      end if;
    end if;
  end process;

  ni6568_suif_tmp27 <= "0000000000000000000000000000000" & neq(r_s_m2_1(1 downto 0), "00");
  ni6569_val <= add(t_9, add(add(add(r_s_m3_1, r_s_m2_2), r_s_m1_1), X"01"));
  t_9 <= 
    ni6567_val when s_b30_predicates(0) = '1' else
    ni6565_val;
  s_b30_predicates(2) <= 
    '1' when ni6568_suif_tmp27(0) = '1' else
    '0';
  s_b30_predicates(3) <= 
    '1' when (not ni6568_suif_tmp27(0)) = '1' else
    '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b30s0) then
      s_b30_predicates_r(2) <= s_b30_predicates(2);
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b30s0) then
      s_b30_predicates_r(3) <= s_b30_predicates(3);
      end if;
    end if;
  end process;

  ni6570_suif_tmp28 <= "0000000000000000000000000000000" & neq(r_s_m2_m1(1 downto 0), "00");
  ni6571_val <= add(t_10, add(add(add(r_s_m3_m1, r_s_m2_m2), r_s_m1_m1), X"01"));
  t_10 <= 
    ni6569_val when s_b30_predicates(2) = '1' else
    ni6567_val when s_b30_predicates(0) = '1' else
    ni6565_val;
  s_b30_predicates(4) <= 
    '1' when ni6570_suif_tmp28(0) = '1' else
    '0';
  s_b30_predicates(5) <= 
    '1' when (not ni6570_suif_tmp28(0)) = '1' else
    '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b30s0) then
      s_b30_predicates_r(4) <= s_b30_predicates(4);
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b30s0) then
      s_b30_predicates_r(5) <= s_b30_predicates(5);
      end if;
    end if;
  end process;

  ni6572_value_self <= add(r_value_self, sign_ext(t_11, 16));
  t_11 <= 
    ni6571_val when s_b30_predicates(4) = '1' else
    ni6569_val when s_b30_predicates(2) = '1' else
    ni6567_val when s_b30_predicates(0) = '1' else
    ni6565_val;

-- b31s0
  ni6573_suif_tmp29 <= "0000000000000000000000000000000" & neq(r_s_m1_1(1 downto 0), "00");

-- b32s0
  ni6574_val <= X"01";
  ni6575_suif_tmp30 <= "0000000000000000000000000000000" & neq(r_s_m2_1(1 downto 0), "00");
  ni6576_val <= add(X"01", add(add(add(r_s_m3_1, r_s_m2_2), r_s_m2_0), X"01"));
  s_b32_predicates(0) <= 
    '1' when ni6575_suif_tmp30(0) = '1' else
    '0';
  s_b32_predicates(1) <= 
    '1' when (not ni6575_suif_tmp30(0)) = '1' else
    '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b32s0) then
      s_b32_predicates_r(0) <= s_b32_predicates(0);
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b32s0) then
      s_b32_predicates_r(1) <= s_b32_predicates(1);
      end if;
    end if;
  end process;

  ni6577_suif_tmp31 <= "0000000000000000000000000000000" & neq(r_s_m1_2(1 downto 0), "00");
  ni6578_val <= add(t_12, add(add(add(r_s_m2_2, r_s_0_2), r_s_m1_3), X"01"));
  t_12 <= 
    ni6576_val when s_b32_predicates(0) = '1' else
    ni6574_val;
  s_b32_predicates(2) <= 
    '1' when ni6577_suif_tmp31(0) = '1' else
    '0';
  s_b32_predicates(3) <= 
    '1' when (not ni6577_suif_tmp31(0)) = '1' else
    '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b32s0) then
      s_b32_predicates_r(2) <= s_b32_predicates(2);
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b32s0) then
      s_b32_predicates_r(3) <= s_b32_predicates(3);
      end if;
    end if;
  end process;

  ni6579_suif_tmp32 <= "0000000000000000000000000000000" & neq(r_s_0_1(1 downto 0), "00");
  ni6580_val <= add(t_13, add(add(r_s_1_1, r_s_0_2), X"01"));
  t_13 <= 
    ni6578_val when s_b32_predicates(2) = '1' else
    ni6576_val when s_b32_predicates(0) = '1' else
    ni6574_val;
  s_b32_predicates(4) <= 
    '1' when ni6579_suif_tmp32(0) = '1' else
    '0';
  s_b32_predicates(5) <= 
    '1' when (not ni6579_suif_tmp32(0)) = '1' else
    '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b32s0) then
      s_b32_predicates_r(4) <= s_b32_predicates(4);
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b32s0) then
      s_b32_predicates_r(5) <= s_b32_predicates(5);
      end if;
    end if;
  end process;

  ni6581_value_self <= add(r_value_self, sign_ext(t_14, 16));
  t_14 <= 
    ni6580_val when s_b32_predicates(4) = '1' else
    ni6578_val when s_b32_predicates(2) = '1' else
    ni6576_val when s_b32_predicates(0) = '1' else
    ni6574_val;

-- b33s0
  ni6582_suif_tmp33 <= "0000000000000000000000000000000" & neq(r_s_m1_m1(1 downto 0), "00");

-- b34s0
  ni6583_val <= X"01";
  ni6584_suif_tmp34 <= "0000000000000000000000000000000" & neq(r_s_m2_m1(1 downto 0), "00");
  ni6585_val <= add(X"01", add(add(add(r_s_m3_m1, r_s_m2_m2), r_s_m2_0), X"01"));
  s_b34_predicates(0) <= 
    '1' when ni6584_suif_tmp34(0) = '1' else
    '0';
  s_b34_predicates(1) <= 
    '1' when (not ni6584_suif_tmp34(0)) = '1' else
    '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b34s0) then
      s_b34_predicates_r(0) <= s_b34_predicates(0);
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b34s0) then
      s_b34_predicates_r(1) <= s_b34_predicates(1);
      end if;
    end if;
  end process;

  ni6586_suif_tmp35 <= "0000000000000000000000000000000" & neq(r_s_m1_m2(1 downto 0), "00");
  ni6587_val <= add(t_15, add(add(add(r_s_m2_m2, r_s_0_m2), r_s_m1_m3), X"01"));
  t_15 <= 
    ni6585_val when s_b34_predicates(0) = '1' else
    ni6583_val;
  s_b34_predicates(2) <= 
    '1' when ni6586_suif_tmp35(0) = '1' else
    '0';
  s_b34_predicates(3) <= 
    '1' when (not ni6586_suif_tmp35(0)) = '1' else
    '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b34s0) then
      s_b34_predicates_r(2) <= s_b34_predicates(2);
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b34s0) then
      s_b34_predicates_r(3) <= s_b34_predicates(3);
      end if;
    end if;
  end process;

  ni6588_suif_tmp36 <= "0000000000000000000000000000000" & neq(r_s_0_m1(1 downto 0), "00");
  ni6589_val <= add(t_16, add(add(r_s_1_m1, r_s_0_m2), X"01"));
  t_16 <= 
    ni6587_val when s_b34_predicates(2) = '1' else
    ni6585_val when s_b34_predicates(0) = '1' else
    ni6583_val;
  s_b34_predicates(4) <= 
    '1' when ni6588_suif_tmp36(0) = '1' else
    '0';
  s_b34_predicates(5) <= 
    '1' when (not ni6588_suif_tmp36(0)) = '1' else
    '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b34s0) then
      s_b34_predicates_r(4) <= s_b34_predicates(4);
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b34s0) then
      s_b34_predicates_r(5) <= s_b34_predicates(5);
      end if;
    end if;
  end process;

  ni6590_value_self <= add(r_value_self, sign_ext(t_17, 16));
  t_17 <= 
    ni6589_val when s_b34_predicates(4) = '1' else
    ni6587_val when s_b34_predicates(2) = '1' else
    ni6585_val when s_b34_predicates(0) = '1' else
    ni6583_val;

-- b35s0
  ni6591_suif_tmp37 <= "0000000000000000000000000000000" & neq(r_s_0_1(1 downto 0), "00");

-- b36s0
  ni6592_value_self <= add(r_value_self, X"0001");
  ni6593_suif_tmp38 <= "0000000000000000000000000000000" & neq(r_s_0_2(1 downto 0), "00");

-- b37s0
  ni6594_val <= X"01";
  ni6595_suif_tmp39 <= "0000000000000000000000000000000" & neq(r_s_0_3(1 downto 0), "00");
  ni6596_val <= add(X"01", add(add(add(r_s_0_4, r_s_1_3), r_s_m1_3), X"01"));
  s_b37_predicates(0) <= 
    '1' when ni6595_suif_tmp39(0) = '1' else
    '0';
  s_b37_predicates(1) <= 
    '1' when (not ni6595_suif_tmp39(0)) = '1' else
    '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b37s0) then
      s_b37_predicates_r(0) <= s_b37_predicates(0);
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b37s0) then
      s_b37_predicates_r(1) <= s_b37_predicates(1);
      end if;
    end if;
  end process;

  ni6597_suif_tmp40 <= "0000000000000000000000000000000" & neq(r_s_1_2(1 downto 0), "00");
  ni6598_val <= add(t_18, add(add(add(r_s_1_3, r_s_2_2), r_s_1_1), X"01"));
  t_18 <= 
    ni6596_val when s_b37_predicates(0) = '1' else
    ni6594_val;
  s_b37_predicates(2) <= 
    '1' when ni6597_suif_tmp40(0) = '1' else
    '0';
  s_b37_predicates(3) <= 
    '1' when (not ni6597_suif_tmp40(0)) = '1' else
    '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b37s0) then
      s_b37_predicates_r(2) <= s_b37_predicates(2);
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b37s0) then
      s_b37_predicates_r(3) <= s_b37_predicates(3);
      end if;
    end if;
  end process;

  ni6599_suif_tmp41 <= "0000000000000000000000000000000" & neq(r_s_m1_2(1 downto 0), "00");
  ni6600_val <= add(t_19, add(add(add(r_s_m1_3, r_s_m2_2), r_s_m1_1), X"01"));
  t_19 <= 
    ni6598_val when s_b37_predicates(2) = '1' else
    ni6596_val when s_b37_predicates(0) = '1' else
    ni6594_val;
  s_b37_predicates(4) <= 
    '1' when ni6599_suif_tmp41(0) = '1' else
    '0';
  s_b37_predicates(5) <= 
    '1' when (not ni6599_suif_tmp41(0)) = '1' else
    '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b37s0) then
      s_b37_predicates_r(4) <= s_b37_predicates(4);
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b37s0) then
      s_b37_predicates_r(5) <= s_b37_predicates(5);
      end if;
    end if;
  end process;

  ni6601_value_self <= add(r_value_self, sign_ext(t_20, 16));
  t_20 <= 
    ni6600_val when s_b37_predicates(4) = '1' else
    ni6598_val when s_b37_predicates(2) = '1' else
    ni6596_val when s_b37_predicates(0) = '1' else
    ni6594_val;

-- b38s0
  ni6602_suif_tmp42 <= "0000000000000000000000000000000" & neq(r_s_1_1(1 downto 0), "00");

-- b39s0
  ni6603_val <= X"01";
  ni6604_suif_tmp43 <= "0000000000000000000000000000000" & neq(r_s_1_2(1 downto 0), "00");
  ni6605_val <= add(X"01", add(add(add(r_s_1_3, r_s_2_2), r_s_0_2), X"01"));
  s_b39_predicates(0) <= 
    '1' when ni6604_suif_tmp43(0) = '1' else
    '0';
  s_b39_predicates(1) <= 
    '1' when (not ni6604_suif_tmp43(0)) = '1' else
    '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b39s0) then
      s_b39_predicates_r(0) <= s_b39_predicates(0);
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b39s0) then
      s_b39_predicates_r(1) <= s_b39_predicates(1);
      end if;
    end if;
  end process;

  ni6606_suif_tmp44 <= "0000000000000000000000000000000" & neq(r_s_2_1(1 downto 0), "00");
  ni6607_val <= add(t_21, add(add(add(r_s_2_2, r_s_2_0), r_s_3_1), X"01"));
  t_21 <= 
    ni6605_val when s_b39_predicates(0) = '1' else
    ni6603_val;
  s_b39_predicates(2) <= 
    '1' when ni6606_suif_tmp44(0) = '1' else
    '0';
  s_b39_predicates(3) <= 
    '1' when (not ni6606_suif_tmp44(0)) = '1' else
    '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b39s0) then
      s_b39_predicates_r(2) <= s_b39_predicates(2);
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b39s0) then
      s_b39_predicates_r(3) <= s_b39_predicates(3);
      end if;
    end if;
  end process;

  ni6608_suif_tmp45 <= "0000000000000000000000000000000" & neq(r_s_1_0(1 downto 0), "00");
  ni6609_val <= add(t_22, add(add(r_s_1_m1, r_s_2_0), X"01"));
  t_22 <= 
    ni6607_val when s_b39_predicates(2) = '1' else
    ni6605_val when s_b39_predicates(0) = '1' else
    ni6603_val;
  s_b39_predicates(4) <= 
    '1' when ni6608_suif_tmp45(0) = '1' else
    '0';
  s_b39_predicates(5) <= 
    '1' when (not ni6608_suif_tmp45(0)) = '1' else
    '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b39s0) then
      s_b39_predicates_r(4) <= s_b39_predicates(4);
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b39s0) then
      s_b39_predicates_r(5) <= s_b39_predicates(5);
      end if;
    end if;
  end process;

  ni6610_value_self <= add(r_value_self, sign_ext(t_23, 16));
  t_23 <= 
    ni6609_val when s_b39_predicates(4) = '1' else
    ni6607_val when s_b39_predicates(2) = '1' else
    ni6605_val when s_b39_predicates(0) = '1' else
    ni6603_val;

-- b40s0
  ni6611_suif_tmp46 <= "0000000000000000000000000000000" & neq(r_s_m1_1(1 downto 0), "00");

-- b41s0
  ni6612_val <= X"01";
  ni6613_suif_tmp47 <= "0000000000000000000000000000000" & neq(r_s_m1_2(1 downto 0), "00");
  ni6614_val <= add(X"01", add(add(add(r_s_m1_3, r_s_m2_2), r_s_0_2), X"01"));
  s_b41_predicates(0) <= 
    '1' when ni6613_suif_tmp47(0) = '1' else
    '0';
  s_b41_predicates(1) <= 
    '1' when (not ni6613_suif_tmp47(0)) = '1' else
    '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b41s0) then
      s_b41_predicates_r(0) <= s_b41_predicates(0);
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b41s0) then
      s_b41_predicates_r(1) <= s_b41_predicates(1);
      end if;
    end if;
  end process;

  ni6615_suif_tmp48 <= "0000000000000000000000000000000" & neq(r_s_m2_1(1 downto 0), "00");
  ni6616_val <= add(t_24, add(add(add(r_s_m2_2, r_s_m2_0), r_s_m3_1), X"01"));
  t_24 <= 
    ni6614_val when s_b41_predicates(0) = '1' else
    ni6612_val;
  s_b41_predicates(2) <= 
    '1' when ni6615_suif_tmp48(0) = '1' else
    '0';
  s_b41_predicates(3) <= 
    '1' when (not ni6615_suif_tmp48(0)) = '1' else
    '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b41s0) then
      s_b41_predicates_r(2) <= s_b41_predicates(2);
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b41s0) then
      s_b41_predicates_r(3) <= s_b41_predicates(3);
      end if;
    end if;
  end process;

  ni6617_suif_tmp49 <= "0000000000000000000000000000000" & neq(r_s_m1_0(1 downto 0), "00");
  ni6618_val <= add(t_25, add(add(r_s_m1_m1, r_s_m2_0), X"01"));
  t_25 <= 
    ni6616_val when s_b41_predicates(2) = '1' else
    ni6614_val when s_b41_predicates(0) = '1' else
    ni6612_val;
  s_b41_predicates(4) <= 
    '1' when ni6617_suif_tmp49(0) = '1' else
    '0';
  s_b41_predicates(5) <= 
    '1' when (not ni6617_suif_tmp49(0)) = '1' else
    '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b41s0) then
      s_b41_predicates_r(4) <= s_b41_predicates(4);
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b41s0) then
      s_b41_predicates_r(5) <= s_b41_predicates(5);
      end if;
    end if;
  end process;

  ni6619_value_self <= add(r_value_self, sign_ext(t_26, 16));
  t_26 <= 
    ni6618_val when s_b41_predicates(4) = '1' else
    ni6616_val when s_b41_predicates(2) = '1' else
    ni6614_val when s_b41_predicates(0) = '1' else
    ni6612_val;

-- b42s0
  ni6620_suif_tmp50 <= "0000000000000000000000000000000" & neq(r_s_0_m1(1 downto 0), "00");

-- b43s0
  ni6621_value_self <= add(r_value_self, X"0001");
  ni6622_suif_tmp51 <= "0000000000000000000000000000000" & neq(r_s_0_m2(1 downto 0), "00");

-- b44s0
  ni6623_val <= X"01";
  ni6624_suif_tmp52 <= "0000000000000000000000000000000" & neq(r_s_0_m3(1 downto 0), "00");
  ni6625_val <= add(X"01", add(add(add(r_s_0_m4, r_s_1_m3), r_s_m1_m3), X"01"));
  s_b44_predicates(0) <= 
    '1' when ni6624_suif_tmp52(0) = '1' else
    '0';
  s_b44_predicates(1) <= 
    '1' when (not ni6624_suif_tmp52(0)) = '1' else
    '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b44s0) then
      s_b44_predicates_r(0) <= s_b44_predicates(0);
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b44s0) then
      s_b44_predicates_r(1) <= s_b44_predicates(1);
      end if;
    end if;
  end process;

  ni6626_suif_tmp53 <= "0000000000000000000000000000000" & neq(r_s_1_m2(1 downto 0), "00");
  ni6627_val <= add(t_27, add(add(add(r_s_1_m3, r_s_2_m2), r_s_1_m1), X"01"));
  t_27 <= 
    ni6625_val when s_b44_predicates(0) = '1' else
    ni6623_val;
  s_b44_predicates(2) <= 
    '1' when ni6626_suif_tmp53(0) = '1' else
    '0';
  s_b44_predicates(3) <= 
    '1' when (not ni6626_suif_tmp53(0)) = '1' else
    '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b44s0) then
      s_b44_predicates_r(2) <= s_b44_predicates(2);
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b44s0) then
      s_b44_predicates_r(3) <= s_b44_predicates(3);
      end if;
    end if;
  end process;

  ni6628_suif_tmp54 <= "0000000000000000000000000000000" & neq(r_s_m1_m2(1 downto 0), "00");
  ni6629_val <= add(t_28, add(add(add(r_s_m1_m3, r_s_m2_m2), r_s_m1_m1), X"01"));
  t_28 <= 
    ni6627_val when s_b44_predicates(2) = '1' else
    ni6625_val when s_b44_predicates(0) = '1' else
    ni6623_val;
  s_b44_predicates(4) <= 
    '1' when ni6628_suif_tmp54(0) = '1' else
    '0';
  s_b44_predicates(5) <= 
    '1' when (not ni6628_suif_tmp54(0)) = '1' else
    '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b44s0) then
      s_b44_predicates_r(4) <= s_b44_predicates(4);
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b44s0) then
      s_b44_predicates_r(5) <= s_b44_predicates(5);
      end if;
    end if;
  end process;

  ni6630_value_self <= add(r_value_self, sign_ext(t_29, 16));
  t_29 <= 
    ni6629_val when s_b44_predicates(4) = '1' else
    ni6627_val when s_b44_predicates(2) = '1' else
    ni6625_val when s_b44_predicates(0) = '1' else
    ni6623_val;

-- b45s0
  ni6631_suif_tmp55 <= "0000000000000000000000000000000" & neq(r_s_1_m1(1 downto 0), "00");

-- b46s0
  ni6632_val <= X"01";
  ni6633_suif_tmp56 <= "0000000000000000000000000000000" & neq(r_s_1_m2(1 downto 0), "00");
  ni6634_val <= add(X"01", add(add(add(r_s_1_m3, r_s_2_m2), r_s_0_m2), X"01"));
  s_b46_predicates(0) <= 
    '1' when ni6633_suif_tmp56(0) = '1' else
    '0';
  s_b46_predicates(1) <= 
    '1' when (not ni6633_suif_tmp56(0)) = '1' else
    '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b46s0) then
      s_b46_predicates_r(0) <= s_b46_predicates(0);
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b46s0) then
      s_b46_predicates_r(1) <= s_b46_predicates(1);
      end if;
    end if;
  end process;

  ni6635_suif_tmp57 <= "0000000000000000000000000000000" & neq(r_s_2_m1(1 downto 0), "00");
  ni6636_val <= add(t_30, add(add(add(r_s_2_m2, r_s_2_0), r_s_3_m1), X"01"));
  t_30 <= 
    ni6634_val when s_b46_predicates(0) = '1' else
    ni6632_val;
  s_b46_predicates(2) <= 
    '1' when ni6635_suif_tmp57(0) = '1' else
    '0';
  s_b46_predicates(3) <= 
    '1' when (not ni6635_suif_tmp57(0)) = '1' else
    '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b46s0) then
      s_b46_predicates_r(2) <= s_b46_predicates(2);
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b46s0) then
      s_b46_predicates_r(3) <= s_b46_predicates(3);
      end if;
    end if;
  end process;

  ni6637_suif_tmp58 <= "0000000000000000000000000000000" & neq(r_s_1_0(1 downto 0), "00");
  ni6638_val <= add(t_31, add(add(r_s_1_1, r_s_2_0), X"01"));
  t_31 <= 
    ni6636_val when s_b46_predicates(2) = '1' else
    ni6634_val when s_b46_predicates(0) = '1' else
    ni6632_val;
  s_b46_predicates(4) <= 
    '1' when ni6637_suif_tmp58(0) = '1' else
    '0';
  s_b46_predicates(5) <= 
    '1' when (not ni6637_suif_tmp58(0)) = '1' else
    '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b46s0) then
      s_b46_predicates_r(4) <= s_b46_predicates(4);
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b46s0) then
      s_b46_predicates_r(5) <= s_b46_predicates(5);
      end if;
    end if;
  end process;

  ni6639_value_self <= add(r_value_self, sign_ext(t_32, 16));
  t_32 <= 
    ni6638_val when s_b46_predicates(4) = '1' else
    ni6636_val when s_b46_predicates(2) = '1' else
    ni6634_val when s_b46_predicates(0) = '1' else
    ni6632_val;

-- b47s0
  ni6640_suif_tmp59 <= "0000000000000000000000000000000" & neq(r_s_m1_m1(1 downto 0), "00");

-- b48s0
  ni6641_val <= X"01";
  ni6642_suif_tmp60 <= "0000000000000000000000000000000" & neq(r_s_m1_m2(1 downto 0), "00");
  ni6643_val <= add(X"01", add(add(add(r_s_m1_m3, r_s_m2_m2), r_s_0_m2), X"01"));
  s_b48_predicates(0) <= 
    '1' when ni6642_suif_tmp60(0) = '1' else
    '0';
  s_b48_predicates(1) <= 
    '1' when (not ni6642_suif_tmp60(0)) = '1' else
    '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b48s0) then
      s_b48_predicates_r(0) <= s_b48_predicates(0);
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b48s0) then
      s_b48_predicates_r(1) <= s_b48_predicates(1);
      end if;
    end if;
  end process;

  ni6644_suif_tmp61 <= "0000000000000000000000000000000" & neq(r_s_m2_m1(1 downto 0), "00");
  ni6645_val <= add(t_33, add(add(add(r_s_m2_m2, r_s_m2_0), r_s_m3_m1), X"01"));
  t_33 <= 
    ni6643_val when s_b48_predicates(0) = '1' else
    ni6641_val;
  s_b48_predicates(2) <= 
    '1' when ni6644_suif_tmp61(0) = '1' else
    '0';
  s_b48_predicates(3) <= 
    '1' when (not ni6644_suif_tmp61(0)) = '1' else
    '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b48s0) then
      s_b48_predicates_r(2) <= s_b48_predicates(2);
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b48s0) then
      s_b48_predicates_r(3) <= s_b48_predicates(3);
      end if;
    end if;
  end process;

  ni6646_suif_tmp62 <= "0000000000000000000000000000000" & neq(r_s_m1_0(1 downto 0), "00");
  ni6647_val <= add(t_34, add(add(r_s_m1_1, r_s_m2_0), X"01"));
  t_34 <= 
    ni6645_val when s_b48_predicates(2) = '1' else
    ni6643_val when s_b48_predicates(0) = '1' else
    ni6641_val;
  s_b48_predicates(4) <= 
    '1' when ni6646_suif_tmp62(0) = '1' else
    '0';
  s_b48_predicates(5) <= 
    '1' when (not ni6646_suif_tmp62(0)) = '1' else
    '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b48s0) then
      s_b48_predicates_r(4) <= s_b48_predicates(4);
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b48s0) then
      s_b48_predicates_r(5) <= s_b48_predicates(5);
      end if;
    end if;
  end process;

  ni6648_value_self <= add(r_value_self, sign_ext(t_35, 16));
  t_35 <= 
    ni6647_val when s_b48_predicates(4) = '1' else
    ni6645_val when s_b48_predicates(2) = '1' else
    ni6643_val when s_b48_predicates(0) = '1' else
    ni6641_val;

-- b49s0
  ni6649_suif_tmp63 <= "0000000000000000000000000000000" & neq(r_o_0_0, X"00");

-- b50s0
  ni6650_suif_tmp64 <= "0000000000000000000000000000000" & neq(r_o_1_0(1 downto 0), "00");

-- b51s0
  ni6651_value_opp <= X"0001";
  ni6652_suif_tmp65 <= "0000000000000000000000000000000" & neq(r_o_2_0(1 downto 0), "00");

-- b52s0
  ni6653_val <= X"01";
  ni6654_suif_tmp66 <= "0000000000000000000000000000000" & neq(r_o_3_0(1 downto 0), "00");
  ni6655_val <= add(X"01", add(add(add(r_o_4_0, r_o_3_1), r_o_3_m1), X"01"));
  s_b52_predicates(0) <= 
    '1' when ni6654_suif_tmp66(0) = '1' else
    '0';
  s_b52_predicates(1) <= 
    '1' when (not ni6654_suif_tmp66(0)) = '1' else
    '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b52s0) then
      s_b52_predicates_r(0) <= s_b52_predicates(0);
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b52s0) then
      s_b52_predicates_r(1) <= s_b52_predicates(1);
      end if;
    end if;
  end process;

  ni6656_suif_tmp67 <= "0000000000000000000000000000000" & neq(r_o_2_1(1 downto 0), "00");
  ni6657_val <= add(t_36, add(add(add(r_o_3_1, r_o_2_2), r_o_1_1), X"01"));
  t_36 <= 
    ni6655_val when s_b52_predicates(0) = '1' else
    ni6653_val;
  s_b52_predicates(2) <= 
    '1' when ni6656_suif_tmp67(0) = '1' else
    '0';
  s_b52_predicates(3) <= 
    '1' when (not ni6656_suif_tmp67(0)) = '1' else
    '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b52s0) then
      s_b52_predicates_r(2) <= s_b52_predicates(2);
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b52s0) then
      s_b52_predicates_r(3) <= s_b52_predicates(3);
      end if;
    end if;
  end process;

  ni6658_suif_tmp68 <= "0000000000000000000000000000000" & neq(r_o_2_m1(1 downto 0), "00");
  ni6659_val <= add(t_37, add(add(add(r_o_3_m1, r_o_2_m2), r_o_1_m1), X"01"));
  t_37 <= 
    ni6657_val when s_b52_predicates(2) = '1' else
    ni6655_val when s_b52_predicates(0) = '1' else
    ni6653_val;
  s_b52_predicates(4) <= 
    '1' when ni6658_suif_tmp68(0) = '1' else
    '0';
  s_b52_predicates(5) <= 
    '1' when (not ni6658_suif_tmp68(0)) = '1' else
    '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b52s0) then
      s_b52_predicates_r(4) <= s_b52_predicates(4);
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b52s0) then
      s_b52_predicates_r(5) <= s_b52_predicates(5);
      end if;
    end if;
  end process;

  ni6660_value_opp <= add(X"0001", sign_ext(t_38, 16));
  t_38 <= 
    ni6659_val when s_b52_predicates(4) = '1' else
    ni6657_val when s_b52_predicates(2) = '1' else
    ni6655_val when s_b52_predicates(0) = '1' else
    ni6653_val;

-- b53s0
  ni6661_suif_tmp69 <= "0000000000000000000000000000000" & neq(r_o_1_1(1 downto 0), "00");

-- b54s0
  ni6662_val <= X"01";
  ni6663_suif_tmp70 <= "0000000000000000000000000000000" & neq(r_o_2_1(1 downto 0), "00");
  ni6664_val <= add(X"01", add(add(add(r_o_3_1, r_o_2_2), r_o_2_0), X"01"));
  s_b54_predicates(0) <= 
    '1' when ni6663_suif_tmp70(0) = '1' else
    '0';
  s_b54_predicates(1) <= 
    '1' when (not ni6663_suif_tmp70(0)) = '1' else
    '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b54s0) then
      s_b54_predicates_r(0) <= s_b54_predicates(0);
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b54s0) then
      s_b54_predicates_r(1) <= s_b54_predicates(1);
      end if;
    end if;
  end process;

  ni6665_suif_tmp71 <= "0000000000000000000000000000000" & neq(r_o_1_2(1 downto 0), "00");
  ni6666_val <= add(t_39, add(add(add(r_o_2_2, r_o_0_2), r_o_1_3), X"01"));
  t_39 <= 
    ni6664_val when s_b54_predicates(0) = '1' else
    ni6662_val;
  s_b54_predicates(2) <= 
    '1' when ni6665_suif_tmp71(0) = '1' else
    '0';
  s_b54_predicates(3) <= 
    '1' when (not ni6665_suif_tmp71(0)) = '1' else
    '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b54s0) then
      s_b54_predicates_r(2) <= s_b54_predicates(2);
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b54s0) then
      s_b54_predicates_r(3) <= s_b54_predicates(3);
      end if;
    end if;
  end process;

  ni6667_suif_tmp72 <= "0000000000000000000000000000000" & neq(r_o_0_1(1 downto 0), "00");
  ni6668_val <= add(t_40, add(add(r_o_m1_1, r_o_0_2), X"01"));
  t_40 <= 
    ni6666_val when s_b54_predicates(2) = '1' else
    ni6664_val when s_b54_predicates(0) = '1' else
    ni6662_val;
  s_b54_predicates(4) <= 
    '1' when ni6667_suif_tmp72(0) = '1' else
    '0';
  s_b54_predicates(5) <= 
    '1' when (not ni6667_suif_tmp72(0)) = '1' else
    '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b54s0) then
      s_b54_predicates_r(4) <= s_b54_predicates(4);
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b54s0) then
      s_b54_predicates_r(5) <= s_b54_predicates(5);
      end if;
    end if;
  end process;

  ni6669_value_opp <= add(r_value_opp, sign_ext(t_41, 16));
  t_41 <= 
    ni6668_val when s_b54_predicates(4) = '1' else
    ni6666_val when s_b54_predicates(2) = '1' else
    ni6664_val when s_b54_predicates(0) = '1' else
    ni6662_val;

-- b55s0
  ni6670_suif_tmp73 <= "0000000000000000000000000000000" & neq(r_o_1_m1(1 downto 0), "00");

-- b56s0
  ni6671_val <= X"01";
  ni6672_suif_tmp74 <= "0000000000000000000000000000000" & neq(r_o_2_m1(1 downto 0), "00");
  ni6673_val <= add(X"01", add(add(add(r_o_3_m1, r_o_2_m2), r_o_2_0), X"01"));
  s_b56_predicates(0) <= 
    '1' when ni6672_suif_tmp74(0) = '1' else
    '0';
  s_b56_predicates(1) <= 
    '1' when (not ni6672_suif_tmp74(0)) = '1' else
    '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b56s0) then
      s_b56_predicates_r(0) <= s_b56_predicates(0);
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b56s0) then
      s_b56_predicates_r(1) <= s_b56_predicates(1);
      end if;
    end if;
  end process;

  ni6674_suif_tmp75 <= "0000000000000000000000000000000" & neq(r_o_1_m2(1 downto 0), "00");
  ni6675_val <= add(t_42, add(add(add(r_o_2_m2, r_o_0_m2), r_o_1_m3), X"01"));
  t_42 <= 
    ni6673_val when s_b56_predicates(0) = '1' else
    ni6671_val;
  s_b56_predicates(2) <= 
    '1' when ni6674_suif_tmp75(0) = '1' else
    '0';
  s_b56_predicates(3) <= 
    '1' when (not ni6674_suif_tmp75(0)) = '1' else
    '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b56s0) then
      s_b56_predicates_r(2) <= s_b56_predicates(2);
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b56s0) then
      s_b56_predicates_r(3) <= s_b56_predicates(3);
      end if;
    end if;
  end process;

  ni6676_suif_tmp76 <= "0000000000000000000000000000000" & neq(r_o_0_m1(1 downto 0), "00");
  ni6677_val <= add(t_43, add(add(r_o_m1_m1, r_o_0_m2), X"01"));
  t_43 <= 
    ni6675_val when s_b56_predicates(2) = '1' else
    ni6673_val when s_b56_predicates(0) = '1' else
    ni6671_val;
  s_b56_predicates(4) <= 
    '1' when ni6676_suif_tmp76(0) = '1' else
    '0';
  s_b56_predicates(5) <= 
    '1' when (not ni6676_suif_tmp76(0)) = '1' else
    '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b56s0) then
      s_b56_predicates_r(4) <= s_b56_predicates(4);
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b56s0) then
      s_b56_predicates_r(5) <= s_b56_predicates(5);
      end if;
    end if;
  end process;

  ni6678_value_opp <= add(r_value_opp, sign_ext(t_44, 16));
  t_44 <= 
    ni6677_val when s_b56_predicates(4) = '1' else
    ni6675_val when s_b56_predicates(2) = '1' else
    ni6673_val when s_b56_predicates(0) = '1' else
    ni6671_val;

-- b57s0
  ni6679_suif_tmp77 <= "0000000000000000000000000000000" & neq(r_o_m1_0(1 downto 0), "00");

-- b58s0
  ni6680_value_opp <= add(r_value_opp, X"0001");
  ni6681_suif_tmp78 <= "0000000000000000000000000000000" & neq(r_o_m2_0(1 downto 0), "00");

-- b59s0
  ni6682_val <= X"01";
  ni6683_suif_tmp79 <= "0000000000000000000000000000000" & neq(r_o_m3_0(1 downto 0), "00");
  ni6684_val <= add(X"01", add(add(add(r_o_m4_0, r_o_m3_1), r_o_m3_m1), X"01"));
  s_b59_predicates(0) <= 
    '1' when ni6683_suif_tmp79(0) = '1' else
    '0';
  s_b59_predicates(1) <= 
    '1' when (not ni6683_suif_tmp79(0)) = '1' else
    '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b59s0) then
      s_b59_predicates_r(0) <= s_b59_predicates(0);
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b59s0) then
      s_b59_predicates_r(1) <= s_b59_predicates(1);
      end if;
    end if;
  end process;

  ni6685_suif_tmp80 <= "0000000000000000000000000000000" & neq(r_o_m2_1(1 downto 0), "00");
  ni6686_val <= add(t_45, add(add(add(r_o_m3_1, r_o_m2_2), r_o_m1_1), X"01"));
  t_45 <= 
    ni6684_val when s_b59_predicates(0) = '1' else
    ni6682_val;
  s_b59_predicates(2) <= 
    '1' when ni6685_suif_tmp80(0) = '1' else
    '0';
  s_b59_predicates(3) <= 
    '1' when (not ni6685_suif_tmp80(0)) = '1' else
    '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b59s0) then
      s_b59_predicates_r(2) <= s_b59_predicates(2);
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b59s0) then
      s_b59_predicates_r(3) <= s_b59_predicates(3);
      end if;
    end if;
  end process;

  ni6687_suif_tmp81 <= "0000000000000000000000000000000" & neq(r_o_m2_m1(1 downto 0), "00");
  ni6688_val <= add(t_46, add(add(add(r_o_m3_m1, r_o_m2_m2), r_o_m1_m1), X"01"));
  t_46 <= 
    ni6686_val when s_b59_predicates(2) = '1' else
    ni6684_val when s_b59_predicates(0) = '1' else
    ni6682_val;
  s_b59_predicates(4) <= 
    '1' when ni6687_suif_tmp81(0) = '1' else
    '0';
  s_b59_predicates(5) <= 
    '1' when (not ni6687_suif_tmp81(0)) = '1' else
    '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b59s0) then
      s_b59_predicates_r(4) <= s_b59_predicates(4);
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b59s0) then
      s_b59_predicates_r(5) <= s_b59_predicates(5);
      end if;
    end if;
  end process;

  ni6689_value_opp <= add(r_value_opp, sign_ext(t_47, 16));
  t_47 <= 
    ni6688_val when s_b59_predicates(4) = '1' else
    ni6686_val when s_b59_predicates(2) = '1' else
    ni6684_val when s_b59_predicates(0) = '1' else
    ni6682_val;

-- b60s0
  ni6690_suif_tmp82 <= "0000000000000000000000000000000" & neq(r_o_m1_1(1 downto 0), "00");

-- b61s0
  ni6691_val <= X"01";
  ni6692_suif_tmp83 <= "0000000000000000000000000000000" & neq(r_o_m2_1(1 downto 0), "00");
  ni6693_val <= add(X"01", add(add(add(r_o_m3_1, r_o_m2_2), r_o_m2_0), X"01"));
  s_b61_predicates(0) <= 
    '1' when ni6692_suif_tmp83(0) = '1' else
    '0';
  s_b61_predicates(1) <= 
    '1' when (not ni6692_suif_tmp83(0)) = '1' else
    '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b61s0) then
      s_b61_predicates_r(0) <= s_b61_predicates(0);
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b61s0) then
      s_b61_predicates_r(1) <= s_b61_predicates(1);
      end if;
    end if;
  end process;

  ni6694_suif_tmp84 <= "0000000000000000000000000000000" & neq(r_o_m1_2(1 downto 0), "00");
  ni6695_val <= add(t_48, add(add(add(r_o_m2_2, r_o_0_2), r_o_m1_3), X"01"));
  t_48 <= 
    ni6693_val when s_b61_predicates(0) = '1' else
    ni6691_val;
  s_b61_predicates(2) <= 
    '1' when ni6694_suif_tmp84(0) = '1' else
    '0';
  s_b61_predicates(3) <= 
    '1' when (not ni6694_suif_tmp84(0)) = '1' else
    '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b61s0) then
      s_b61_predicates_r(2) <= s_b61_predicates(2);
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b61s0) then
      s_b61_predicates_r(3) <= s_b61_predicates(3);
      end if;
    end if;
  end process;

  ni6696_suif_tmp85 <= "0000000000000000000000000000000" & neq(r_o_0_1(1 downto 0), "00");
  ni6697_val <= add(t_49, add(add(r_o_1_1, r_o_0_2), X"01"));
  t_49 <= 
    ni6695_val when s_b61_predicates(2) = '1' else
    ni6693_val when s_b61_predicates(0) = '1' else
    ni6691_val;
  s_b61_predicates(4) <= 
    '1' when ni6696_suif_tmp85(0) = '1' else
    '0';
  s_b61_predicates(5) <= 
    '1' when (not ni6696_suif_tmp85(0)) = '1' else
    '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b61s0) then
      s_b61_predicates_r(4) <= s_b61_predicates(4);
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b61s0) then
      s_b61_predicates_r(5) <= s_b61_predicates(5);
      end if;
    end if;
  end process;

  ni6698_value_opp <= add(r_value_opp, sign_ext(t_50, 16));
  t_50 <= 
    ni6697_val when s_b61_predicates(4) = '1' else
    ni6695_val when s_b61_predicates(2) = '1' else
    ni6693_val when s_b61_predicates(0) = '1' else
    ni6691_val;

-- b62s0
  ni6699_suif_tmp86 <= "0000000000000000000000000000000" & neq(r_o_m1_m1(1 downto 0), "00");

-- b63s0
  ni6700_val <= X"01";
  ni6701_suif_tmp87 <= "0000000000000000000000000000000" & neq(r_o_m2_m1(1 downto 0), "00");
  ni6702_val <= add(X"01", add(add(add(r_o_m3_m1, r_o_m2_m2), r_o_m2_0), X"01"));
  s_b63_predicates(0) <= 
    '1' when ni6701_suif_tmp87(0) = '1' else
    '0';
  s_b63_predicates(1) <= 
    '1' when (not ni6701_suif_tmp87(0)) = '1' else
    '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b63s0) then
      s_b63_predicates_r(0) <= s_b63_predicates(0);
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b63s0) then
      s_b63_predicates_r(1) <= s_b63_predicates(1);
      end if;
    end if;
  end process;

  ni6703_suif_tmp88 <= "0000000000000000000000000000000" & neq(r_o_m1_m2(1 downto 0), "00");
  ni6704_val <= add(t_51, add(add(add(r_o_m2_m2, r_o_0_m2), r_o_m1_m3), X"01"));
  t_51 <= 
    ni6702_val when s_b63_predicates(0) = '1' else
    ni6700_val;
  s_b63_predicates(2) <= 
    '1' when ni6703_suif_tmp88(0) = '1' else
    '0';
  s_b63_predicates(3) <= 
    '1' when (not ni6703_suif_tmp88(0)) = '1' else
    '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b63s0) then
      s_b63_predicates_r(2) <= s_b63_predicates(2);
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b63s0) then
      s_b63_predicates_r(3) <= s_b63_predicates(3);
      end if;
    end if;
  end process;

  ni6705_suif_tmp89 <= "0000000000000000000000000000000" & neq(r_o_0_m1(1 downto 0), "00");
  ni6706_val <= add(t_52, add(add(r_o_1_m1, r_o_0_m2), X"01"));
  t_52 <= 
    ni6704_val when s_b63_predicates(2) = '1' else
    ni6702_val when s_b63_predicates(0) = '1' else
    ni6700_val;
  s_b63_predicates(4) <= 
    '1' when ni6705_suif_tmp89(0) = '1' else
    '0';
  s_b63_predicates(5) <= 
    '1' when (not ni6705_suif_tmp89(0)) = '1' else
    '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b63s0) then
      s_b63_predicates_r(4) <= s_b63_predicates(4);
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b63s0) then
      s_b63_predicates_r(5) <= s_b63_predicates(5);
      end if;
    end if;
  end process;

  ni6707_value_opp <= add(r_value_opp, sign_ext(t_53, 16));
  t_53 <= 
    ni6706_val when s_b63_predicates(4) = '1' else
    ni6704_val when s_b63_predicates(2) = '1' else
    ni6702_val when s_b63_predicates(0) = '1' else
    ni6700_val;

-- b64s0
  ni6708_suif_tmp90 <= "0000000000000000000000000000000" & neq(r_o_0_1(1 downto 0), "00");

-- b65s0
  ni6709_value_opp <= add(r_value_opp, X"0001");
  ni6710_suif_tmp91 <= "0000000000000000000000000000000" & neq(r_o_0_2(1 downto 0), "00");

-- b66s0
  ni6711_val <= X"01";
  ni6712_suif_tmp92 <= "0000000000000000000000000000000" & neq(r_o_0_3(1 downto 0), "00");
  ni6713_val <= add(X"01", add(add(add(r_o_0_4, r_o_1_3), r_o_m1_3), X"01"));
  s_b66_predicates(0) <= 
    '1' when ni6712_suif_tmp92(0) = '1' else
    '0';
  s_b66_predicates(1) <= 
    '1' when (not ni6712_suif_tmp92(0)) = '1' else
    '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b66s0) then
      s_b66_predicates_r(0) <= s_b66_predicates(0);
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b66s0) then
      s_b66_predicates_r(1) <= s_b66_predicates(1);
      end if;
    end if;
  end process;

  ni6714_suif_tmp93 <= "0000000000000000000000000000000" & neq(r_o_1_2(1 downto 0), "00");
  ni6715_val <= add(t_54, add(add(add(r_o_1_3, r_o_2_2), r_o_1_1), X"01"));
  t_54 <= 
    ni6713_val when s_b66_predicates(0) = '1' else
    ni6711_val;
  s_b66_predicates(2) <= 
    '1' when ni6714_suif_tmp93(0) = '1' else
    '0';
  s_b66_predicates(3) <= 
    '1' when (not ni6714_suif_tmp93(0)) = '1' else
    '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b66s0) then
      s_b66_predicates_r(2) <= s_b66_predicates(2);
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b66s0) then
      s_b66_predicates_r(3) <= s_b66_predicates(3);
      end if;
    end if;
  end process;

  ni6716_suif_tmp94 <= "0000000000000000000000000000000" & neq(r_o_m1_2(1 downto 0), "00");
  ni6717_val <= add(t_55, add(add(add(r_o_m1_3, r_o_m2_2), r_o_m1_1), X"01"));
  t_55 <= 
    ni6715_val when s_b66_predicates(2) = '1' else
    ni6713_val when s_b66_predicates(0) = '1' else
    ni6711_val;
  s_b66_predicates(4) <= 
    '1' when ni6716_suif_tmp94(0) = '1' else
    '0';
  s_b66_predicates(5) <= 
    '1' when (not ni6716_suif_tmp94(0)) = '1' else
    '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b66s0) then
      s_b66_predicates_r(4) <= s_b66_predicates(4);
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b66s0) then
      s_b66_predicates_r(5) <= s_b66_predicates(5);
      end if;
    end if;
  end process;

  ni6718_value_opp <= add(r_value_opp, sign_ext(t_56, 16));
  t_56 <= 
    ni6717_val when s_b66_predicates(4) = '1' else
    ni6715_val when s_b66_predicates(2) = '1' else
    ni6713_val when s_b66_predicates(0) = '1' else
    ni6711_val;

-- b67s0
  ni6719_suif_tmp95 <= "0000000000000000000000000000000" & neq(r_o_1_1(1 downto 0), "00");

-- b68s0
  ni6720_val <= X"01";
  ni6721_suif_tmp96 <= "0000000000000000000000000000000" & neq(r_o_1_2(1 downto 0), "00");
  ni6722_val <= add(X"01", add(add(add(r_o_1_3, r_o_2_2), r_o_0_2), X"01"));
  s_b68_predicates(0) <= 
    '1' when ni6721_suif_tmp96(0) = '1' else
    '0';
  s_b68_predicates(1) <= 
    '1' when (not ni6721_suif_tmp96(0)) = '1' else
    '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b68s0) then
      s_b68_predicates_r(0) <= s_b68_predicates(0);
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b68s0) then
      s_b68_predicates_r(1) <= s_b68_predicates(1);
      end if;
    end if;
  end process;

  ni6723_suif_tmp97 <= "0000000000000000000000000000000" & neq(r_o_2_1(1 downto 0), "00");
  ni6724_val <= add(t_57, add(add(add(r_o_2_2, r_o_2_0), r_o_3_1), X"01"));
  t_57 <= 
    ni6722_val when s_b68_predicates(0) = '1' else
    ni6720_val;
  s_b68_predicates(2) <= 
    '1' when ni6723_suif_tmp97(0) = '1' else
    '0';
  s_b68_predicates(3) <= 
    '1' when (not ni6723_suif_tmp97(0)) = '1' else
    '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b68s0) then
      s_b68_predicates_r(2) <= s_b68_predicates(2);
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b68s0) then
      s_b68_predicates_r(3) <= s_b68_predicates(3);
      end if;
    end if;
  end process;

  ni6725_suif_tmp98 <= "0000000000000000000000000000000" & neq(r_o_1_0(1 downto 0), "00");
  ni6726_val <= add(t_58, add(add(r_o_1_m1, r_o_2_0), X"01"));
  t_58 <= 
    ni6724_val when s_b68_predicates(2) = '1' else
    ni6722_val when s_b68_predicates(0) = '1' else
    ni6720_val;
  s_b68_predicates(4) <= 
    '1' when ni6725_suif_tmp98(0) = '1' else
    '0';
  s_b68_predicates(5) <= 
    '1' when (not ni6725_suif_tmp98(0)) = '1' else
    '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b68s0) then
      s_b68_predicates_r(4) <= s_b68_predicates(4);
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b68s0) then
      s_b68_predicates_r(5) <= s_b68_predicates(5);
      end if;
    end if;
  end process;

  ni6727_value_opp <= add(r_value_opp, sign_ext(t_59, 16));
  t_59 <= 
    ni6726_val when s_b68_predicates(4) = '1' else
    ni6724_val when s_b68_predicates(2) = '1' else
    ni6722_val when s_b68_predicates(0) = '1' else
    ni6720_val;

-- b69s0
  ni6728_suif_tmp99 <= "0000000000000000000000000000000" & neq(r_o_m1_1(1 downto 0), "00");

-- b70s0
  ni6729_val <= X"01";
  ni6730_suif_tmp100 <= "0000000000000000000000000000000" & neq(r_o_m1_2(1 downto 0), "00");
  ni6731_val <= add(X"01", add(add(add(r_o_m1_3, r_o_m2_2), r_o_0_2), X"01"));
  s_b70_predicates(0) <= 
    '1' when ni6730_suif_tmp100(0) = '1' else
    '0';
  s_b70_predicates(1) <= 
    '1' when (not ni6730_suif_tmp100(0)) = '1' else
    '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b70s0) then
      s_b70_predicates_r(0) <= s_b70_predicates(0);
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b70s0) then
      s_b70_predicates_r(1) <= s_b70_predicates(1);
      end if;
    end if;
  end process;

  ni6732_suif_tmp101 <= "0000000000000000000000000000000" & neq(r_o_m2_1(1 downto 0), "00");
  ni6733_val <= add(t_60, add(add(add(r_o_m2_2, r_o_m2_0), r_o_m3_1), X"01"));
  t_60 <= 
    ni6731_val when s_b70_predicates(0) = '1' else
    ni6729_val;
  s_b70_predicates(2) <= 
    '1' when ni6732_suif_tmp101(0) = '1' else
    '0';
  s_b70_predicates(3) <= 
    '1' when (not ni6732_suif_tmp101(0)) = '1' else
    '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b70s0) then
      s_b70_predicates_r(2) <= s_b70_predicates(2);
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b70s0) then
      s_b70_predicates_r(3) <= s_b70_predicates(3);
      end if;
    end if;
  end process;

  ni6734_suif_tmp102 <= "0000000000000000000000000000000" & neq(r_o_m1_0(1 downto 0), "00");
  ni6735_val <= add(t_61, add(add(r_o_m1_m1, r_o_m2_0), X"01"));
  t_61 <= 
    ni6733_val when s_b70_predicates(2) = '1' else
    ni6731_val when s_b70_predicates(0) = '1' else
    ni6729_val;
  s_b70_predicates(4) <= 
    '1' when ni6734_suif_tmp102(0) = '1' else
    '0';
  s_b70_predicates(5) <= 
    '1' when (not ni6734_suif_tmp102(0)) = '1' else
    '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b70s0) then
      s_b70_predicates_r(4) <= s_b70_predicates(4);
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b70s0) then
      s_b70_predicates_r(5) <= s_b70_predicates(5);
      end if;
    end if;
  end process;

  ni6736_value_opp <= add(r_value_opp, sign_ext(t_62, 16));
  t_62 <= 
    ni6735_val when s_b70_predicates(4) = '1' else
    ni6733_val when s_b70_predicates(2) = '1' else
    ni6731_val when s_b70_predicates(0) = '1' else
    ni6729_val;

-- b71s0
  ni6737_suif_tmp103 <= "0000000000000000000000000000000" & neq(r_o_0_m1(1 downto 0), "00");

-- b72s0
  ni6738_value_opp <= add(r_value_opp, X"0001");
  ni6739_suif_tmp104 <= "0000000000000000000000000000000" & neq(r_o_0_m2(1 downto 0), "00");

-- b73s0
  ni6740_val <= X"01";
  ni6741_suif_tmp105 <= "0000000000000000000000000000000" & neq(r_o_0_m3(1 downto 0), "00");
  ni6742_val <= add(X"01", add(add(add(r_o_0_m4, r_o_1_m3), r_o_m1_m3), X"01"));
  s_b73_predicates(0) <= 
    '1' when ni6741_suif_tmp105(0) = '1' else
    '0';
  s_b73_predicates(1) <= 
    '1' when (not ni6741_suif_tmp105(0)) = '1' else
    '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b73s0) then
      s_b73_predicates_r(0) <= s_b73_predicates(0);
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b73s0) then
      s_b73_predicates_r(1) <= s_b73_predicates(1);
      end if;
    end if;
  end process;

  ni6743_suif_tmp106 <= "0000000000000000000000000000000" & neq(r_o_1_m2(1 downto 0), "00");
  ni6744_val <= add(t_63, add(add(add(r_o_1_m3, r_o_2_m2), r_o_1_m1), X"01"));
  t_63 <= 
    ni6742_val when s_b73_predicates(0) = '1' else
    ni6740_val;
  s_b73_predicates(2) <= 
    '1' when ni6743_suif_tmp106(0) = '1' else
    '0';
  s_b73_predicates(3) <= 
    '1' when (not ni6743_suif_tmp106(0)) = '1' else
    '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b73s0) then
      s_b73_predicates_r(2) <= s_b73_predicates(2);
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b73s0) then
      s_b73_predicates_r(3) <= s_b73_predicates(3);
      end if;
    end if;
  end process;

  ni6745_suif_tmp107 <= "0000000000000000000000000000000" & neq(r_o_m1_m2(1 downto 0), "00");
  ni6746_val <= add(t_64, add(add(add(r_o_m1_m3, r_o_m2_m2), r_o_m1_m1), X"01"));
  t_64 <= 
    ni6744_val when s_b73_predicates(2) = '1' else
    ni6742_val when s_b73_predicates(0) = '1' else
    ni6740_val;
  s_b73_predicates(4) <= 
    '1' when ni6745_suif_tmp107(0) = '1' else
    '0';
  s_b73_predicates(5) <= 
    '1' when (not ni6745_suif_tmp107(0)) = '1' else
    '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b73s0) then
      s_b73_predicates_r(4) <= s_b73_predicates(4);
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b73s0) then
      s_b73_predicates_r(5) <= s_b73_predicates(5);
      end if;
    end if;
  end process;

  ni6747_value_opp <= add(r_value_opp, sign_ext(t_65, 16));
  t_65 <= 
    ni6746_val when s_b73_predicates(4) = '1' else
    ni6744_val when s_b73_predicates(2) = '1' else
    ni6742_val when s_b73_predicates(0) = '1' else
    ni6740_val;

-- b74s0
  ni6748_suif_tmp108 <= "0000000000000000000000000000000" & neq(r_o_1_m1(1 downto 0), "00");

-- b75s0
  ni6749_val <= X"01";
  ni6750_suif_tmp109 <= "0000000000000000000000000000000" & neq(r_o_1_m2(1 downto 0), "00");
  ni6751_val <= add(X"01", add(add(add(r_o_1_m3, r_o_2_m2), r_o_0_m2), X"01"));
  s_b75_predicates(0) <= 
    '1' when ni6750_suif_tmp109(0) = '1' else
    '0';
  s_b75_predicates(1) <= 
    '1' when (not ni6750_suif_tmp109(0)) = '1' else
    '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b75s0) then
      s_b75_predicates_r(0) <= s_b75_predicates(0);
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b75s0) then
      s_b75_predicates_r(1) <= s_b75_predicates(1);
      end if;
    end if;
  end process;

  ni6752_suif_tmp110 <= "0000000000000000000000000000000" & neq(r_o_2_m1(1 downto 0), "00");
  ni6753_val <= add(t_66, add(add(add(r_o_2_m2, r_o_2_0), r_o_3_m1), X"01"));
  t_66 <= 
    ni6751_val when s_b75_predicates(0) = '1' else
    ni6749_val;
  s_b75_predicates(2) <= 
    '1' when ni6752_suif_tmp110(0) = '1' else
    '0';
  s_b75_predicates(3) <= 
    '1' when (not ni6752_suif_tmp110(0)) = '1' else
    '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b75s0) then
      s_b75_predicates_r(2) <= s_b75_predicates(2);
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b75s0) then
      s_b75_predicates_r(3) <= s_b75_predicates(3);
      end if;
    end if;
  end process;

  ni6754_suif_tmp111 <= "0000000000000000000000000000000" & neq(r_o_1_0(1 downto 0), "00");
  ni6755_val <= add(t_67, add(add(r_o_1_1, r_o_2_0), X"01"));
  t_67 <= 
    ni6753_val when s_b75_predicates(2) = '1' else
    ni6751_val when s_b75_predicates(0) = '1' else
    ni6749_val;
  s_b75_predicates(4) <= 
    '1' when ni6754_suif_tmp111(0) = '1' else
    '0';
  s_b75_predicates(5) <= 
    '1' when (not ni6754_suif_tmp111(0)) = '1' else
    '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b75s0) then
      s_b75_predicates_r(4) <= s_b75_predicates(4);
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b75s0) then
      s_b75_predicates_r(5) <= s_b75_predicates(5);
      end if;
    end if;
  end process;

  ni6756_value_opp <= add(r_value_opp, sign_ext(t_68, 16));
  t_68 <= 
    ni6755_val when s_b75_predicates(4) = '1' else
    ni6753_val when s_b75_predicates(2) = '1' else
    ni6751_val when s_b75_predicates(0) = '1' else
    ni6749_val;

-- b76s0
  ni6757_suif_tmp112 <= "0000000000000000000000000000000" & neq(r_o_m1_m1(1 downto 0), "00");

-- b77s0
  ni6758_val <= X"01";
  ni6759_suif_tmp113 <= "0000000000000000000000000000000" & neq(r_o_m1_m2(1 downto 0), "00");
  ni6760_val <= add(X"01", add(add(add(r_o_m1_m3, r_o_m2_m2), r_o_0_m2), X"01"));
  s_b77_predicates(0) <= 
    '1' when ni6759_suif_tmp113(0) = '1' else
    '0';
  s_b77_predicates(1) <= 
    '1' when (not ni6759_suif_tmp113(0)) = '1' else
    '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b77s0) then
      s_b77_predicates_r(0) <= s_b77_predicates(0);
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b77s0) then
      s_b77_predicates_r(1) <= s_b77_predicates(1);
      end if;
    end if;
  end process;

  ni6761_suif_tmp114 <= "0000000000000000000000000000000" & neq(r_o_m2_m1(1 downto 0), "00");
  ni6762_val <= add(t_69, add(add(add(r_o_m2_m2, r_o_m2_0), r_o_m3_m1), X"01"));
  t_69 <= 
    ni6760_val when s_b77_predicates(0) = '1' else
    ni6758_val;
  s_b77_predicates(2) <= 
    '1' when ni6761_suif_tmp114(0) = '1' else
    '0';
  s_b77_predicates(3) <= 
    '1' when (not ni6761_suif_tmp114(0)) = '1' else
    '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b77s0) then
      s_b77_predicates_r(2) <= s_b77_predicates(2);
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b77s0) then
      s_b77_predicates_r(3) <= s_b77_predicates(3);
      end if;
    end if;
  end process;

  ni6763_suif_tmp115 <= "0000000000000000000000000000000" & neq(r_o_m1_0(1 downto 0), "00");
  ni6764_val <= add(t_70, add(add(r_o_m1_1, r_o_m2_0), X"01"));
  t_70 <= 
    ni6762_val when s_b77_predicates(2) = '1' else
    ni6760_val when s_b77_predicates(0) = '1' else
    ni6758_val;
  s_b77_predicates(4) <= 
    '1' when ni6763_suif_tmp115(0) = '1' else
    '0';
  s_b77_predicates(5) <= 
    '1' when (not ni6763_suif_tmp115(0)) = '1' else
    '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b77s0) then
      s_b77_predicates_r(4) <= s_b77_predicates(4);
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (thisState = b77s0) then
      s_b77_predicates_r(5) <= s_b77_predicates(5);
      end if;
    end if;
  end process;

  ni6765_value_opp <= add(r_value_opp, sign_ext(t_71, 16));
  t_71 <= 
    ni6764_val when s_b77_predicates(4) = '1' else
    ni6762_val when s_b77_predicates(2) = '1' else
    ni6760_val when s_b77_predicates(0) = '1' else
    ni6758_val;

-- b78s0
  ni6766_net_lib <= add(r_net_lib, sub(r_value_self, r_value_opp));

-- b79s0
  ni6767_x <= add(r_x, X"01");
  ni6768_suif_tmp7 <= "0000000000000000000000000000000" & cmp_less_s(ni6767_x, X"12");

-- b80s0
  ni6769_y <= add(r_y, X"01");
  ni6770_suif_tmp6 <= "0000000000000000000000000000000" & cmp_less_s(ni6769_y, X"12");

-- b81s0
  ni6771_utility <= add(r_utility, mul2_s("011", r_net_lib)(15 downto 0));
  ni6772_move <= r_move and X"0000ffff";
  ni6773_move <= ni6772_move or shl(sign_ext(ni6771_utility, 32), 16);

-- b82s0
  ni6775_avail_self2_bak <= r_avail_self;
  ni6776_score_self2_bak <= r_score_self;
  ni6778_avail_self <= r_avail_self and not shl(X"000001", sign_ext(r_m_piece, 24));
  ni6781_yoff <= r_m_y;
  ni6782_xoff <= r_m_x;
  ni6783_count_bak_s2 <= X"00";

-- b82s1
  ti3369_piece_sizes <= r_m_piece(4 downto 0);
  ni3369_piece_sizes <= p_piece_sizes_imm2;
  ni6777_size <= ni3369_piece_sizes;
  ni6779_score_self <= add(r_score_self, ni6777_size);
  ni6780_size <= sub(ni6777_size, X"01");

-- b83s0
  ni3405_x_bak_s2 <= r_xoff;
  t_72 <= r_count_bak_s2(5 downto 0);
  ni3411_y_bak_s2 <= r_yoff;
  t_73 <= r_count_bak_s2(5 downto 0);
  ni6787_y <= add(r_yoff, X"01");
  ni6788_x <= r_xoff;
  ni6789_y1 <= add(r_yoff, X"01");
  ni6790_x1 <= add(r_xoff, X"01");
  ni6835_size <= sub(r_size, X"01");
  ni6836_suif_tmp117 <= "0000000000000000000000000000000" & cmp_less_s(ni6835_size, X"00");
  ni6784_r_e_g_0 <= add(shl(sign_ext(r_yoff, 10), 5), sign_ext(r_xoff, 10));
  ni6786_r_e_g_1 <= add(shl(sign_ext(r_yoff, 10), 5), sign_ext(r_xoff, 10));

-- b83s1
  ni3422_board <= p_board_imm2;
  ni3417_board_bak_s2 <= ni3422_board;
  t_74 <= r_count_bak_s2(5 downto 0);
  ni6785_count_bak_s2 <= add(r_count_bak_s2, X"01");
  ni3434_board <= X"0d";

-- b83s2
  ni3514_x_bak_s2 <= r_x;
  t_75 <= r_count_bak_s2(5 downto 0);
  ni3520_y_bak_s2 <= r_y;
  t_76 <= r_count_bak_s2(5 downto 0);
  ni6799_y <= sub(r_yoff, X"01");
  ni6800_x <= r_xoff;
  ni6792_r_e_g_0 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));
  ni6794_r_e_g_1 <= add(shl(sign_ext(r_y1, 10), 5), sign_ext(r_x1, 10));
  ni6795_r_e_g_2 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));

-- b83s3
  ni3467_board <= p_board_imm2;
  ni6791_board_t <= ni3467_board;
  ni3475_board <= p_board_imm;
  ni6793_board_t1 <= ni3475_board;
  ni3482_board <= ni6791_board_t or X"04";
  ni3526_board_bak_s2 <= ni6791_board_t;
  t_77 <= r_count_bak_s2(5 downto 0);
  ni6797_count_bak_s2 <= add(r_count_bak_s2, X"01");
  ni6796_r_e_g_0 <= add(shl(sign_ext(r_y1, 10), 5), sign_ext(r_x1, 10));

-- b83s4
  ni3498_board <= r_board_t1 or X"10";
  ni3537_x_bak_s2 <= r_x1;
  t_78 <= r_count_bak_s2(5 downto 0);
  ni3543_y_bak_s2 <= r_y1;
  t_79 <= r_count_bak_s2(5 downto 0);
  ni3549_board_bak_s2 <= r_board_t1;
  t_80 <= r_count_bak_s2(5 downto 0);
  ni6798_count_bak_s2 <= add(r_count_bak_s2, X"01");
  ni6801_y1 <= sub(r_yoff, X"01");
  ni6802_x1 <= sub(r_xoff, X"01");

-- b83s5
  ni3625_x_bak_s2 <= r_x;
  t_81 <= r_count_bak_s2(5 downto 0);
  ni3631_y_bak_s2 <= r_y;
  t_82 <= r_count_bak_s2(5 downto 0);
  ni6811_y <= r_yoff;
  ni6812_x <= add(r_xoff, X"01");
  ni6804_r_e_g_0 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));
  ni6806_r_e_g_1 <= add(shl(sign_ext(r_y1, 10), 5), sign_ext(r_x1, 10));
  ni6807_r_e_g_2 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));

-- b83s6
  ni3578_board <= p_board_imm2;
  ni6803_board_t <= ni3578_board;
  ni3586_board <= p_board_imm;
  ni6805_board_t1 <= ni3586_board;
  ni3593_board <= ni6803_board_t or X"04";
  ni3637_board_bak_s2 <= ni6803_board_t;
  t_83 <= r_count_bak_s2(5 downto 0);
  ni6809_count_bak_s2 <= add(r_count_bak_s2, X"01");
  ni6808_r_e_g_0 <= add(shl(sign_ext(r_y1, 10), 5), sign_ext(r_x1, 10));

-- b83s7
  ni3609_board <= r_board_t1 or X"10";
  ni3648_x_bak_s2 <= r_x1;
  t_84 <= r_count_bak_s2(5 downto 0);
  ni3654_y_bak_s2 <= r_y1;
  t_85 <= r_count_bak_s2(5 downto 0);
  ni3660_board_bak_s2 <= r_board_t1;
  t_86 <= r_count_bak_s2(5 downto 0);
  ni6810_count_bak_s2 <= add(r_count_bak_s2, X"01");
  ni6813_y1 <= sub(r_yoff, X"01");
  ni6814_x1 <= add(r_xoff, X"01");

-- b83s8
  ni3736_x_bak_s2 <= r_x;
  t_87 <= r_count_bak_s2(5 downto 0);
  ni3742_y_bak_s2 <= r_y;
  t_88 <= r_count_bak_s2(5 downto 0);
  ni6823_y <= r_yoff;
  ni6824_x <= sub(r_xoff, X"01");
  ni6816_r_e_g_0 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));
  ni6818_r_e_g_1 <= add(shl(sign_ext(r_y1, 10), 5), sign_ext(r_x1, 10));
  ni6819_r_e_g_2 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));

-- b83s9
  ni3689_board <= p_board_imm2;
  ni6815_board_t <= ni3689_board;
  ni3697_board <= p_board_imm;
  ni6817_board_t1 <= ni3697_board;
  ni3704_board <= ni6815_board_t or X"04";
  ni3748_board_bak_s2 <= ni6815_board_t;
  t_89 <= r_count_bak_s2(5 downto 0);
  ni6821_count_bak_s2 <= add(r_count_bak_s2, X"01");
  ni6820_r_e_g_0 <= add(shl(sign_ext(r_y1, 10), 5), sign_ext(r_x1, 10));

-- b83s10
  ni3720_board <= r_board_t1 or X"10";
  ni3759_x_bak_s2 <= r_x1;
  t_90 <= r_count_bak_s2(5 downto 0);
  ni3765_y_bak_s2 <= r_y1;
  t_91 <= r_count_bak_s2(5 downto 0);
  ni3771_board_bak_s2 <= r_board_t1;
  t_92 <= r_count_bak_s2(5 downto 0);
  ni6822_count_bak_s2 <= add(r_count_bak_s2, X"01");
  ni6825_y1 <= add(r_yoff, X"01");
  ni6826_x1 <= sub(r_xoff, X"01");

-- b83s11
  ni3847_x_bak_s2 <= r_x;
  t_93 <= r_count_bak_s2(5 downto 0);
  ni3853_y_bak_s2 <= r_y;
  t_94 <= r_count_bak_s2(5 downto 0);
  ni6828_r_e_g_0 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));
  ni6830_r_e_g_1 <= add(shl(sign_ext(r_y1, 10), 5), sign_ext(r_x1, 10));
  ni6831_r_e_g_2 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));

-- b83s12
  ni3800_board <= p_board_imm2;
  ni6827_board_t <= ni3800_board;
  ni3808_board <= p_board_imm;
  ni6829_board_t1 <= ni3808_board;
  ni3815_board <= ni6827_board_t or X"04";
  ni3859_board_bak_s2 <= ni6827_board_t;
  t_95 <= r_count_bak_s2(5 downto 0);
  ni6833_count_bak_s2 <= add(r_count_bak_s2, X"01");
  ni6832_r_e_g_0 <= add(shl(sign_ext(r_y1, 10), 5), sign_ext(r_x1, 10));

-- b83s13
  ni3831_board <= r_board_t1 or X"10";
  ni3870_x_bak_s2 <= r_x1;
  t_96 <= r_count_bak_s2(5 downto 0);
  ni3876_y_bak_s2 <= r_y1;
  t_97 <= r_count_bak_s2(5 downto 0);
  ni3882_board_bak_s2 <= r_board_t1;
  t_98 <= r_count_bak_s2(5 downto 0);
  ni6834_count_bak_s2 <= add(r_count_bak_s2, X"01");

-- b83s14
  ni6838_r_e_g_0 <= add(shl(add(shl(sign_ext(r_m_piece, 10), 3), sign_ext(r_m_rotate, 10)), 2), sign_ext(r_size, 10));
  ni6840_r_e_g_1 <= add(shl(add(shl(sign_ext(r_m_piece, 10), 3), sign_ext(r_m_rotate, 10)), 2), sign_ext(r_size, 10));

-- b83s15
  ni3911_piece_y <= p_piece_y_imm2;
  ni6837_yoff <= add(r_m_y, ni3911_piece_y);
  ni3925_piece_x <= p_piece_x_imm2;
  ni6839_xoff <= add(r_m_x, ni3925_piece_x);

-- b84s0
  ni6842_count_bak_s2 <= sub(r_count_bak_s2, X"01");
  ni6666076_count_bak_s20 <= ni6842_count_bak_s2;

  process (clk,reset)
  begin
    if (reset='1') then
      s_b85_state <= idle;
    elsif (clk'event and clk='1') then
      case s_b85_state is
      when idle =>
        if (stateEn = '1' and nextState = b85s0) then
          s_b85_state <= init;
        else
          s_b85_state <= idle;
        end if;
      when init =>
        s_b85_state <= run;
      when run =>
        if (s_b85_break = '1') then
          s_b85_state <= flush;
        else
          s_b85_state <= run;
        end if;
      when flush =>
        if (s_b85_flushed = '1') then
          s_b85_state <= idle;
        else
          s_b85_state <= flush;
        end if;
      when others => null;
      end case;
    end if;
  end process;

-- b85 stage 0
  s_b85_vstall(0) <= '0';
  ni6666077_count_bak_s2 <= r_count_bak_s20;
  ni6847_count_bak_s20 <= sub(r_count_bak_s20, X"01");
  ni6843_suif_tmp119 <= "0000000000000000000000000000000" & cmp_less_equal_s(X"00", ni6666077_count_bak_s2);
  s_b85_vbreak(0) <= 
    '1' when (not ni6843_suif_tmp119(0)) = '1' else
    '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (s_b85_vwrite(0) = '1') then
        s_b85_0.f_count_bak_s20 <= ni6847_count_bak_s20;
        s_b85_0.f_count_bak_s2 <= ni6666077_count_bak_s2;
      end if;
    end if;
  end process;

-- b85 stage 1
  s_b85_vstall(1) <= '0';
  ti3957_x_bak_s2 <= s_b85_0.f_count_bak_s2(5 downto 0);
  ni3957_x_bak_s2 <= p_x_bak_s2_imm2;
  ni6844_xoff <= ni3957_x_bak_s2;
  ti3963_y_bak_s2 <= s_b85_0.f_count_bak_s2(5 downto 0);
  ni3963_y_bak_s2 <= p_y_bak_s2_imm2;
  ni6845_yoff <= ni3963_y_bak_s2;
  ti3975_board_bak_s2 <= s_b85_0.f_count_bak_s2(5 downto 0);
  ni3975_board_bak_s2 <= p_board_bak_s2_imm2;
  ni6666078_count_bak_s2 <= s_b85_0.f_count_bak_s20;
  ni6846_r_e_g_0 <= add(shl(sign_ext(ni6845_yoff, 10), 5), sign_ext(ni6844_xoff, 10));
  s_b85_vbreak(1) <= '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (s_b85_vwrite(1) = '1') then
        s_b85_1.f_r_e_g_0 <= ni6846_r_e_g_0;
        s_b85_1.f_r_e_g_3 <= ni3975_board_bak_s2;
        s_b85_1.f_count_bak_s2 <= ni6666078_count_bak_s2;
      elsif (s_b85_vflush(1) = '1' and s_b85_stall = '0') then
        s_b85_1.f_count_bak_s2 <= s_b85_0.f_count_bak_s2;
      end if;
    end if;
  end process;

-- b85 stage 2
  s_b85_vstall(2) <= '0';
  ni3968_board <= s_b85_1.f_r_e_g_3;
  s_b85_vbreak(2) <= '0';
  process (clk,reset)
  begin
    if (reset='1') then
      s_b85_vlast <= "000";
    elsif (clk'event and clk='1') then
      if (s_b85_state = idle) then
        s_b85_vlast <= "000";
      elsif ((s_b85_vbreak(0) and s_b85_vwrite(0)) = '1') then
        s_b85_vlast <= "001";
      end if;
    end if;
  end process;

  with s_b85_state select
    s_b85_break <= 
      (s_b85_vbreak(0) and s_b85_stage(0)) and not s_b85_stall when run,
      '1' when flush,
      '0' when others;
  process (clk,reset)
  begin
    if (reset='1') then
      s_b85_stage <= "000";
    elsif (clk'event and clk='1') then
      if (s_b85_state = idle) then
       s_b85_stage <= "000";
      elsif (thisState = b85s0 and s_b85_stall = '0') then
       s_b85_stage <= s_b85_vcont(1 downto 0) & (not s_b85_break and not s_b85_flushing);
      end if;    end if;
  end process;

  process (clk,reset)
  begin
    if (reset='1') then
      s_b85_vflush <= "000";
    elsif (clk'event and clk='1') then
      if (s_b85_state = idle) then
       s_b85_vflush <= "000";
      elsif (s_b85_stall = '0') then
       s_b85_vflush <= (s_b85_vflush(1 downto 0) or s_b85_vbreak(1 downto 0)) & '0';
      end if;    end if;
  end process;

  s_b85_stall <= 
    '0' when (s_b85_vstall and s_b85_stage) = "000" else
    '1';
  s_b85_vwrite(0) <= 
    s_b85_stage(0) when s_b85_stall = '0' and s_b85_final = '0' else
    '0';
  s_b85_vwrite(1) <= 
    s_b85_stage(1) when s_b85_stall = '0' and s_b85_final = '0' else
    '0';
  s_b85_vwrite(2) <= 
    s_b85_stage(2) when s_b85_stall = '0' else
    '0';
  s_b85_vcont(0) <= (s_b85_stage(0) and not s_b85_vbreak(0)) and not s_b85_final;
  s_b85_vcont(1) <= s_b85_stage(1) and not s_b85_final;
  s_b85_vcont(2) <= '0';
  s_b85_final <= '0';
  s_b85_flushing <= 
    '1' when s_b85_state = flush else
    s_b85_final;
  s_b85_flushed <= 
    '1' when s_b85_stall = '0' and (s_b85_vflush or s_b85_stage) = "000" else
    '1' when s_b85_vflush(2) = '1' else
    '0';
  with s_b85_state select
    s_b85_done <= 
      '0' when init,
      '0' when run,
      s_b85_flushed when flush,
      '0' when others;
-- b86s0
  ni6848_score_self <= r_score_self2_bak;
  ni6849_avail_self <= r_avail_self2_bak;

-- b87s0
  ni6851_avail_opp_bak <= r_avail_opp;
  ni6852_score_opp_bak <= r_score_opp;
  ni6854_avail_opp <= r_avail_opp and not shl(X"000001", sign_ext(r_m_piece, 24));
  ni6857_yoff <= r_m_y;
  ni6858_xoff <= r_m_x;
  ni6859_count_bak_op <= X"00";

-- b87s1
  ti4002_piece_sizes <= r_m_piece(4 downto 0);
  ni4002_piece_sizes <= p_piece_sizes_imm2;
  ni6853_size <= ni4002_piece_sizes;
  ni6855_score_opp <= add(r_score_opp, ni6853_size);
  ni6856_size <= sub(ni6853_size, X"01");

-- b88s0
  ni4038_x_bak_op <= r_xoff;
  t_99 <= r_count_bak_op(5 downto 0);
  ni4044_y_bak_op <= r_yoff;
  t_100 <= r_count_bak_op(5 downto 0);
  ni6863_y <= add(r_yoff, X"01");
  ni6864_x <= r_xoff;
  ni6865_y1 <= add(r_yoff, X"01");
  ni6866_x1 <= add(r_xoff, X"01");
  ni6911_size <= sub(r_size, X"01");
  ni6912_suif_tmp121 <= "0000000000000000000000000000000" & cmp_less_s(ni6911_size, X"00");
  ni6860_r_e_g_0 <= add(shl(sign_ext(r_yoff, 10), 5), sign_ext(r_xoff, 10));
  ni6862_r_e_g_1 <= add(shl(sign_ext(r_yoff, 10), 5), sign_ext(r_xoff, 10));

-- b88s1
  ni4055_board <= p_board_imm2;
  ni4050_board_bak_op <= ni4055_board;
  t_101 <= r_count_bak_op(5 downto 0);
  ni6861_count_bak_op <= add(r_count_bak_op, X"01");
  ni4067_board <= X"0e";

-- b88s2
  ni4147_x_bak_op <= r_x;
  t_102 <= r_count_bak_op(5 downto 0);
  ni4153_y_bak_op <= r_y;
  t_103 <= r_count_bak_op(5 downto 0);
  ni6875_y <= sub(r_yoff, X"01");
  ni6876_x <= r_xoff;
  ni6868_r_e_g_0 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));
  ni6870_r_e_g_1 <= add(shl(sign_ext(r_y1, 10), 5), sign_ext(r_x1, 10));
  ni6871_r_e_g_2 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));

-- b88s3
  ni4100_board <= p_board_imm2;
  ni6867_board_t <= ni4100_board;
  ni4108_board <= p_board_imm;
  ni6869_board_t1 <= ni4108_board;
  ni4115_board <= ni6867_board_t or X"08";
  ni4159_board_bak_op <= ni6867_board_t;
  t_104 <= r_count_bak_op(5 downto 0);
  ni6873_count_bak_op <= add(r_count_bak_op, X"01");
  ni6872_r_e_g_0 <= add(shl(sign_ext(r_y1, 10), 5), sign_ext(r_x1, 10));

-- b88s4
  ni4131_board <= r_board_t1 or X"20";
  ni4170_x_bak_op <= r_x1;
  t_105 <= r_count_bak_op(5 downto 0);
  ni4176_y_bak_op <= r_y1;
  t_106 <= r_count_bak_op(5 downto 0);
  ni4182_board_bak_op <= r_board_t1;
  t_107 <= r_count_bak_op(5 downto 0);
  ni6874_count_bak_op <= add(r_count_bak_op, X"01");
  ni6877_y1 <= sub(r_yoff, X"01");
  ni6878_x1 <= sub(r_xoff, X"01");

-- b88s5
  ni4258_x_bak_op <= r_x;
  t_108 <= r_count_bak_op(5 downto 0);
  ni4264_y_bak_op <= r_y;
  t_109 <= r_count_bak_op(5 downto 0);
  ni6887_y <= r_yoff;
  ni6888_x <= add(r_xoff, X"01");
  ni6880_r_e_g_0 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));
  ni6882_r_e_g_1 <= add(shl(sign_ext(r_y1, 10), 5), sign_ext(r_x1, 10));
  ni6883_r_e_g_2 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));

-- b88s6
  ni4211_board <= p_board_imm2;
  ni6879_board_t <= ni4211_board;
  ni4219_board <= p_board_imm;
  ni6881_board_t1 <= ni4219_board;
  ni4226_board <= ni6879_board_t or X"08";
  ni4270_board_bak_op <= ni6879_board_t;
  t_110 <= r_count_bak_op(5 downto 0);
  ni6885_count_bak_op <= add(r_count_bak_op, X"01");
  ni6884_r_e_g_0 <= add(shl(sign_ext(r_y1, 10), 5), sign_ext(r_x1, 10));

-- b88s7
  ni4242_board <= r_board_t1 or X"20";
  ni4281_x_bak_op <= r_x1;
  t_111 <= r_count_bak_op(5 downto 0);
  ni4287_y_bak_op <= r_y1;
  t_112 <= r_count_bak_op(5 downto 0);
  ni4293_board_bak_op <= r_board_t1;
  t_113 <= r_count_bak_op(5 downto 0);
  ni6886_count_bak_op <= add(r_count_bak_op, X"01");
  ni6889_y1 <= sub(r_yoff, X"01");
  ni6890_x1 <= add(r_xoff, X"01");

-- b88s8
  ni4369_x_bak_op <= r_x;
  t_114 <= r_count_bak_op(5 downto 0);
  ni4375_y_bak_op <= r_y;
  t_115 <= r_count_bak_op(5 downto 0);
  ni6899_y <= r_yoff;
  ni6900_x <= sub(r_xoff, X"01");
  ni6892_r_e_g_0 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));
  ni6894_r_e_g_1 <= add(shl(sign_ext(r_y1, 10), 5), sign_ext(r_x1, 10));
  ni6895_r_e_g_2 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));

-- b88s9
  ni4322_board <= p_board_imm2;
  ni6891_board_t <= ni4322_board;
  ni4330_board <= p_board_imm;
  ni6893_board_t1 <= ni4330_board;
  ni4337_board <= ni6891_board_t or X"08";
  ni4381_board_bak_op <= ni6891_board_t;
  t_116 <= r_count_bak_op(5 downto 0);
  ni6897_count_bak_op <= add(r_count_bak_op, X"01");
  ni6896_r_e_g_0 <= add(shl(sign_ext(r_y1, 10), 5), sign_ext(r_x1, 10));

-- b88s10
  ni4353_board <= r_board_t1 or X"20";
  ni4392_x_bak_op <= r_x1;
  t_117 <= r_count_bak_op(5 downto 0);
  ni4398_y_bak_op <= r_y1;
  t_118 <= r_count_bak_op(5 downto 0);
  ni4404_board_bak_op <= r_board_t1;
  t_119 <= r_count_bak_op(5 downto 0);
  ni6898_count_bak_op <= add(r_count_bak_op, X"01");
  ni6901_y1 <= add(r_yoff, X"01");
  ni6902_x1 <= sub(r_xoff, X"01");

-- b88s11
  ni4480_x_bak_op <= r_x;
  t_120 <= r_count_bak_op(5 downto 0);
  ni4486_y_bak_op <= r_y;
  t_121 <= r_count_bak_op(5 downto 0);
  ni6904_r_e_g_0 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));
  ni6906_r_e_g_1 <= add(shl(sign_ext(r_y1, 10), 5), sign_ext(r_x1, 10));
  ni6907_r_e_g_2 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));

-- b88s12
  ni4433_board <= p_board_imm2;
  ni6903_board_t <= ni4433_board;
  ni4441_board <= p_board_imm;
  ni6905_board_t1 <= ni4441_board;
  ni4448_board <= ni6903_board_t or X"08";
  ni4492_board_bak_op <= ni6903_board_t;
  t_122 <= r_count_bak_op(5 downto 0);
  ni6909_count_bak_op <= add(r_count_bak_op, X"01");
  ni6908_r_e_g_0 <= add(shl(sign_ext(r_y1, 10), 5), sign_ext(r_x1, 10));

-- b88s13
  ni4464_board <= r_board_t1 or X"20";
  ni4503_x_bak_op <= r_x1;
  t_123 <= r_count_bak_op(5 downto 0);
  ni4509_y_bak_op <= r_y1;
  t_124 <= r_count_bak_op(5 downto 0);
  ni4515_board_bak_op <= r_board_t1;
  t_125 <= r_count_bak_op(5 downto 0);
  ni6910_count_bak_op <= add(r_count_bak_op, X"01");

-- b88s14
  ni6914_r_e_g_0 <= add(shl(add(shl(sign_ext(r_m_piece, 10), 3), sign_ext(r_m_rotate, 10)), 2), sign_ext(r_size, 10));
  ni6916_r_e_g_1 <= add(shl(add(shl(sign_ext(r_m_piece, 10), 3), sign_ext(r_m_rotate, 10)), 2), sign_ext(r_size, 10));

-- b88s15
  ni4544_piece_y <= p_piece_y_imm2;
  ni6913_yoff <= add(r_m_y, ni4544_piece_y);
  ni4558_piece_x <= p_piece_x_imm2;
  ni6915_xoff <= add(r_m_x, ni4558_piece_x);

-- b89s0
  ni6918_count_bak_op <= sub(r_count_bak_op, X"01");
  ni6666079_count_bak_op0 <= ni6918_count_bak_op;

  process (clk,reset)
  begin
    if (reset='1') then
      s_b90_state <= idle;
    elsif (clk'event and clk='1') then
      case s_b90_state is
      when idle =>
        if (stateEn = '1' and nextState = b90s0) then
          s_b90_state <= init;
        else
          s_b90_state <= idle;
        end if;
      when init =>
        s_b90_state <= run;
      when run =>
        if (s_b90_final = '1' and s_b90_stall = '0') then
          s_b90_state <= flush;
        elsif (s_b90_break = '1') then
          s_b90_state <= flush;
        else
          s_b90_state <= run;
        end if;
      when flush =>
        if (s_b90_flushed = '1') then
          s_b90_state <= idle;
        else
          s_b90_state <= flush;
        end if;
      when others => null;
      end case;
    end if;
  end process;

-- b90 stage 0
  s_b90_vstall(0) <= '0';
  ni6666080_count_bak_op <= r_count_bak_op0;
  ni6922_count_bak_op0 <= sub(r_count_bak_op0, X"01");
  ni6923_suif_tmp123 <= "0000000000000000000000000000000" & cmp_less_equal_s(X"00", ni6922_count_bak_op0);
  s_b90_vbreak(0) <= '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (s_b90_vwrite(0) = '1') then
        s_b90_0.f_count_bak_op0 <= ni6922_count_bak_op0;
        s_b90_0.f_count_bak_op <= ni6666080_count_bak_op;
      end if;
    end if;
  end process;

-- b90 stage 1
  s_b90_vstall(1) <= '0';
  ti4584_x_bak_op <= s_b90_0.f_count_bak_op(5 downto 0);
  ni4584_x_bak_op <= p_x_bak_op_imm2;
  ni6919_xoff <= ni4584_x_bak_op;
  ti4590_y_bak_op <= s_b90_0.f_count_bak_op(5 downto 0);
  ni4590_y_bak_op <= p_y_bak_op_imm2;
  ni6920_yoff <= ni4590_y_bak_op;
  ti4602_board_bak_op <= s_b90_0.f_count_bak_op(5 downto 0);
  ni4602_board_bak_op <= p_board_bak_op_imm2;
  ni6666081_count_bak_op <= s_b90_0.f_count_bak_op0;
  ni6921_r_e_g_0 <= add(shl(sign_ext(ni6920_yoff, 10), 5), sign_ext(ni6919_xoff, 10));
  s_b90_vbreak(1) <= '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (s_b90_vwrite(1) = '1') then
        s_b90_1.f_r_e_g_0 <= ni6921_r_e_g_0;
        s_b90_1.f_r_e_g_3 <= ni4602_board_bak_op;
        s_b90_1.f_count_bak_op <= ni6666081_count_bak_op;
      end if;
    end if;
  end process;

-- b90 stage 2
  s_b90_vstall(2) <= '0';
  ni4595_board <= s_b90_1.f_r_e_g_3;
  s_b90_vbreak(2) <= '0';
  process (clk,reset)
  begin
    if (reset='1') then
      s_b90_vlast <= "000";
    elsif (clk'event and clk='1') then
      if (s_b90_state = idle) then
        s_b90_vlast <= "000";
      end if;
    end if;
  end process;

  with s_b90_state select
    s_b90_break <= 
      '1' when flush,
      '0' when others;
  process (clk,reset)
  begin
    if (reset='1') then
      s_b90_stage <= "000";
    elsif (clk'event and clk='1') then
      if (s_b90_state = idle) then
       s_b90_stage <= "000";
      elsif (thisState = b90s0 and s_b90_stall = '0') then
       s_b90_stage <= s_b90_vcont(1 downto 0) & (not s_b90_break and not s_b90_flushing);
      end if;    end if;
  end process;

  process (clk,reset)
  begin
    if (reset='1') then
      s_b90_vflush <= "000";
    elsif (clk'event and clk='1') then
      if (s_b90_state = idle) then
       s_b90_vflush <= "000";
      elsif (s_b90_stall = '0') then
       s_b90_vflush <= (s_b90_vflush(1 downto 0) or s_b90_vbreak(1 downto 0)) & '0';
      end if;    end if;
  end process;

  s_b90_stall <= 
    '0' when (s_b90_vstall and s_b90_stage) = "000" else
    '1';
  s_b90_vwrite(0) <= 
    s_b90_stage(0) when s_b90_stall = '0' else
    '0';
  s_b90_vwrite(1) <= 
    s_b90_stage(1) when s_b90_stall = '0' else
    '0';
  s_b90_vwrite(2) <= 
    s_b90_stage(2) when s_b90_stall = '0' else
    '0';
  s_b90_vcont(0) <= s_b90_stage(0);
  s_b90_vcont(1) <= s_b90_stage(1);
  s_b90_vcont(2) <= '0';
  s_b90_final <= 
    '1' when (s_b90_stage(0) and not ni6923_suif_tmp123(0)) = '1' else
    '0';
  s_b90_flushing <= 
    '1' when s_b90_state = flush else
    s_b90_final;
  s_b90_flushed <= 
    '1' when s_b90_stall = '0' and (s_b90_vflush or s_b90_stage) = "000" else
    '1' when s_b90_vflush(2) = '1' else
    '0';
  with s_b90_state select
    s_b90_done <= 
      '0' when init,
      '0' when run,
      s_b90_flushed when flush,
      '0' when others;
-- b91s0
  ni6924_score_opp <= r_score_opp_bak;
  ni6925_avail_opp <= r_avail_opp_bak;

-- b92s0
  ni6927_avail_self_bak <= r_avail_self;
  ni6928_score_self_bak <= r_score_self;
  ni6930_avail_self <= r_avail_self and not shl(X"000001", sign_ext(r_m_piece, 24));
  ni6933_yoff <= r_m_y;
  ni6934_xoff <= r_m_x;
  ni6935_count_bak_s <= X"00";

-- b92s1
  ti4629_piece_sizes <= r_m_piece(4 downto 0);
  ni4629_piece_sizes <= p_piece_sizes_imm2;
  ni6929_size <= ni4629_piece_sizes;
  ni6931_score_self <= add(r_score_self, ni6929_size);
  ni6932_size <= sub(ni6929_size, X"01");

-- b93s0
  ni4665_x_bak_s <= r_xoff;
  t_126 <= r_count_bak_s(5 downto 0);
  ni4671_y_bak_s <= r_yoff;
  t_127 <= r_count_bak_s(5 downto 0);
  ni6939_y <= add(r_yoff, X"01");
  ni6940_x <= r_xoff;
  ni6941_y1 <= add(r_yoff, X"01");
  ni6942_x1 <= add(r_xoff, X"01");
  ni6987_size <= sub(r_size, X"01");
  ni6988_suif_tmp125 <= "0000000000000000000000000000000" & cmp_less_s(ni6987_size, X"00");
  ni6936_r_e_g_0 <= add(shl(sign_ext(r_yoff, 10), 5), sign_ext(r_xoff, 10));
  ni6938_r_e_g_1 <= add(shl(sign_ext(r_yoff, 10), 5), sign_ext(r_xoff, 10));

-- b93s1
  ni4682_board <= p_board_imm2;
  ni4677_board_bak_s <= ni4682_board;
  t_128 <= r_count_bak_s(5 downto 0);
  ni6937_count_bak_s <= add(r_count_bak_s, X"01");
  ni4694_board <= X"0d";

-- b93s2
  ni4774_x_bak_s <= r_x;
  t_129 <= r_count_bak_s(5 downto 0);
  ni4780_y_bak_s <= r_y;
  t_130 <= r_count_bak_s(5 downto 0);
  ni6951_y <= sub(r_yoff, X"01");
  ni6952_x <= r_xoff;
  ni6944_r_e_g_0 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));
  ni6946_r_e_g_1 <= add(shl(sign_ext(r_y1, 10), 5), sign_ext(r_x1, 10));
  ni6947_r_e_g_2 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));

-- b93s3
  ni4727_board <= p_board_imm2;
  ni6943_board_t <= ni4727_board;
  ni4735_board <= p_board_imm;
  ni6945_board_t1 <= ni4735_board;
  ni4742_board <= ni6943_board_t or X"04";
  ni4786_board_bak_s <= ni6943_board_t;
  t_131 <= r_count_bak_s(5 downto 0);
  ni6949_count_bak_s <= add(r_count_bak_s, X"01");
  ni6948_r_e_g_0 <= add(shl(sign_ext(r_y1, 10), 5), sign_ext(r_x1, 10));

-- b93s4
  ni4758_board <= r_board_t1 or X"10";
  ni4797_x_bak_s <= r_x1;
  t_132 <= r_count_bak_s(5 downto 0);
  ni4803_y_bak_s <= r_y1;
  t_133 <= r_count_bak_s(5 downto 0);
  ni4809_board_bak_s <= r_board_t1;
  t_134 <= r_count_bak_s(5 downto 0);
  ni6950_count_bak_s <= add(r_count_bak_s, X"01");
  ni6953_y1 <= sub(r_yoff, X"01");
  ni6954_x1 <= sub(r_xoff, X"01");

-- b93s5
  ni4885_x_bak_s <= r_x;
  t_135 <= r_count_bak_s(5 downto 0);
  ni4891_y_bak_s <= r_y;
  t_136 <= r_count_bak_s(5 downto 0);
  ni6963_y <= r_yoff;
  ni6964_x <= add(r_xoff, X"01");
  ni6956_r_e_g_0 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));
  ni6958_r_e_g_1 <= add(shl(sign_ext(r_y1, 10), 5), sign_ext(r_x1, 10));
  ni6959_r_e_g_2 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));

-- b93s6
  ni4838_board <= p_board_imm2;
  ni6955_board_t <= ni4838_board;
  ni4846_board <= p_board_imm;
  ni6957_board_t1 <= ni4846_board;
  ni4853_board <= ni6955_board_t or X"04";
  ni4897_board_bak_s <= ni6955_board_t;
  t_137 <= r_count_bak_s(5 downto 0);
  ni6961_count_bak_s <= add(r_count_bak_s, X"01");
  ni6960_r_e_g_0 <= add(shl(sign_ext(r_y1, 10), 5), sign_ext(r_x1, 10));

-- b93s7
  ni4869_board <= r_board_t1 or X"10";
  ni4908_x_bak_s <= r_x1;
  t_138 <= r_count_bak_s(5 downto 0);
  ni4914_y_bak_s <= r_y1;
  t_139 <= r_count_bak_s(5 downto 0);
  ni4920_board_bak_s <= r_board_t1;
  t_140 <= r_count_bak_s(5 downto 0);
  ni6962_count_bak_s <= add(r_count_bak_s, X"01");
  ni6965_y1 <= sub(r_yoff, X"01");
  ni6966_x1 <= add(r_xoff, X"01");

-- b93s8
  ni4996_x_bak_s <= r_x;
  t_141 <= r_count_bak_s(5 downto 0);
  ni5002_y_bak_s <= r_y;
  t_142 <= r_count_bak_s(5 downto 0);
  ni6975_y <= r_yoff;
  ni6976_x <= sub(r_xoff, X"01");
  ni6968_r_e_g_0 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));
  ni6970_r_e_g_1 <= add(shl(sign_ext(r_y1, 10), 5), sign_ext(r_x1, 10));
  ni6971_r_e_g_2 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));

-- b93s9
  ni4949_board <= p_board_imm2;
  ni6967_board_t <= ni4949_board;
  ni4957_board <= p_board_imm;
  ni6969_board_t1 <= ni4957_board;
  ni4964_board <= ni6967_board_t or X"04";
  ni5008_board_bak_s <= ni6967_board_t;
  t_143 <= r_count_bak_s(5 downto 0);
  ni6973_count_bak_s <= add(r_count_bak_s, X"01");
  ni6972_r_e_g_0 <= add(shl(sign_ext(r_y1, 10), 5), sign_ext(r_x1, 10));

-- b93s10
  ni4980_board <= r_board_t1 or X"10";
  ni5019_x_bak_s <= r_x1;
  t_144 <= r_count_bak_s(5 downto 0);
  ni5025_y_bak_s <= r_y1;
  t_145 <= r_count_bak_s(5 downto 0);
  ni5031_board_bak_s <= r_board_t1;
  t_146 <= r_count_bak_s(5 downto 0);
  ni6974_count_bak_s <= add(r_count_bak_s, X"01");
  ni6977_y1 <= add(r_yoff, X"01");
  ni6978_x1 <= sub(r_xoff, X"01");

-- b93s11
  ni5107_x_bak_s <= r_x;
  t_147 <= r_count_bak_s(5 downto 0);
  ni5113_y_bak_s <= r_y;
  t_148 <= r_count_bak_s(5 downto 0);
  ni6980_r_e_g_0 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));
  ni6982_r_e_g_1 <= add(shl(sign_ext(r_y1, 10), 5), sign_ext(r_x1, 10));
  ni6983_r_e_g_2 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));

-- b93s12
  ni5060_board <= p_board_imm2;
  ni6979_board_t <= ni5060_board;
  ni5068_board <= p_board_imm;
  ni6981_board_t1 <= ni5068_board;
  ni5075_board <= ni6979_board_t or X"04";
  ni5119_board_bak_s <= ni6979_board_t;
  t_149 <= r_count_bak_s(5 downto 0);
  ni6985_count_bak_s <= add(r_count_bak_s, X"01");
  ni6984_r_e_g_0 <= add(shl(sign_ext(r_y1, 10), 5), sign_ext(r_x1, 10));

-- b93s13
  ni5091_board <= r_board_t1 or X"10";
  ni5130_x_bak_s <= r_x1;
  t_150 <= r_count_bak_s(5 downto 0);
  ni5136_y_bak_s <= r_y1;
  t_151 <= r_count_bak_s(5 downto 0);
  ni5142_board_bak_s <= r_board_t1;
  t_152 <= r_count_bak_s(5 downto 0);
  ni6986_count_bak_s <= add(r_count_bak_s, X"01");

-- b93s14
  ni6990_r_e_g_0 <= add(shl(add(shl(sign_ext(r_m_piece, 10), 3), sign_ext(r_m_rotate, 10)), 2), sign_ext(r_size, 10));
  ni6992_r_e_g_1 <= add(shl(add(shl(sign_ext(r_m_piece, 10), 3), sign_ext(r_m_rotate, 10)), 2), sign_ext(r_size, 10));

-- b93s15
  ni5171_piece_y <= p_piece_y_imm2;
  ni6989_yoff <= add(r_m_y, ni5171_piece_y);
  ni5185_piece_x <= p_piece_x_imm2;
  ni6991_xoff <= add(r_m_x, ni5185_piece_x);

-- b94s0
  ni6994_count_bak_s <= sub(r_count_bak_s, X"01");
  ni6666082_count_bak_s0 <= ni6994_count_bak_s;

  process (clk,reset)
  begin
    if (reset='1') then
      s_b95_state <= idle;
    elsif (clk'event and clk='1') then
      case s_b95_state is
      when idle =>
        if (stateEn = '1' and nextState = b95s0) then
          s_b95_state <= init;
        else
          s_b95_state <= idle;
        end if;
      when init =>
        s_b95_state <= run;
      when run =>
        if (s_b95_break = '1') then
          s_b95_state <= flush;
        else
          s_b95_state <= run;
        end if;
      when flush =>
        if (s_b95_flushed = '1') then
          s_b95_state <= idle;
        else
          s_b95_state <= flush;
        end if;
      when others => null;
      end case;
    end if;
  end process;

-- b95 stage 0
  s_b95_vstall(0) <= '0';
  ni6666083_count_bak_s <= r_count_bak_s0;
  ni6999_count_bak_s0 <= sub(r_count_bak_s0, X"01");
  ni6995_suif_tmp127 <= "0000000000000000000000000000000" & cmp_less_equal_s(X"00", ni6666083_count_bak_s);
  s_b95_vbreak(0) <= 
    '1' when (not ni6995_suif_tmp127(0)) = '1' else
    '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (s_b95_vwrite(0) = '1') then
        s_b95_0.f_count_bak_s0 <= ni6999_count_bak_s0;
        s_b95_0.f_count_bak_s <= ni6666083_count_bak_s;
      end if;
    end if;
  end process;

-- b95 stage 1
  s_b95_vstall(1) <= '0';
  ti5217_x_bak_s <= s_b95_0.f_count_bak_s(5 downto 0);
  ni5217_x_bak_s <= p_x_bak_s_imm2;
  ni6996_xoff <= ni5217_x_bak_s;
  ti5223_y_bak_s <= s_b95_0.f_count_bak_s(5 downto 0);
  ni5223_y_bak_s <= p_y_bak_s_imm2;
  ni6997_yoff <= ni5223_y_bak_s;
  ti5235_board_bak_s <= s_b95_0.f_count_bak_s(5 downto 0);
  ni5235_board_bak_s <= p_board_bak_s_imm2;
  ni6666084_count_bak_s <= s_b95_0.f_count_bak_s0;
  ni6998_r_e_g_0 <= add(shl(sign_ext(ni6997_yoff, 10), 5), sign_ext(ni6996_xoff, 10));
  s_b95_vbreak(1) <= '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (s_b95_vwrite(1) = '1') then
        s_b95_1.f_r_e_g_0 <= ni6998_r_e_g_0;
        s_b95_1.f_r_e_g_3 <= ni5235_board_bak_s;
        s_b95_1.f_count_bak_s <= ni6666084_count_bak_s;
      elsif (s_b95_vflush(1) = '1' and s_b95_stall = '0') then
        s_b95_1.f_count_bak_s <= s_b95_0.f_count_bak_s;
      end if;
    end if;
  end process;

-- b95 stage 2
  s_b95_vstall(2) <= '0';
  ni5228_board <= s_b95_1.f_r_e_g_3;
  s_b95_vbreak(2) <= '0';
  process (clk,reset)
  begin
    if (reset='1') then
      s_b95_vlast <= "000";
    elsif (clk'event and clk='1') then
      if (s_b95_state = idle) then
        s_b95_vlast <= "000";
      elsif ((s_b95_vbreak(0) and s_b95_vwrite(0)) = '1') then
        s_b95_vlast <= "001";
      end if;
    end if;
  end process;

  with s_b95_state select
    s_b95_break <= 
      (s_b95_vbreak(0) and s_b95_stage(0)) and not s_b95_stall when run,
      '1' when flush,
      '0' when others;
  process (clk,reset)
  begin
    if (reset='1') then
      s_b95_stage <= "000";
    elsif (clk'event and clk='1') then
      if (s_b95_state = idle) then
       s_b95_stage <= "000";
      elsif (thisState = b95s0 and s_b95_stall = '0') then
       s_b95_stage <= s_b95_vcont(1 downto 0) & (not s_b95_break and not s_b95_flushing);
      end if;    end if;
  end process;

  process (clk,reset)
  begin
    if (reset='1') then
      s_b95_vflush <= "000";
    elsif (clk'event and clk='1') then
      if (s_b95_state = idle) then
       s_b95_vflush <= "000";
      elsif (s_b95_stall = '0') then
       s_b95_vflush <= (s_b95_vflush(1 downto 0) or s_b95_vbreak(1 downto 0)) & '0';
      end if;    end if;
  end process;

  s_b95_stall <= 
    '0' when (s_b95_vstall and s_b95_stage) = "000" else
    '1';
  s_b95_vwrite(0) <= 
    s_b95_stage(0) when s_b95_stall = '0' and s_b95_final = '0' else
    '0';
  s_b95_vwrite(1) <= 
    s_b95_stage(1) when s_b95_stall = '0' and s_b95_final = '0' else
    '0';
  s_b95_vwrite(2) <= 
    s_b95_stage(2) when s_b95_stall = '0' else
    '0';
  s_b95_vcont(0) <= (s_b95_stage(0) and not s_b95_vbreak(0)) and not s_b95_final;
  s_b95_vcont(1) <= s_b95_stage(1) and not s_b95_final;
  s_b95_vcont(2) <= '0';
  s_b95_final <= '0';
  s_b95_flushing <= 
    '1' when s_b95_state = flush else
    s_b95_final;
  s_b95_flushed <= 
    '1' when s_b95_stall = '0' and (s_b95_vflush or s_b95_stage) = "000" else
    '1' when s_b95_vflush(2) = '1' else
    '0';
  with s_b95_state select
    s_b95_done <= 
      '0' when init,
      '0' when run,
      s_b95_flushed when flush,
      '0' when others;
-- b96s0
  ni7000_score_self <= r_score_self_bak;
  ni7001_avail_self <= r_avail_self_bak;

-- b97s0
  ni7004_avail_self <= r_avail_self and not shl(X"000001", sign_ext(r_m_piece, 24));
  ni7007_yoff <= r_m_y;
  ni7008_xoff <= r_m_x;

-- b97s1
  ti5258_piece_sizes <= r_m_piece(4 downto 0);
  ni5258_piece_sizes <= p_piece_sizes_imm2;
  ni7003_size <= ni5258_piece_sizes;
  ni7005_score_self <= add(r_score_self, ni7003_size);
  ni7006_size <= sub(ni7003_size, X"01");

-- b98s0
  ni7010_y <= add(r_yoff, X"01");
  ni7011_x <= r_xoff;
  ni7012_y1 <= add(r_yoff, X"01");
  ni7013_x1 <= add(r_xoff, X"01");
  ni7020_y <= sub(r_yoff, X"01");
  ni7021_x <= r_xoff;
  ni7022_y1 <= sub(r_yoff, X"01");
  ni7023_x1 <= sub(r_xoff, X"01");
  ni7030_y <= r_yoff;
  ni7031_x <= add(r_xoff, X"01");
  ni7032_y1 <= sub(r_yoff, X"01");
  ni7033_x1 <= add(r_xoff, X"01");
  ni7040_y <= r_yoff;
  ni7041_x <= sub(r_xoff, X"01");
  ni7042_y1 <= add(r_yoff, X"01");
  ni7043_x1 <= sub(r_xoff, X"01");
  ni7050_size <= sub(r_size, X"01");
  ni7051_suif_tmp129 <= "0000000000000000000000000000000" & cmp_less_s(ni7050_size, X"00");
  ni7009_r_e_g_0 <= add(shl(sign_ext(r_yoff, 10), 5), sign_ext(r_xoff, 10));
  ni6665887_r_e_g_1 <= sign_ext(ni7010_y, 10);
  ni6665890_r_e_g_2 <= sign_ext(ni7011_x, 10);
  ni6665891_r_e_g_4 <= sign_ext(ni7012_y1, 10);
  ni6665894_r_e_g_5 <= sign_ext(ni7013_x1, 10);
  ni6665895_r_e_g_6 <= sign_ext(ni7010_y, 10);
  ni6665898_r_e_g_7 <= sign_ext(ni7011_x, 10);
  ni6665899_r_e_g_8 <= sign_ext(ni7012_y1, 10);
  ni6665902_r_e_g_9 <= sign_ext(ni7013_x1, 10);
  ni6665903_r_e_g_10 <= sign_ext(ni7020_y, 10);
  ni6665906_r_e_g_11 <= sign_ext(ni7021_x, 10);
  ni6665907_r_e_g_12 <= sign_ext(ni7022_y1, 10);
  ni6665910_r_e_g_13 <= sign_ext(ni7023_x1, 10);
  ni6665911_r_e_g_14 <= sign_ext(ni7020_y, 10);
  ni6665914_r_e_g_15 <= sign_ext(ni7021_x, 10);
  ni6665915_r_e_g_16 <= sign_ext(ni7022_y1, 10);
  ni6665918_r_e_g_17 <= sign_ext(ni7023_x1, 10);
  ni6665919_r_e_g_18 <= sign_ext(ni7030_y, 10);
  ni6665922_r_e_g_19 <= sign_ext(ni7031_x, 10);
  ni6665923_r_e_g_20 <= sign_ext(ni7032_y1, 10);
  ni6665926_r_e_g_21 <= sign_ext(ni7033_x1, 10);
  ni6665927_r_e_g_22 <= sign_ext(ni7030_y, 10);
  ni6665930_r_e_g_23 <= sign_ext(ni7031_x, 10);
  ni6665931_r_e_g_24 <= sign_ext(ni7032_y1, 10);
  ni6665934_r_e_g_25 <= sign_ext(ni7033_x1, 10);

-- b98s1
  ni5292_board <= X"0d";

-- b98s2
  ni7015_r_e_g_0 <= add(shl(r_r_e_g_1, 5), r_r_e_g_2);
  ni7017_r_e_g_1 <= add(shl(r_r_e_g_4, 5), r_r_e_g_5);
  ni7018_r_e_g_2 <= add(shl(r_r_e_g_6, 5), r_r_e_g_7);

-- b98s3
  ni5325_board <= p_board_imm2;
  ni7014_board_t <= ni5325_board;
  ni5333_board <= p_board_imm;
  ni7016_board_t1 <= ni5333_board;
  ni5340_board <= ni7014_board_t or X"04";
  ni7019_r_e_g_0 <= add(shl(r_r_e_g_8, 5), r_r_e_g_9);

-- b98s4
  ni5356_board <= r_board_t1 or X"10";

-- b98s5
  ni7025_r_e_g_0 <= add(shl(r_r_e_g_10, 5), r_r_e_g_11);
  ni7027_r_e_g_1 <= add(shl(r_r_e_g_12, 5), r_r_e_g_13);
  ni7028_r_e_g_2 <= add(shl(r_r_e_g_14, 5), r_r_e_g_15);

-- b98s6
  ni5390_board <= p_board_imm2;
  ni7024_board_t <= ni5390_board;
  ni5398_board <= p_board_imm;
  ni7026_board_t1 <= ni5398_board;
  ni5405_board <= ni7024_board_t or X"04";
  ni7029_r_e_g_0 <= add(shl(r_r_e_g_16, 5), r_r_e_g_17);

-- b98s7
  ni5421_board <= r_board_t1 or X"10";

-- b98s8
  ni7035_r_e_g_0 <= add(shl(r_r_e_g_18, 5), r_r_e_g_19);
  ni7037_r_e_g_1 <= add(shl(r_r_e_g_20, 5), r_r_e_g_21);
  ni7038_r_e_g_2 <= add(shl(r_r_e_g_22, 5), r_r_e_g_23);

-- b98s9
  ni5455_board <= p_board_imm2;
  ni7034_board_t <= ni5455_board;
  ni5463_board <= p_board_imm;
  ni7036_board_t1 <= ni5463_board;
  ni5470_board <= ni7034_board_t or X"04";
  ni7039_r_e_g_0 <= add(shl(r_r_e_g_24, 5), r_r_e_g_25);

-- b98s10
  ni5486_board <= r_board_t1 or X"10";

-- b98s11
  ni7045_r_e_g_0 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));
  ni7047_r_e_g_1 <= add(shl(sign_ext(r_y1, 10), 5), sign_ext(r_x1, 10));
  ni7048_r_e_g_2 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));

-- b98s12
  ni5520_board <= p_board_imm2;
  ni7044_board_t <= ni5520_board;
  ni5528_board <= p_board_imm;
  ni7046_board_t1 <= ni5528_board;
  ni5535_board <= ni7044_board_t or X"04";
  ni7049_r_e_g_0 <= add(shl(sign_ext(r_y1, 10), 5), sign_ext(r_x1, 10));

-- b98s13
  ni5551_board <= r_board_t1 or X"10";

-- b98s14
  ni7053_r_e_g_0 <= add(shl(add(shl(sign_ext(r_m_piece, 10), 3), sign_ext(r_m_rotate, 10)), 2), sign_ext(r_size, 10));
  ni7055_r_e_g_1 <= add(shl(add(shl(sign_ext(r_m_piece, 10), 3), sign_ext(r_m_rotate, 10)), 2), sign_ext(r_size, 10));

-- b98s15
  ni5585_piece_y <= p_piece_y_imm2;
  ni7052_yoff <= add(r_m_y, ni5585_piece_y);
  ni5599_piece_x <= p_piece_x_imm2;
  ni7054_xoff <= add(r_m_x, ni5599_piece_x);

-- b99s0
  ni7058_avail_opp <= r_avail_opp and not shl(X"000001", sign_ext(r_m_piece, 24));
  ni7061_yoff <= r_m_y;
  ni7062_xoff <= r_m_x;

-- b99s1
  ti5617_piece_sizes <= r_m_piece(4 downto 0);
  ni5617_piece_sizes <= p_piece_sizes_imm2;
  ni7057_size <= ni5617_piece_sizes;
  ni7059_score_opp <= add(r_score_opp, ni7057_size);
  ni7060_size <= sub(ni7057_size, X"01");

-- b100s0
  ni7064_y <= add(r_yoff, X"01");
  ni7065_x <= r_xoff;
  ni7066_y1 <= add(r_yoff, X"01");
  ni7067_x1 <= add(r_xoff, X"01");
  ni7074_y <= sub(r_yoff, X"01");
  ni7075_x <= r_xoff;
  ni7076_y1 <= sub(r_yoff, X"01");
  ni7077_x1 <= sub(r_xoff, X"01");
  ni7084_y <= r_yoff;
  ni7085_x <= add(r_xoff, X"01");
  ni7086_y1 <= sub(r_yoff, X"01");
  ni7087_x1 <= add(r_xoff, X"01");
  ni7094_y <= r_yoff;
  ni7095_x <= sub(r_xoff, X"01");
  ni7096_y1 <= add(r_yoff, X"01");
  ni7097_x1 <= sub(r_xoff, X"01");
  ni7104_size <= sub(r_size, X"01");
  ni7105_suif_tmp131 <= "0000000000000000000000000000000" & cmp_less_s(ni7104_size, X"00");
  ni7063_r_e_g_0 <= add(shl(sign_ext(r_yoff, 10), 5), sign_ext(r_xoff, 10));
  ni6665969_r_e_g_1 <= sign_ext(ni7064_y, 10);
  ni6665972_r_e_g_2 <= sign_ext(ni7065_x, 10);
  ni6665973_r_e_g_4 <= sign_ext(ni7066_y1, 10);
  ni6665976_r_e_g_5 <= sign_ext(ni7067_x1, 10);
  ni6665977_r_e_g_6 <= sign_ext(ni7064_y, 10);
  ni6665980_r_e_g_7 <= sign_ext(ni7065_x, 10);
  ni6665981_r_e_g_8 <= sign_ext(ni7066_y1, 10);
  ni6665984_r_e_g_9 <= sign_ext(ni7067_x1, 10);
  ni6665985_r_e_g_10 <= sign_ext(ni7074_y, 10);
  ni6665988_r_e_g_11 <= sign_ext(ni7075_x, 10);
  ni6665989_r_e_g_12 <= sign_ext(ni7076_y1, 10);
  ni6665992_r_e_g_13 <= sign_ext(ni7077_x1, 10);
  ni6665993_r_e_g_14 <= sign_ext(ni7074_y, 10);
  ni6665996_r_e_g_15 <= sign_ext(ni7075_x, 10);
  ni6665997_r_e_g_16 <= sign_ext(ni7076_y1, 10);
  ni6666000_r_e_g_17 <= sign_ext(ni7077_x1, 10);
  ni6666001_r_e_g_18 <= sign_ext(ni7084_y, 10);
  ni6666004_r_e_g_19 <= sign_ext(ni7085_x, 10);
  ni6666005_r_e_g_20 <= sign_ext(ni7086_y1, 10);
  ni6666008_r_e_g_21 <= sign_ext(ni7087_x1, 10);
  ni6666009_r_e_g_22 <= sign_ext(ni7084_y, 10);
  ni6666012_r_e_g_23 <= sign_ext(ni7085_x, 10);
  ni6666013_r_e_g_24 <= sign_ext(ni7086_y1, 10);
  ni6666016_r_e_g_25 <= sign_ext(ni7087_x1, 10);

-- b100s1
  ni5651_board <= X"0e";

-- b100s2
  ni7069_r_e_g_0 <= add(shl(r_r_e_g_1, 5), r_r_e_g_2);
  ni7071_r_e_g_1 <= add(shl(r_r_e_g_4, 5), r_r_e_g_5);
  ni7072_r_e_g_2 <= add(shl(r_r_e_g_6, 5), r_r_e_g_7);

-- b100s3
  ni5684_board <= p_board_imm2;
  ni7068_board_t <= ni5684_board;
  ni5692_board <= p_board_imm;
  ni7070_board_t1 <= ni5692_board;
  ni5699_board <= ni7068_board_t or X"08";
  ni7073_r_e_g_0 <= add(shl(r_r_e_g_8, 5), r_r_e_g_9);

-- b100s4
  ni5715_board <= r_board_t1 or X"20";

-- b100s5
  ni7079_r_e_g_0 <= add(shl(r_r_e_g_10, 5), r_r_e_g_11);
  ni7081_r_e_g_1 <= add(shl(r_r_e_g_12, 5), r_r_e_g_13);
  ni7082_r_e_g_2 <= add(shl(r_r_e_g_14, 5), r_r_e_g_15);

-- b100s6
  ni5749_board <= p_board_imm2;
  ni7078_board_t <= ni5749_board;
  ni5757_board <= p_board_imm;
  ni7080_board_t1 <= ni5757_board;
  ni5764_board <= ni7078_board_t or X"08";
  ni7083_r_e_g_0 <= add(shl(r_r_e_g_16, 5), r_r_e_g_17);

-- b100s7
  ni5780_board <= r_board_t1 or X"20";

-- b100s8
  ni7089_r_e_g_0 <= add(shl(r_r_e_g_18, 5), r_r_e_g_19);
  ni7091_r_e_g_1 <= add(shl(r_r_e_g_20, 5), r_r_e_g_21);
  ni7092_r_e_g_2 <= add(shl(r_r_e_g_22, 5), r_r_e_g_23);

-- b100s9
  ni5814_board <= p_board_imm2;
  ni7088_board_t <= ni5814_board;
  ni5822_board <= p_board_imm;
  ni7090_board_t1 <= ni5822_board;
  ni5829_board <= ni7088_board_t or X"08";
  ni7093_r_e_g_0 <= add(shl(r_r_e_g_24, 5), r_r_e_g_25);

-- b100s10
  ni5845_board <= r_board_t1 or X"20";

-- b100s11
  ni7099_r_e_g_0 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));
  ni7101_r_e_g_1 <= add(shl(sign_ext(r_y1, 10), 5), sign_ext(r_x1, 10));
  ni7102_r_e_g_2 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));

-- b100s12
  ni5879_board <= p_board_imm2;
  ni7098_board_t <= ni5879_board;
  ni5887_board <= p_board_imm;
  ni7100_board_t1 <= ni5887_board;
  ni5894_board <= ni7098_board_t or X"08";
  ni7103_r_e_g_0 <= add(shl(sign_ext(r_y1, 10), 5), sign_ext(r_x1, 10));

-- b100s13
  ni5910_board <= r_board_t1 or X"20";

-- b100s14
  ni7107_r_e_g_0 <= add(shl(add(shl(sign_ext(r_m_piece, 10), 3), sign_ext(r_m_rotate, 10)), 2), sign_ext(r_size, 10));
  ni7109_r_e_g_1 <= add(shl(add(shl(sign_ext(r_m_piece, 10), 3), sign_ext(r_m_rotate, 10)), 2), sign_ext(r_size, 10));

-- b100s15
  ni5944_piece_y <= p_piece_y_imm2;
  ni7106_yoff <= add(r_m_y, ni5944_piece_y);
  ni5958_piece_x <= p_piece_x_imm2;
  ni7108_xoff <= add(r_m_x, ni5958_piece_x);

-- b101s0
  ni7111_y <= X"00";

-- b102s0
  ni7114_x <= X"00";

-- b103s0
  ni7117_suif_tmp3_0 <= "0000000000000000000000000000000" & cmp_less_s(r_x, X"04");

-- b104s0
  ni7118_suif_tmp4_0 <= r_suif_tmp3_0;

-- b105s0
  ni7119_suif_tmp1_0 <= "0000000000000000000000000000000" & cmp_less_s(r_y, X"04");

-- b106s0
  ni7120_suif_tmp2_0 <= r_suif_tmp1_0;

-- b107s0
  ni7121_suif_tmp_1 <= "0000000000000000000000000000000" & cmp_less_s(X"11", r_x);

-- b108s0
  ni7122_suif_tmp0_0 <= r_suif_tmp_1;

-- b109s0
  ni7123_suif_tmp0_0 <= "0000000000000000000000000000000" & cmp_less_s(X"11", r_y);

-- b110s0
  ni7124_suif_tmp2_0 <= r_suif_tmp0_0;

-- b111s0
  ni7125_suif_tmp4_0 <= r_suif_tmp2_0;

-- b112s0
  ni7126_r_e_g_0 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));

-- b112s1
  ni6022_board <= X"0f";

-- b113s0
  ni7127_r_e_g_0 <= add(shl(sign_ext(r_y, 10), 5), sign_ext(r_x, 10));

-- b113s1
  ni6038_board <= X"00";

-- b114s0
  ni7128_x <= add(r_x, X"01");
  ni7129_suif_tmp134 <= "0000000000000000000000000000000" & cmp_less_s(ni7128_x, X"20");

-- b115s0
  ni7130_y <= add(r_y, X"01");
  ni7131_suif_tmp133 <= "0000000000000000000000000000000" & cmp_less_s(ni7130_y, X"20");

-- b116s0
  ni7132_avail_self <= X"7fffff";
  ni7133_avail_opp <= X"7fffff";
  ni7134_score_self <= X"00";
  ni7135_score_opp <= X"00";

-- b117s0

-- b118s0

-- 


  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b0s0 =>
        r_y <= ni6322_y;
      when b14s0 =>
        r_y <= ni6341_y;
      when b17s0 =>
        r_y <= ni6359_y;
      when b80s0 =>
        r_y <= ni6769_y;
      when b83s0 =>
        r_y <= ni6787_y;
      when b83s2 =>
        r_y <= ni6799_y;
      when b83s5 =>
        r_y <= ni6811_y;
      when b83s8 =>
        r_y <= ni6823_y;
      when b88s0 =>
        r_y <= ni6863_y;
      when b88s2 =>
        r_y <= ni6875_y;
      when b88s5 =>
        r_y <= ni6887_y;
      when b88s8 =>
        r_y <= ni6899_y;
      when b93s0 =>
        r_y <= ni6939_y;
      when b93s2 =>
        r_y <= ni6951_y;
      when b93s5 =>
        r_y <= ni6963_y;
      when b93s8 =>
        r_y <= ni6975_y;
      when b98s0 =>
        r_y <= ni7040_y;
      when b100s0 =>
        r_y <= ni7094_y;
      when b101s0 =>
        r_y <= ni7111_y;
      when b115s0 =>
        r_y <= ni7130_y;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b1s0 =>
        r_x <= ni6325_x;
      when b13s0 =>
        r_x <= ni6339_x;
      when b18s0 =>
        r_x <= ni6362_x;
      when b79s0 =>
        r_x <= ni6767_x;
      when b83s0 =>
        r_x <= ni6788_x;
      when b83s2 =>
        r_x <= ni6800_x;
      when b83s5 =>
        r_x <= ni6812_x;
      when b83s8 =>
        r_x <= ni6824_x;
      when b88s0 =>
        r_x <= ni6864_x;
      when b88s2 =>
        r_x <= ni6876_x;
      when b88s5 =>
        r_x <= ni6888_x;
      when b88s8 =>
        r_x <= ni6900_x;
      when b93s0 =>
        r_x <= ni6940_x;
      when b93s2 =>
        r_x <= ni6952_x;
      when b93s5 =>
        r_x <= ni6964_x;
      when b93s8 =>
        r_x <= ni6976_x;
      when b98s0 =>
        r_x <= ni7041_x;
      when b100s0 =>
        r_x <= ni7095_x;
      when b102s0 =>
        r_x <= ni7114_x;
      when b114s0 =>
        r_x <= ni7128_x;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b2s0 =>
        r_suif_tmp3 <= ni6328_suif_tmp3;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b3s0 =>
        r_suif_tmp4 <= ni6329_suif_tmp4;
      when b10s0 =>
        r_suif_tmp4 <= ni6336_suif_tmp4;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b4s0 =>
        r_suif_tmp10 <= ni6330_suif_tmp10;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b5s0 =>
        r_suif_tmp2 <= ni6331_suif_tmp2;
      when b9s0 =>
        r_suif_tmp2 <= ni6335_suif_tmp2;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b6s0 =>
        r_suif_tmp1 <= ni6332_suif_tmp1;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b7s0 =>
        r_suif_tmp00 <= ni6333_suif_tmp00;
      when b8s0 =>
        r_suif_tmp00 <= ni6334_suif_tmp00;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b11s0 =>
        r_r_e_g_0 <= ni6337_r_e_g_0;
      when b12s0 =>
        r_r_e_g_0 <= ni6338_r_e_g_0;
      when b19s0 =>
        r_r_e_g_0 <= ni6366_r_e_g_0;
      when b20s0 =>
        r_r_e_g_0 <= ni6373_r_e_g_0;
      when b20s1 =>
        r_r_e_g_0 <= ni6381_r_e_g_0;
      when b20s2 =>
        r_r_e_g_0 <= ni6389_r_e_g_0;
      when b20s3 =>
        r_r_e_g_0 <= ni6397_r_e_g_0;
      when b20s4 =>
        r_r_e_g_0 <= ni6405_r_e_g_0;
      when b20s5 =>
        r_r_e_g_0 <= ni6413_r_e_g_0;
      when b20s6 =>
        r_r_e_g_0 <= ni6421_r_e_g_0;
      when b20s7 =>
        r_r_e_g_0 <= ni6429_r_e_g_0;
      when b20s8 =>
        r_r_e_g_0 <= ni6437_r_e_g_0;
      when b20s9 =>
        r_r_e_g_0 <= ni6445_r_e_g_0;
      when b20s10 =>
        r_r_e_g_0 <= ni6453_r_e_g_0;
      when b20s11 =>
        r_r_e_g_0 <= ni6461_r_e_g_0;
      when b20s12 =>
        r_r_e_g_0 <= ni6469_r_e_g_0;
      when b20s13 =>
        r_r_e_g_0 <= ni6477_r_e_g_0;
      when b20s14 =>
        r_r_e_g_0 <= ni6485_r_e_g_0;
      when b20s15 =>
        r_r_e_g_0 <= ni6493_r_e_g_0;
      when b20s16 =>
        r_r_e_g_0 <= ni6501_r_e_g_0;
      when b20s17 =>
        r_r_e_g_0 <= ni6509_r_e_g_0;
      when b20s18 =>
        r_r_e_g_0 <= ni6517_r_e_g_0;
      when b20s19 =>
        r_r_e_g_0 <= ni6525_r_e_g_0;
      when b83s0 =>
        r_r_e_g_0 <= ni6784_r_e_g_0;
      when b83s2 =>
        r_r_e_g_0 <= ni6792_r_e_g_0;
      when b83s3 =>
        r_r_e_g_0 <= ni6796_r_e_g_0;
      when b83s5 =>
        r_r_e_g_0 <= ni6804_r_e_g_0;
      when b83s6 =>
        r_r_e_g_0 <= ni6808_r_e_g_0;
      when b83s8 =>
        r_r_e_g_0 <= ni6816_r_e_g_0;
      when b83s9 =>
        r_r_e_g_0 <= ni6820_r_e_g_0;
      when b83s11 =>
        r_r_e_g_0 <= ni6828_r_e_g_0;
      when b83s12 =>
        r_r_e_g_0 <= ni6832_r_e_g_0;
      when b83s14 =>
        r_r_e_g_0 <= ni6838_r_e_g_0;
      when b88s0 =>
        r_r_e_g_0 <= ni6860_r_e_g_0;
      when b88s2 =>
        r_r_e_g_0 <= ni6868_r_e_g_0;
      when b88s3 =>
        r_r_e_g_0 <= ni6872_r_e_g_0;
      when b88s5 =>
        r_r_e_g_0 <= ni6880_r_e_g_0;
      when b88s6 =>
        r_r_e_g_0 <= ni6884_r_e_g_0;
      when b88s8 =>
        r_r_e_g_0 <= ni6892_r_e_g_0;
      when b88s9 =>
        r_r_e_g_0 <= ni6896_r_e_g_0;
      when b88s11 =>
        r_r_e_g_0 <= ni6904_r_e_g_0;
      when b88s12 =>
        r_r_e_g_0 <= ni6908_r_e_g_0;
      when b88s14 =>
        r_r_e_g_0 <= ni6914_r_e_g_0;
      when b93s0 =>
        r_r_e_g_0 <= ni6936_r_e_g_0;
      when b93s2 =>
        r_r_e_g_0 <= ni6944_r_e_g_0;
      when b93s3 =>
        r_r_e_g_0 <= ni6948_r_e_g_0;
      when b93s5 =>
        r_r_e_g_0 <= ni6956_r_e_g_0;
      when b93s6 =>
        r_r_e_g_0 <= ni6960_r_e_g_0;
      when b93s8 =>
        r_r_e_g_0 <= ni6968_r_e_g_0;
      when b93s9 =>
        r_r_e_g_0 <= ni6972_r_e_g_0;
      when b93s11 =>
        r_r_e_g_0 <= ni6980_r_e_g_0;
      when b93s12 =>
        r_r_e_g_0 <= ni6984_r_e_g_0;
      when b93s14 =>
        r_r_e_g_0 <= ni6990_r_e_g_0;
      when b98s0 =>
        r_r_e_g_0 <= ni7009_r_e_g_0;
      when b98s2 =>
        r_r_e_g_0 <= ni7015_r_e_g_0;
      when b98s3 =>
        r_r_e_g_0 <= ni7019_r_e_g_0;
      when b98s5 =>
        r_r_e_g_0 <= ni7025_r_e_g_0;
      when b98s6 =>
        r_r_e_g_0 <= ni7029_r_e_g_0;
      when b98s8 =>
        r_r_e_g_0 <= ni7035_r_e_g_0;
      when b98s9 =>
        r_r_e_g_0 <= ni7039_r_e_g_0;
      when b98s11 =>
        r_r_e_g_0 <= ni7045_r_e_g_0;
      when b98s12 =>
        r_r_e_g_0 <= ni7049_r_e_g_0;
      when b98s14 =>
        r_r_e_g_0 <= ni7053_r_e_g_0;
      when b100s0 =>
        r_r_e_g_0 <= ni7063_r_e_g_0;
      when b100s2 =>
        r_r_e_g_0 <= ni7069_r_e_g_0;
      when b100s3 =>
        r_r_e_g_0 <= ni7073_r_e_g_0;
      when b100s5 =>
        r_r_e_g_0 <= ni7079_r_e_g_0;
      when b100s6 =>
        r_r_e_g_0 <= ni7083_r_e_g_0;
      when b100s8 =>
        r_r_e_g_0 <= ni7089_r_e_g_0;
      when b100s9 =>
        r_r_e_g_0 <= ni7093_r_e_g_0;
      when b100s11 =>
        r_r_e_g_0 <= ni7099_r_e_g_0;
      when b100s12 =>
        r_r_e_g_0 <= ni7103_r_e_g_0;
      when b100s14 =>
        r_r_e_g_0 <= ni7107_r_e_g_0;
      when b112s0 =>
        r_r_e_g_0 <= ni7126_r_e_g_0;
      when b113s0 =>
        r_r_e_g_0 <= ni7127_r_e_g_0;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b13s0 =>
        r_suif_tmp0 <= ni6340_suif_tmp0;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b14s0 =>
        r_suif_tmp <= ni6342_suif_tmp;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b15s0 =>
        r_avail_self <= ni6343_avail_self;
      when b82s0 =>
        r_avail_self <= ni6778_avail_self;
      when b86s0 =>
        r_avail_self <= ni6849_avail_self;
      when b92s0 =>
        r_avail_self <= ni6930_avail_self;
      when b96s0 =>
        r_avail_self <= ni7001_avail_self;
      when b97s0 =>
        r_avail_self <= ni7004_avail_self;
      when b116s0 =>
        r_avail_self <= ni7132_avail_self;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b15s0 =>
        r_avail_opp <= ni6344_avail_opp;
      when b87s0 =>
        r_avail_opp <= ni6854_avail_opp;
      when b91s0 =>
        r_avail_opp <= ni6925_avail_opp;
      when b99s0 =>
        r_avail_opp <= ni7058_avail_opp;
      when b116s0 =>
        r_avail_opp <= ni7133_avail_opp;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b15s0 =>
        r_score_self <= ni6345_score_self;
      when b82s1 =>
        r_score_self <= ni6779_score_self;
      when b86s0 =>
        r_score_self <= ni6848_score_self;
      when b92s1 =>
        r_score_self <= ni6931_score_self;
      when b96s0 =>
        r_score_self <= ni7000_score_self;
      when b97s1 =>
        r_score_self <= ni7005_score_self;
      when b116s0 =>
        r_score_self <= ni7134_score_self;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b15s0 =>
        r_score_opp <= ni6346_score_opp;
      when b87s1 =>
        r_score_opp <= ni6855_score_opp;
      when b91s0 =>
        r_score_opp <= ni6924_score_opp;
      when b99s1 =>
        r_score_opp <= ni7059_score_opp;
      when b116s0 =>
        r_score_opp <= ni7135_score_opp;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b16s1 =>
        r_move <= ni6349_move;
      when b81s0 =>
        if (s_b81s0_en = '1') then
          r_move <= ni6773_move;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b16s1 =>
        r_move_type <= ni6350_move_type;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b16s1 =>
        r_m_x <= ni6351_m_x;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b16s1 =>
        r_m_y <= ni6352_m_y;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b16s1 =>
        r_m_piece <= ni6353_m_piece;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b16s1 =>
        r_m_rotate <= ni6354_m_rotate;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b16s1 =>
        r_suif_tmp_0 <= ni6355_suif_tmp_0;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b16s1 =>
        r_suif_tmp5 <= ni6356_suif_tmp5;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b16s1 =>
        r_suif_tmp116 <= ni6774_suif_tmp116;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b16s1 =>
        r_suif_tmp118 <= ni6841_suif_tmp118;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b16s1 =>
        r_suif_tmp120 <= ni6850_suif_tmp120;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b16s1 =>
        r_suif_tmp122 <= ni6917_suif_tmp122;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b16s1 =>
        r_suif_tmp124 <= ni6926_suif_tmp124;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b16s1 =>
        r_suif_tmp126 <= ni6993_suif_tmp126;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b16s1 =>
        r_suif_tmp128 <= ni7002_suif_tmp128;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b16s1 =>
        r_suif_tmp130 <= ni7056_suif_tmp130;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b16s1 =>
        r_suif_tmp132 <= ni7110_suif_tmp132;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b16s1 =>
        r_switched <= ni6666055_switched;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b17s0 =>
        r_utility <= ni6357_utility;
      when b81s0 =>
        if (s_b81s0_en = '1') then
          r_utility <= ni6771_utility;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b17s0 =>
        r_net_lib <= ni6358_net_lib;
      when b78s0 =>
        r_net_lib <= ni6766_net_lib;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b19s1 =>
        r_temp <= ni6365_temp;
      when b20s1 =>
        r_temp <= ni6376_temp;
      when b20s2 =>
        r_temp <= ni6384_temp;
      when b20s3 =>
        r_temp <= ni6392_temp;
      when b20s4 =>
        r_temp <= ni6400_temp;
      when b20s5 =>
        r_temp <= ni6408_temp;
      when b20s6 =>
        r_temp <= ni6416_temp;
      when b20s7 =>
        r_temp <= ni6424_temp;
      when b20s8 =>
        r_temp <= ni6432_temp;
      when b20s9 =>
        r_temp <= ni6440_temp;
      when b20s10 =>
        r_temp <= ni6448_temp;
      when b20s11 =>
        r_temp <= ni6456_temp;
      when b20s12 =>
        r_temp <= ni6464_temp;
      when b20s13 =>
        r_temp <= ni6472_temp;
      when b20s14 =>
        r_temp <= ni6480_temp;
      when b20s15 =>
        r_temp <= ni6488_temp;
      when b20s16 =>
        r_temp <= ni6496_temp;
      when b20s17 =>
        r_temp <= ni6504_temp;
      when b20s18 =>
        r_temp <= ni6512_temp;
      when b20s19 =>
        r_temp <= ni6520_temp;
      when b20s20 =>
        r_temp <= ni6528_temp;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b19s1 =>
        r_s_0_0 <= ni6367_s_0_0;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b19s1 =>
        r_o_0_0 <= ni6368_o_0_0;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b19s1 =>
        r_suif_tmp8 <= ni6369_suif_tmp8;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s0 =>
        r_value_self <= ni6370_value_self;
      when b22s0 =>
        r_value_self <= ni6534_value_self;
      when b23s0 =>
        r_value_self <= ni6543_value_self;
      when b25s0 =>
        r_value_self <= ni6552_value_self;
      when b27s0 =>
        r_value_self <= ni6561_value_self;
      when b29s0 =>
        r_value_self <= ni6563_value_self;
      when b30s0 =>
        r_value_self <= ni6572_value_self;
      when b32s0 =>
        r_value_self <= ni6581_value_self;
      when b34s0 =>
        r_value_self <= ni6590_value_self;
      when b36s0 =>
        r_value_self <= ni6592_value_self;
      when b37s0 =>
        r_value_self <= ni6601_value_self;
      when b39s0 =>
        r_value_self <= ni6610_value_self;
      when b41s0 =>
        r_value_self <= ni6619_value_self;
      when b43s0 =>
        r_value_self <= ni6621_value_self;
      when b44s0 =>
        r_value_self <= ni6630_value_self;
      when b46s0 =>
        r_value_self <= ni6639_value_self;
      when b48s0 =>
        r_value_self <= ni6648_value_self;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s0 =>
        r_value_opp <= ni6371_value_opp;
      when b51s0 =>
        r_value_opp <= ni6651_value_opp;
      when b52s0 =>
        r_value_opp <= ni6660_value_opp;
      when b54s0 =>
        r_value_opp <= ni6669_value_opp;
      when b56s0 =>
        r_value_opp <= ni6678_value_opp;
      when b58s0 =>
        r_value_opp <= ni6680_value_opp;
      when b59s0 =>
        r_value_opp <= ni6689_value_opp;
      when b61s0 =>
        r_value_opp <= ni6698_value_opp;
      when b63s0 =>
        r_value_opp <= ni6707_value_opp;
      when b65s0 =>
        r_value_opp <= ni6709_value_opp;
      when b66s0 =>
        r_value_opp <= ni6718_value_opp;
      when b68s0 =>
        r_value_opp <= ni6727_value_opp;
      when b70s0 =>
        r_value_opp <= ni6736_value_opp;
      when b72s0 =>
        r_value_opp <= ni6738_value_opp;
      when b73s0 =>
        r_value_opp <= ni6747_value_opp;
      when b75s0 =>
        r_value_opp <= ni6756_value_opp;
      when b77s0 =>
        r_value_opp <= ni6765_value_opp;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s0 =>
        r_suif_tmp9 <= ni6532_suif_tmp9;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s0 =>
        r_r_e_g_1 <= ni6377_r_e_g_1;
      when b20s1 =>
        r_r_e_g_1 <= ni6385_r_e_g_1;
      when b20s2 =>
        r_r_e_g_1 <= ni6393_r_e_g_1;
      when b20s3 =>
        r_r_e_g_1 <= ni6401_r_e_g_1;
      when b20s4 =>
        r_r_e_g_1 <= ni6409_r_e_g_1;
      when b20s5 =>
        r_r_e_g_1 <= ni6417_r_e_g_1;
      when b20s6 =>
        r_r_e_g_1 <= ni6425_r_e_g_1;
      when b20s7 =>
        r_r_e_g_1 <= ni6433_r_e_g_1;
      when b20s8 =>
        r_r_e_g_1 <= ni6441_r_e_g_1;
      when b20s9 =>
        r_r_e_g_1 <= ni6449_r_e_g_1;
      when b20s10 =>
        r_r_e_g_1 <= ni6457_r_e_g_1;
      when b20s11 =>
        r_r_e_g_1 <= ni6465_r_e_g_1;
      when b20s12 =>
        r_r_e_g_1 <= ni6473_r_e_g_1;
      when b20s13 =>
        r_r_e_g_1 <= ni6481_r_e_g_1;
      when b20s14 =>
        r_r_e_g_1 <= ni6489_r_e_g_1;
      when b20s15 =>
        r_r_e_g_1 <= ni6497_r_e_g_1;
      when b20s16 =>
        r_r_e_g_1 <= ni6505_r_e_g_1;
      when b20s17 =>
        r_r_e_g_1 <= ni6513_r_e_g_1;
      when b20s18 =>
        r_r_e_g_1 <= ni6521_r_e_g_1;
      when b20s19 =>
        r_r_e_g_1 <= ni6529_r_e_g_1;
      when b83s0 =>
        r_r_e_g_1 <= ni6786_r_e_g_1;
      when b83s2 =>
        r_r_e_g_1 <= ni6794_r_e_g_1;
      when b83s5 =>
        r_r_e_g_1 <= ni6806_r_e_g_1;
      when b83s8 =>
        r_r_e_g_1 <= ni6818_r_e_g_1;
      when b83s11 =>
        r_r_e_g_1 <= ni6830_r_e_g_1;
      when b83s14 =>
        r_r_e_g_1 <= ni6840_r_e_g_1;
      when b88s0 =>
        r_r_e_g_1 <= ni6862_r_e_g_1;
      when b88s2 =>
        r_r_e_g_1 <= ni6870_r_e_g_1;
      when b88s5 =>
        r_r_e_g_1 <= ni6882_r_e_g_1;
      when b88s8 =>
        r_r_e_g_1 <= ni6894_r_e_g_1;
      when b88s11 =>
        r_r_e_g_1 <= ni6906_r_e_g_1;
      when b88s14 =>
        r_r_e_g_1 <= ni6916_r_e_g_1;
      when b93s0 =>
        r_r_e_g_1 <= ni6938_r_e_g_1;
      when b93s2 =>
        r_r_e_g_1 <= ni6946_r_e_g_1;
      when b93s5 =>
        r_r_e_g_1 <= ni6958_r_e_g_1;
      when b93s8 =>
        r_r_e_g_1 <= ni6970_r_e_g_1;
      when b93s11 =>
        r_r_e_g_1 <= ni6982_r_e_g_1;
      when b93s14 =>
        r_r_e_g_1 <= ni6992_r_e_g_1;
      when b98s0 =>
        r_r_e_g_1 <= ni6665887_r_e_g_1;
      when b98s2 =>
        r_r_e_g_1 <= ni7017_r_e_g_1;
      when b98s5 =>
        r_r_e_g_1 <= ni7027_r_e_g_1;
      when b98s8 =>
        r_r_e_g_1 <= ni7037_r_e_g_1;
      when b98s11 =>
        r_r_e_g_1 <= ni7047_r_e_g_1;
      when b98s14 =>
        r_r_e_g_1 <= ni7055_r_e_g_1;
      when b100s0 =>
        r_r_e_g_1 <= ni6665969_r_e_g_1;
      when b100s2 =>
        r_r_e_g_1 <= ni7071_r_e_g_1;
      when b100s5 =>
        r_r_e_g_1 <= ni7081_r_e_g_1;
      when b100s8 =>
        r_r_e_g_1 <= ni7091_r_e_g_1;
      when b100s11 =>
        r_r_e_g_1 <= ni7101_r_e_g_1;
      when b100s14 =>
        r_r_e_g_1 <= ni7109_r_e_g_1;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s1 =>
        r_s_m4_0 <= ni6374_s_m4_0;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s1 =>
        r_o_m4_0 <= ni6375_o_m4_0;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s1 =>
        r_s_m3_m1 <= ni6378_s_m3_m1;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s1 =>
        r_o_m3_m1 <= ni6379_o_m3_m1;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s2 =>
        r_s_m3_0 <= ni6382_s_m3_0;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s2 =>
        r_o_m3_0 <= ni6383_o_m3_0;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s2 =>
        r_s_m3_1 <= ni6386_s_m3_1;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s2 =>
        r_o_m3_1 <= ni6387_o_m3_1;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s3 =>
        r_s_m2_m2 <= ni6390_s_m2_m2;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s3 =>
        r_o_m2_m2 <= ni6391_o_m2_m2;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s3 =>
        r_s_m2_m1 <= ni6394_s_m2_m1;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s3 =>
        r_o_m2_m1 <= ni6395_o_m2_m1;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s4 =>
        r_s_m2_0 <= ni6398_s_m2_0;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s4 =>
        r_o_m2_0 <= ni6399_o_m2_0;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s4 =>
        r_s_m2_1 <= ni6402_s_m2_1;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s4 =>
        r_o_m2_1 <= ni6403_o_m2_1;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s5 =>
        r_s_m2_2 <= ni6406_s_m2_2;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s5 =>
        r_o_m2_2 <= ni6407_o_m2_2;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s5 =>
        r_s_m1_m3 <= ni6410_s_m1_m3;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s5 =>
        r_o_m1_m3 <= ni6411_o_m1_m3;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s6 =>
        r_s_m1_m2 <= ni6414_s_m1_m2;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s6 =>
        r_o_m1_m2 <= ni6415_o_m1_m2;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s6 =>
        r_s_m1_m1 <= ni6418_s_m1_m1;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s6 =>
        r_o_m1_m1 <= ni6419_o_m1_m1;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s7 =>
        r_s_m1_0 <= ni6422_s_m1_0;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s7 =>
        r_o_m1_0 <= ni6423_o_m1_0;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s7 =>
        r_s_m1_1 <= ni6426_s_m1_1;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s7 =>
        r_o_m1_1 <= ni6427_o_m1_1;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s8 =>
        r_s_m1_2 <= ni6430_s_m1_2;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s8 =>
        r_o_m1_2 <= ni6431_o_m1_2;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s8 =>
        r_s_m1_3 <= ni6434_s_m1_3;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s8 =>
        r_o_m1_3 <= ni6435_o_m1_3;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s9 =>
        r_s_0_m4 <= ni6438_s_0_m4;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s9 =>
        r_o_0_m4 <= ni6439_o_0_m4;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s9 =>
        r_s_0_m3 <= ni6442_s_0_m3;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s9 =>
        r_o_0_m3 <= ni6443_o_0_m3;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s10 =>
        r_s_0_m2 <= ni6446_s_0_m2;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s10 =>
        r_o_0_m2 <= ni6447_o_0_m2;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s10 =>
        r_s_0_m1 <= ni6450_s_0_m1;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s10 =>
        r_o_0_m1 <= ni6451_o_0_m1;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s11 =>
        r_s_0_1 <= ni6454_s_0_1;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s11 =>
        r_o_0_1 <= ni6455_o_0_1;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s11 =>
        r_s_0_2 <= ni6458_s_0_2;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s11 =>
        r_o_0_2 <= ni6459_o_0_2;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s12 =>
        r_s_0_3 <= ni6462_s_0_3;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s12 =>
        r_o_0_3 <= ni6463_o_0_3;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s12 =>
        r_s_0_4 <= ni6466_s_0_4;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s12 =>
        r_o_0_4 <= ni6467_o_0_4;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s13 =>
        r_s_1_m3 <= ni6470_s_1_m3;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s13 =>
        r_o_1_m3 <= ni6471_o_1_m3;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s13 =>
        r_s_1_m2 <= ni6474_s_1_m2;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s13 =>
        r_o_1_m2 <= ni6475_o_1_m2;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s14 =>
        r_s_1_m1 <= ni6478_s_1_m1;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s14 =>
        r_o_1_m1 <= ni6479_o_1_m1;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s14 =>
        r_s_1_0 <= ni6482_s_1_0;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s14 =>
        r_o_1_0 <= ni6483_o_1_0;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s15 =>
        r_s_1_1 <= ni6486_s_1_1;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s15 =>
        r_o_1_1 <= ni6487_o_1_1;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s15 =>
        r_s_1_2 <= ni6490_s_1_2;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s15 =>
        r_o_1_2 <= ni6491_o_1_2;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s16 =>
        r_s_1_3 <= ni6494_s_1_3;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s16 =>
        r_o_1_3 <= ni6495_o_1_3;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s16 =>
        r_s_2_m2 <= ni6498_s_2_m2;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s16 =>
        r_o_2_m2 <= ni6499_o_2_m2;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s17 =>
        r_s_2_m1 <= ni6502_s_2_m1;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s17 =>
        r_o_2_m1 <= ni6503_o_2_m1;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s17 =>
        r_s_2_0 <= ni6506_s_2_0;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s17 =>
        r_o_2_0 <= ni6507_o_2_0;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s18 =>
        r_s_2_1 <= ni6510_s_2_1;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s18 =>
        r_o_2_1 <= ni6511_o_2_1;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s18 =>
        r_s_2_2 <= ni6514_s_2_2;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s18 =>
        r_o_2_2 <= ni6515_o_2_2;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s19 =>
        r_s_3_m1 <= ni6518_s_3_m1;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s19 =>
        r_o_3_m1 <= ni6519_o_3_m1;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s19 =>
        r_s_3_0 <= ni6522_s_3_0;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s19 =>
        r_o_3_0 <= ni6523_o_3_0;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s20 =>
        r_s_3_1 <= ni6526_s_3_1;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s20 =>
        r_o_3_1 <= ni6527_o_3_1;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s20 =>
        r_s_4_0 <= ni6530_s_4_0;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s20 =>
        r_o_4_0 <= ni6531_o_4_0;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b21s0 =>
        r_suif_tmp11 <= ni6533_suif_tmp11;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b22s0 =>
        r_suif_tmp12 <= ni6535_suif_tmp12;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b23s0 =>
        r_val <= t_2;
      when b25s0 =>
        r_val <= t_5;
      when b27s0 =>
        r_val <= t_8;
      when b30s0 =>
        r_val <= t_11;
      when b32s0 =>
        r_val <= t_14;
      when b34s0 =>
        r_val <= t_17;
      when b37s0 =>
        r_val <= t_20;
      when b39s0 =>
        r_val <= t_23;
      when b41s0 =>
        r_val <= t_26;
      when b44s0 =>
        r_val <= t_29;
      when b46s0 =>
        r_val <= t_32;
      when b48s0 =>
        r_val <= t_35;
      when b52s0 =>
        r_val <= t_38;
      when b54s0 =>
        r_val <= t_41;
      when b56s0 =>
        r_val <= t_44;
      when b59s0 =>
        r_val <= t_47;
      when b61s0 =>
        r_val <= t_50;
      when b63s0 =>
        r_val <= t_53;
      when b66s0 =>
        r_val <= t_56;
      when b68s0 =>
        r_val <= t_59;
      when b70s0 =>
        r_val <= t_62;
      when b73s0 =>
        r_val <= t_65;
      when b75s0 =>
        r_val <= t_68;
      when b77s0 =>
        r_val <= t_71;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b23s0 =>
        r_suif_tmp13 <= ni6537_suif_tmp13;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b23s0 =>
        r_suif_tmp14 <= ni6539_suif_tmp14;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b23s0 =>
        r_suif_tmp15 <= ni6541_suif_tmp15;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b24s0 =>
        r_suif_tmp16 <= ni6544_suif_tmp16;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b25s0 =>
        r_suif_tmp17 <= ni6546_suif_tmp17;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b25s0 =>
        r_suif_tmp18 <= ni6548_suif_tmp18;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b25s0 =>
        r_suif_tmp19 <= ni6550_suif_tmp19;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b26s0 =>
        r_suif_tmp20 <= ni6553_suif_tmp20;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b27s0 =>
        r_suif_tmp21 <= ni6555_suif_tmp21;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b27s0 =>
        r_suif_tmp22 <= ni6557_suif_tmp22;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b27s0 =>
        r_suif_tmp23 <= ni6559_suif_tmp23;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b28s0 =>
        r_suif_tmp24 <= ni6562_suif_tmp24;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b29s0 =>
        r_suif_tmp25 <= ni6564_suif_tmp25;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b30s0 =>
        r_suif_tmp26 <= ni6566_suif_tmp26;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b30s0 =>
        r_suif_tmp27 <= ni6568_suif_tmp27;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b30s0 =>
        r_suif_tmp28 <= ni6570_suif_tmp28;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b31s0 =>
        r_suif_tmp29 <= ni6573_suif_tmp29;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b32s0 =>
        r_suif_tmp30 <= ni6575_suif_tmp30;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b32s0 =>
        r_suif_tmp31 <= ni6577_suif_tmp31;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b32s0 =>
        r_suif_tmp32 <= ni6579_suif_tmp32;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b33s0 =>
        r_suif_tmp33 <= ni6582_suif_tmp33;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b34s0 =>
        r_suif_tmp34 <= ni6584_suif_tmp34;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b34s0 =>
        r_suif_tmp35 <= ni6586_suif_tmp35;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b34s0 =>
        r_suif_tmp36 <= ni6588_suif_tmp36;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b35s0 =>
        r_suif_tmp37 <= ni6591_suif_tmp37;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b36s0 =>
        r_suif_tmp38 <= ni6593_suif_tmp38;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b37s0 =>
        r_suif_tmp39 <= ni6595_suif_tmp39;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b37s0 =>
        r_suif_tmp40 <= ni6597_suif_tmp40;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b37s0 =>
        r_suif_tmp41 <= ni6599_suif_tmp41;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b38s0 =>
        r_suif_tmp42 <= ni6602_suif_tmp42;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b39s0 =>
        r_suif_tmp43 <= ni6604_suif_tmp43;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b39s0 =>
        r_suif_tmp44 <= ni6606_suif_tmp44;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b39s0 =>
        r_suif_tmp45 <= ni6608_suif_tmp45;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b40s0 =>
        r_suif_tmp46 <= ni6611_suif_tmp46;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b41s0 =>
        r_suif_tmp47 <= ni6613_suif_tmp47;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b41s0 =>
        r_suif_tmp48 <= ni6615_suif_tmp48;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b41s0 =>
        r_suif_tmp49 <= ni6617_suif_tmp49;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b42s0 =>
        r_suif_tmp50 <= ni6620_suif_tmp50;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b43s0 =>
        r_suif_tmp51 <= ni6622_suif_tmp51;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b44s0 =>
        r_suif_tmp52 <= ni6624_suif_tmp52;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b44s0 =>
        r_suif_tmp53 <= ni6626_suif_tmp53;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b44s0 =>
        r_suif_tmp54 <= ni6628_suif_tmp54;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b45s0 =>
        r_suif_tmp55 <= ni6631_suif_tmp55;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b46s0 =>
        r_suif_tmp56 <= ni6633_suif_tmp56;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b46s0 =>
        r_suif_tmp57 <= ni6635_suif_tmp57;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b46s0 =>
        r_suif_tmp58 <= ni6637_suif_tmp58;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b47s0 =>
        r_suif_tmp59 <= ni6640_suif_tmp59;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b48s0 =>
        r_suif_tmp60 <= ni6642_suif_tmp60;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b48s0 =>
        r_suif_tmp61 <= ni6644_suif_tmp61;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b48s0 =>
        r_suif_tmp62 <= ni6646_suif_tmp62;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b49s0 =>
        r_suif_tmp63 <= ni6649_suif_tmp63;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b50s0 =>
        r_suif_tmp64 <= ni6650_suif_tmp64;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b51s0 =>
        r_suif_tmp65 <= ni6652_suif_tmp65;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b52s0 =>
        r_suif_tmp66 <= ni6654_suif_tmp66;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b52s0 =>
        r_suif_tmp67 <= ni6656_suif_tmp67;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b52s0 =>
        r_suif_tmp68 <= ni6658_suif_tmp68;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b53s0 =>
        r_suif_tmp69 <= ni6661_suif_tmp69;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b54s0 =>
        r_suif_tmp70 <= ni6663_suif_tmp70;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b54s0 =>
        r_suif_tmp71 <= ni6665_suif_tmp71;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b54s0 =>
        r_suif_tmp72 <= ni6667_suif_tmp72;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b55s0 =>
        r_suif_tmp73 <= ni6670_suif_tmp73;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b56s0 =>
        r_suif_tmp74 <= ni6672_suif_tmp74;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b56s0 =>
        r_suif_tmp75 <= ni6674_suif_tmp75;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b56s0 =>
        r_suif_tmp76 <= ni6676_suif_tmp76;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b57s0 =>
        r_suif_tmp77 <= ni6679_suif_tmp77;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b58s0 =>
        r_suif_tmp78 <= ni6681_suif_tmp78;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b59s0 =>
        r_suif_tmp79 <= ni6683_suif_tmp79;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b59s0 =>
        r_suif_tmp80 <= ni6685_suif_tmp80;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b59s0 =>
        r_suif_tmp81 <= ni6687_suif_tmp81;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b60s0 =>
        r_suif_tmp82 <= ni6690_suif_tmp82;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b61s0 =>
        r_suif_tmp83 <= ni6692_suif_tmp83;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b61s0 =>
        r_suif_tmp84 <= ni6694_suif_tmp84;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b61s0 =>
        r_suif_tmp85 <= ni6696_suif_tmp85;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b62s0 =>
        r_suif_tmp86 <= ni6699_suif_tmp86;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b63s0 =>
        r_suif_tmp87 <= ni6701_suif_tmp87;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b63s0 =>
        r_suif_tmp88 <= ni6703_suif_tmp88;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b63s0 =>
        r_suif_tmp89 <= ni6705_suif_tmp89;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b64s0 =>
        r_suif_tmp90 <= ni6708_suif_tmp90;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b65s0 =>
        r_suif_tmp91 <= ni6710_suif_tmp91;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b66s0 =>
        r_suif_tmp92 <= ni6712_suif_tmp92;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b66s0 =>
        r_suif_tmp93 <= ni6714_suif_tmp93;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b66s0 =>
        r_suif_tmp94 <= ni6716_suif_tmp94;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b67s0 =>
        r_suif_tmp95 <= ni6719_suif_tmp95;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b68s0 =>
        r_suif_tmp96 <= ni6721_suif_tmp96;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b68s0 =>
        r_suif_tmp97 <= ni6723_suif_tmp97;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b68s0 =>
        r_suif_tmp98 <= ni6725_suif_tmp98;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b69s0 =>
        r_suif_tmp99 <= ni6728_suif_tmp99;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b70s0 =>
        r_suif_tmp100 <= ni6730_suif_tmp100;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b70s0 =>
        r_suif_tmp101 <= ni6732_suif_tmp101;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b70s0 =>
        r_suif_tmp102 <= ni6734_suif_tmp102;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b71s0 =>
        r_suif_tmp103 <= ni6737_suif_tmp103;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b72s0 =>
        r_suif_tmp104 <= ni6739_suif_tmp104;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b73s0 =>
        r_suif_tmp105 <= ni6741_suif_tmp105;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b73s0 =>
        r_suif_tmp106 <= ni6743_suif_tmp106;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b73s0 =>
        r_suif_tmp107 <= ni6745_suif_tmp107;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b74s0 =>
        r_suif_tmp108 <= ni6748_suif_tmp108;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b75s0 =>
        r_suif_tmp109 <= ni6750_suif_tmp109;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b75s0 =>
        r_suif_tmp110 <= ni6752_suif_tmp110;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b75s0 =>
        r_suif_tmp111 <= ni6754_suif_tmp111;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b76s0 =>
        r_suif_tmp112 <= ni6757_suif_tmp112;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b77s0 =>
        r_suif_tmp113 <= ni6759_suif_tmp113;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b77s0 =>
        r_suif_tmp114 <= ni6761_suif_tmp114;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b77s0 =>
        r_suif_tmp115 <= ni6763_suif_tmp115;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b79s0 =>
        r_suif_tmp7 <= ni6768_suif_tmp7;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b80s0 =>
        r_suif_tmp6 <= ni6770_suif_tmp6;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b82s0 =>
        r_avail_self2_bak <= ni6775_avail_self2_bak;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b82s0 =>
        r_score_self2_bak <= ni6776_score_self2_bak;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b82s0 =>
        r_yoff <= ni6781_yoff;
      when b83s15 =>
        r_yoff <= ni6837_yoff;
      when b87s0 =>
        r_yoff <= ni6857_yoff;
      when b88s15 =>
        r_yoff <= ni6913_yoff;
      when b92s0 =>
        r_yoff <= ni6933_yoff;
      when b93s15 =>
        r_yoff <= ni6989_yoff;
      when b97s0 =>
        r_yoff <= ni7007_yoff;
      when b98s15 =>
        r_yoff <= ni7052_yoff;
      when b99s0 =>
        r_yoff <= ni7061_yoff;
      when b100s15 =>
        r_yoff <= ni7106_yoff;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b82s0 =>
        r_xoff <= ni6782_xoff;
      when b83s15 =>
        r_xoff <= ni6839_xoff;
      when b87s0 =>
        r_xoff <= ni6858_xoff;
      when b88s15 =>
        r_xoff <= ni6915_xoff;
      when b92s0 =>
        r_xoff <= ni6934_xoff;
      when b93s15 =>
        r_xoff <= ni6991_xoff;
      when b97s0 =>
        r_xoff <= ni7008_xoff;
      when b98s15 =>
        r_xoff <= ni7054_xoff;
      when b99s0 =>
        r_xoff <= ni7062_xoff;
      when b100s15 =>
        r_xoff <= ni7108_xoff;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b82s0 =>
        r_count_bak_s2 <= ni6783_count_bak_s2;
      when b83s1 =>
        r_count_bak_s2 <= ni6785_count_bak_s2;
      when b83s3 =>
        r_count_bak_s2 <= ni6797_count_bak_s2;
      when b83s4 =>
        r_count_bak_s2 <= ni6798_count_bak_s2;
      when b83s6 =>
        r_count_bak_s2 <= ni6809_count_bak_s2;
      when b83s7 =>
        r_count_bak_s2 <= ni6810_count_bak_s2;
      when b83s9 =>
        r_count_bak_s2 <= ni6821_count_bak_s2;
      when b83s10 =>
        r_count_bak_s2 <= ni6822_count_bak_s2;
      when b83s12 =>
        r_count_bak_s2 <= ni6833_count_bak_s2;
      when b83s13 =>
        r_count_bak_s2 <= ni6834_count_bak_s2;
      when b84s0 =>
        r_count_bak_s2 <= ni6842_count_bak_s2;
      when b85s0 =>
        if (s_b85_vwrite(2) = '1') then
          r_count_bak_s2 <= s_b85_1.f_count_bak_s2;
        end if;
        if ((s_b85_vflush(2) and s_b85_vlast(0)) = '1') then
          r_count_bak_s2 <= s_b85_1.f_count_bak_s2;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b82s1 =>
        r_size <= ni6780_size;
      when b83s0 =>
        r_size <= ni6835_size;
      when b87s1 =>
        r_size <= ni6856_size;
      when b88s0 =>
        r_size <= ni6911_size;
      when b92s1 =>
        r_size <= ni6932_size;
      when b93s0 =>
        r_size <= ni6987_size;
      when b97s1 =>
        r_size <= ni7006_size;
      when b98s0 =>
        r_size <= ni7050_size;
      when b99s1 =>
        r_size <= ni7060_size;
      when b100s0 =>
        r_size <= ni7104_size;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b83s0 =>
        r_y1 <= ni6789_y1;
      when b83s4 =>
        r_y1 <= ni6801_y1;
      when b83s7 =>
        r_y1 <= ni6813_y1;
      when b83s10 =>
        r_y1 <= ni6825_y1;
      when b88s0 =>
        r_y1 <= ni6865_y1;
      when b88s4 =>
        r_y1 <= ni6877_y1;
      when b88s7 =>
        r_y1 <= ni6889_y1;
      when b88s10 =>
        r_y1 <= ni6901_y1;
      when b93s0 =>
        r_y1 <= ni6941_y1;
      when b93s4 =>
        r_y1 <= ni6953_y1;
      when b93s7 =>
        r_y1 <= ni6965_y1;
      when b93s10 =>
        r_y1 <= ni6977_y1;
      when b98s0 =>
        r_y1 <= ni7042_y1;
      when b100s0 =>
        r_y1 <= ni7096_y1;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b83s0 =>
        r_x1 <= ni6790_x1;
      when b83s4 =>
        r_x1 <= ni6802_x1;
      when b83s7 =>
        r_x1 <= ni6814_x1;
      when b83s10 =>
        r_x1 <= ni6826_x1;
      when b88s0 =>
        r_x1 <= ni6866_x1;
      when b88s4 =>
        r_x1 <= ni6878_x1;
      when b88s7 =>
        r_x1 <= ni6890_x1;
      when b88s10 =>
        r_x1 <= ni6902_x1;
      when b93s0 =>
        r_x1 <= ni6942_x1;
      when b93s4 =>
        r_x1 <= ni6954_x1;
      when b93s7 =>
        r_x1 <= ni6966_x1;
      when b93s10 =>
        r_x1 <= ni6978_x1;
      when b98s0 =>
        r_x1 <= ni7043_x1;
      when b100s0 =>
        r_x1 <= ni7097_x1;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b83s0 =>
        r_suif_tmp117 <= ni6836_suif_tmp117;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b83s2 =>
        r_r_e_g_2 <= ni6795_r_e_g_2;
      when b83s5 =>
        r_r_e_g_2 <= ni6807_r_e_g_2;
      when b83s8 =>
        r_r_e_g_2 <= ni6819_r_e_g_2;
      when b83s11 =>
        r_r_e_g_2 <= ni6831_r_e_g_2;
      when b88s2 =>
        r_r_e_g_2 <= ni6871_r_e_g_2;
      when b88s5 =>
        r_r_e_g_2 <= ni6883_r_e_g_2;
      when b88s8 =>
        r_r_e_g_2 <= ni6895_r_e_g_2;
      when b88s11 =>
        r_r_e_g_2 <= ni6907_r_e_g_2;
      when b93s2 =>
        r_r_e_g_2 <= ni6947_r_e_g_2;
      when b93s5 =>
        r_r_e_g_2 <= ni6959_r_e_g_2;
      when b93s8 =>
        r_r_e_g_2 <= ni6971_r_e_g_2;
      when b93s11 =>
        r_r_e_g_2 <= ni6983_r_e_g_2;
      when b98s0 =>
        r_r_e_g_2 <= ni6665890_r_e_g_2;
      when b98s2 =>
        r_r_e_g_2 <= ni7018_r_e_g_2;
      when b98s5 =>
        r_r_e_g_2 <= ni7028_r_e_g_2;
      when b98s8 =>
        r_r_e_g_2 <= ni7038_r_e_g_2;
      when b98s11 =>
        r_r_e_g_2 <= ni7048_r_e_g_2;
      when b100s0 =>
        r_r_e_g_2 <= ni6665972_r_e_g_2;
      when b100s2 =>
        r_r_e_g_2 <= ni7072_r_e_g_2;
      when b100s5 =>
        r_r_e_g_2 <= ni7082_r_e_g_2;
      when b100s8 =>
        r_r_e_g_2 <= ni7092_r_e_g_2;
      when b100s11 =>
        r_r_e_g_2 <= ni7102_r_e_g_2;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b83s3 =>
        r_board_t <= ni6791_board_t;
      when b83s6 =>
        r_board_t <= ni6803_board_t;
      when b83s9 =>
        r_board_t <= ni6815_board_t;
      when b83s12 =>
        r_board_t <= ni6827_board_t;
      when b88s3 =>
        r_board_t <= ni6867_board_t;
      when b88s6 =>
        r_board_t <= ni6879_board_t;
      when b88s9 =>
        r_board_t <= ni6891_board_t;
      when b88s12 =>
        r_board_t <= ni6903_board_t;
      when b93s3 =>
        r_board_t <= ni6943_board_t;
      when b93s6 =>
        r_board_t <= ni6955_board_t;
      when b93s9 =>
        r_board_t <= ni6967_board_t;
      when b93s12 =>
        r_board_t <= ni6979_board_t;
      when b98s3 =>
        r_board_t <= ni7014_board_t;
      when b98s6 =>
        r_board_t <= ni7024_board_t;
      when b98s9 =>
        r_board_t <= ni7034_board_t;
      when b98s12 =>
        r_board_t <= ni7044_board_t;
      when b100s3 =>
        r_board_t <= ni7068_board_t;
      when b100s6 =>
        r_board_t <= ni7078_board_t;
      when b100s9 =>
        r_board_t <= ni7088_board_t;
      when b100s12 =>
        r_board_t <= ni7098_board_t;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b83s3 =>
        r_board_t1 <= ni6793_board_t1;
      when b83s6 =>
        r_board_t1 <= ni6805_board_t1;
      when b83s9 =>
        r_board_t1 <= ni6817_board_t1;
      when b83s12 =>
        r_board_t1 <= ni6829_board_t1;
      when b88s3 =>
        r_board_t1 <= ni6869_board_t1;
      when b88s6 =>
        r_board_t1 <= ni6881_board_t1;
      when b88s9 =>
        r_board_t1 <= ni6893_board_t1;
      when b88s12 =>
        r_board_t1 <= ni6905_board_t1;
      when b93s3 =>
        r_board_t1 <= ni6945_board_t1;
      when b93s6 =>
        r_board_t1 <= ni6957_board_t1;
      when b93s9 =>
        r_board_t1 <= ni6969_board_t1;
      when b93s12 =>
        r_board_t1 <= ni6981_board_t1;
      when b98s3 =>
        r_board_t1 <= ni7016_board_t1;
      when b98s6 =>
        r_board_t1 <= ni7026_board_t1;
      when b98s9 =>
        r_board_t1 <= ni7036_board_t1;
      when b98s12 =>
        r_board_t1 <= ni7046_board_t1;
      when b100s3 =>
        r_board_t1 <= ni7070_board_t1;
      when b100s6 =>
        r_board_t1 <= ni7080_board_t1;
      when b100s9 =>
        r_board_t1 <= ni7090_board_t1;
      when b100s12 =>
        r_board_t1 <= ni7100_board_t1;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b84s0 =>
        r_count_bak_s20 <= ni6666076_count_bak_s20;
      when b85s0 =>
        if (s_b85_vwrite(0) = '1') then
          r_count_bak_s20 <= ni6847_count_bak_s20;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b87s0 =>
        r_avail_opp_bak <= ni6851_avail_opp_bak;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b87s0 =>
        r_score_opp_bak <= ni6852_score_opp_bak;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b87s0 =>
        r_count_bak_op <= ni6859_count_bak_op;
      when b88s1 =>
        r_count_bak_op <= ni6861_count_bak_op;
      when b88s3 =>
        r_count_bak_op <= ni6873_count_bak_op;
      when b88s4 =>
        r_count_bak_op <= ni6874_count_bak_op;
      when b88s6 =>
        r_count_bak_op <= ni6885_count_bak_op;
      when b88s7 =>
        r_count_bak_op <= ni6886_count_bak_op;
      when b88s9 =>
        r_count_bak_op <= ni6897_count_bak_op;
      when b88s10 =>
        r_count_bak_op <= ni6898_count_bak_op;
      when b88s12 =>
        r_count_bak_op <= ni6909_count_bak_op;
      when b88s13 =>
        r_count_bak_op <= ni6910_count_bak_op;
      when b89s0 =>
        r_count_bak_op <= ni6918_count_bak_op;
      when b90s0 =>
        if (s_b90_vwrite(2) = '1') then
          r_count_bak_op <= s_b90_1.f_count_bak_op;
        end if;
        if ((s_b90_vflush(2) and s_b90_vlast(0)) = '1') then
          r_count_bak_op <= s_b90_1.f_count_bak_op;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b88s0 =>
        r_suif_tmp121 <= ni6912_suif_tmp121;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b89s0 =>
        r_count_bak_op0 <= ni6666079_count_bak_op0;
      when b90s0 =>
        if (s_b90_vwrite(0) = '1') then
          r_count_bak_op0 <= ni6922_count_bak_op0;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b92s0 =>
        r_avail_self_bak <= ni6927_avail_self_bak;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b92s0 =>
        r_score_self_bak <= ni6928_score_self_bak;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b92s0 =>
        r_count_bak_s <= ni6935_count_bak_s;
      when b93s1 =>
        r_count_bak_s <= ni6937_count_bak_s;
      when b93s3 =>
        r_count_bak_s <= ni6949_count_bak_s;
      when b93s4 =>
        r_count_bak_s <= ni6950_count_bak_s;
      when b93s6 =>
        r_count_bak_s <= ni6961_count_bak_s;
      when b93s7 =>
        r_count_bak_s <= ni6962_count_bak_s;
      when b93s9 =>
        r_count_bak_s <= ni6973_count_bak_s;
      when b93s10 =>
        r_count_bak_s <= ni6974_count_bak_s;
      when b93s12 =>
        r_count_bak_s <= ni6985_count_bak_s;
      when b93s13 =>
        r_count_bak_s <= ni6986_count_bak_s;
      when b94s0 =>
        r_count_bak_s <= ni6994_count_bak_s;
      when b95s0 =>
        if (s_b95_vwrite(2) = '1') then
          r_count_bak_s <= s_b95_1.f_count_bak_s;
        end if;
        if ((s_b95_vflush(2) and s_b95_vlast(0)) = '1') then
          r_count_bak_s <= s_b95_1.f_count_bak_s;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b93s0 =>
        r_suif_tmp125 <= ni6988_suif_tmp125;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b94s0 =>
        r_count_bak_s0 <= ni6666082_count_bak_s0;
      when b95s0 =>
        if (s_b95_vwrite(0) = '1') then
          r_count_bak_s0 <= ni6999_count_bak_s0;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b98s0 =>
        r_suif_tmp129 <= ni7051_suif_tmp129;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b98s0 =>
        r_r_e_g_4 <= ni6665891_r_e_g_4;
      when b100s0 =>
        r_r_e_g_4 <= ni6665973_r_e_g_4;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b98s0 =>
        r_r_e_g_5 <= ni6665894_r_e_g_5;
      when b100s0 =>
        r_r_e_g_5 <= ni6665976_r_e_g_5;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b98s0 =>
        r_r_e_g_6 <= ni6665895_r_e_g_6;
      when b100s0 =>
        r_r_e_g_6 <= ni6665977_r_e_g_6;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b98s0 =>
        r_r_e_g_7 <= ni6665898_r_e_g_7;
      when b100s0 =>
        r_r_e_g_7 <= ni6665980_r_e_g_7;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b98s0 =>
        r_r_e_g_8 <= ni6665899_r_e_g_8;
      when b100s0 =>
        r_r_e_g_8 <= ni6665981_r_e_g_8;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b98s0 =>
        r_r_e_g_9 <= ni6665902_r_e_g_9;
      when b100s0 =>
        r_r_e_g_9 <= ni6665984_r_e_g_9;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b98s0 =>
        r_r_e_g_10 <= ni6665903_r_e_g_10;
      when b100s0 =>
        r_r_e_g_10 <= ni6665985_r_e_g_10;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b98s0 =>
        r_r_e_g_11 <= ni6665906_r_e_g_11;
      when b100s0 =>
        r_r_e_g_11 <= ni6665988_r_e_g_11;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b98s0 =>
        r_r_e_g_12 <= ni6665907_r_e_g_12;
      when b100s0 =>
        r_r_e_g_12 <= ni6665989_r_e_g_12;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b98s0 =>
        r_r_e_g_13 <= ni6665910_r_e_g_13;
      when b100s0 =>
        r_r_e_g_13 <= ni6665992_r_e_g_13;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b98s0 =>
        r_r_e_g_14 <= ni6665911_r_e_g_14;
      when b100s0 =>
        r_r_e_g_14 <= ni6665993_r_e_g_14;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b98s0 =>
        r_r_e_g_15 <= ni6665914_r_e_g_15;
      when b100s0 =>
        r_r_e_g_15 <= ni6665996_r_e_g_15;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b98s0 =>
        r_r_e_g_16 <= ni6665915_r_e_g_16;
      when b100s0 =>
        r_r_e_g_16 <= ni6665997_r_e_g_16;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b98s0 =>
        r_r_e_g_17 <= ni6665918_r_e_g_17;
      when b100s0 =>
        r_r_e_g_17 <= ni6666000_r_e_g_17;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b98s0 =>
        r_r_e_g_18 <= ni6665919_r_e_g_18;
      when b100s0 =>
        r_r_e_g_18 <= ni6666001_r_e_g_18;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b98s0 =>
        r_r_e_g_19 <= ni6665922_r_e_g_19;
      when b100s0 =>
        r_r_e_g_19 <= ni6666004_r_e_g_19;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b98s0 =>
        r_r_e_g_20 <= ni6665923_r_e_g_20;
      when b100s0 =>
        r_r_e_g_20 <= ni6666005_r_e_g_20;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b98s0 =>
        r_r_e_g_21 <= ni6665926_r_e_g_21;
      when b100s0 =>
        r_r_e_g_21 <= ni6666008_r_e_g_21;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b98s0 =>
        r_r_e_g_22 <= ni6665927_r_e_g_22;
      when b100s0 =>
        r_r_e_g_22 <= ni6666009_r_e_g_22;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b98s0 =>
        r_r_e_g_23 <= ni6665930_r_e_g_23;
      when b100s0 =>
        r_r_e_g_23 <= ni6666012_r_e_g_23;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b98s0 =>
        r_r_e_g_24 <= ni6665931_r_e_g_24;
      when b100s0 =>
        r_r_e_g_24 <= ni6666013_r_e_g_24;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b98s0 =>
        r_r_e_g_25 <= ni6665934_r_e_g_25;
      when b100s0 =>
        r_r_e_g_25 <= ni6666016_r_e_g_25;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b100s0 =>
        r_suif_tmp131 <= ni7105_suif_tmp131;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b103s0 =>
        r_suif_tmp3_0 <= ni7117_suif_tmp3_0;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b104s0 =>
        r_suif_tmp4_0 <= ni7118_suif_tmp4_0;
      when b111s0 =>
        r_suif_tmp4_0 <= ni7125_suif_tmp4_0;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b105s0 =>
        r_suif_tmp1_0 <= ni7119_suif_tmp1_0;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b106s0 =>
        r_suif_tmp2_0 <= ni7120_suif_tmp2_0;
      when b110s0 =>
        r_suif_tmp2_0 <= ni7124_suif_tmp2_0;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b107s0 =>
        r_suif_tmp_1 <= ni7121_suif_tmp_1;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b108s0 =>
        r_suif_tmp0_0 <= ni7122_suif_tmp0_0;
      when b109s0 =>
        r_suif_tmp0_0 <= ni7123_suif_tmp0_0;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b114s0 =>
        r_suif_tmp134 <= ni7129_suif_tmp134;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b115s0 =>
        r_suif_tmp133 <= ni7131_suif_tmp133;
      when others =>
      end case;
    end if;
  end process;

-- "stream0_move_input" interface signals
  process (clk)
  begin
    if (clk'event and clk='1') then
      if ((p_stream0_move_input_en and p_stream0_move_input_rdy) = '1') then
        r_stream0_move_input <= p_stream0_move_input_data;
      end if;
    end if;
  end process;

  p_stream0_move_input_en <= 
    s_b16s0_en and not p_stream0_move_input_eos when thisState = b16s0 else
    '0';

-- "stream0_move_output" interface signals
  p_stream0_move_output_en <= 
    s_b81s0_en when thisState = b81s0 else
    '0';
  p_stream0_move_output_data <= ni6773_move;
  p_stream0_move_output_eos <= '0';

-- "piece_sizes" memory signals
  ram_0: eval_func_piece_sizes_RAM
    port map (
      rst => reset, 
      clk => clk, 
      we => p_piece_sizes_we, 
      w_addr => p_piece_sizes_waddr, 
      r_addr => p_piece_sizes_raddr, 
      din => p_piece_sizes_din, 
      dout => p_piece_sizes_dout);

  p_piece_sizes_raddr <= 
    r_m_piece(4 downto 0) when thisState = b82s0 else
    r_m_piece(4 downto 0) when thisState = b87s0 else
    r_m_piece(4 downto 0) when thisState = b92s0 else
    r_m_piece(4 downto 0) when thisState = b97s0 else
    r_m_piece(4 downto 0) when thisState = b99s0 else
    (others => 'X');
  p_piece_sizes_re2 <= 
    newState when thisState = b82s1 else
    newState when thisState = b87s1 else
    newState when thisState = b92s1 else
    newState when thisState = b97s1 else
    newState when thisState = b99s1 else
    '0';
  p_piece_sizes_we <= '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (p_piece_sizes_re2 = '1') then
        r_piece_sizes <= p_piece_sizes_dout;
      end if;
    end if;
  end process;

  p_piece_sizes_imm2 <= 
    p_piece_sizes_dout when newState = '1' else
    r_piece_sizes;
-- "piece_y" memory signals
  ram_1: eval_func_piece_y_RAM
    port map (
      rst => reset, 
      clk => clk, 
      we => p_piece_y_we, 
      w_addr => p_piece_y_waddr, 
      r_addr => p_piece_y_raddr, 
      din => p_piece_y_din, 
      dout => p_piece_y_dout);

  p_piece_y_raddr <= 
    ni6838_r_e_g_0 when thisState = b83s14 else
    ni6914_r_e_g_0 when thisState = b88s14 else
    ni6990_r_e_g_0 when thisState = b93s14 else
    ni7053_r_e_g_0 when thisState = b98s14 else
    ni7107_r_e_g_0 when thisState = b100s14 else
    (others => 'X');
  p_piece_y_re2 <= 
    newState when thisState = b83s15 else
    newState when thisState = b88s15 else
    newState when thisState = b93s15 else
    newState when thisState = b98s15 else
    newState when thisState = b100s15 else
    '0';
  p_piece_y_we <= '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (p_piece_y_re2 = '1') then
        r_piece_y <= p_piece_y_dout;
      end if;
    end if;
  end process;

  p_piece_y_imm2 <= 
    p_piece_y_dout when newState = '1' else
    r_piece_y;
-- "piece_x" memory signals
  ram_2: eval_func_piece_x_RAM
    port map (
      rst => reset, 
      clk => clk, 
      we => p_piece_x_we, 
      w_addr => p_piece_x_waddr, 
      r_addr => p_piece_x_raddr, 
      din => p_piece_x_din, 
      dout => p_piece_x_dout);

  p_piece_x_raddr <= 
    ni6840_r_e_g_1 when thisState = b83s14 else
    ni6916_r_e_g_1 when thisState = b88s14 else
    ni6992_r_e_g_1 when thisState = b93s14 else
    ni7055_r_e_g_1 when thisState = b98s14 else
    ni7109_r_e_g_1 when thisState = b100s14 else
    (others => 'X');
  p_piece_x_re2 <= 
    newState when thisState = b83s15 else
    newState when thisState = b88s15 else
    newState when thisState = b93s15 else
    newState when thisState = b98s15 else
    newState when thisState = b100s15 else
    '0';
  p_piece_x_we <= '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (p_piece_x_re2 = '1') then
        r_piece_x <= p_piece_x_dout;
      end if;
    end if;
  end process;

  p_piece_x_imm2 <= 
    p_piece_x_dout when newState = '1' else
    r_piece_x;
-- "board" memory signals
  ram_3: eval_func_board_RAM
    port map (
      rst => reset, 
      clk => clk, 
      we => p_board_we, 
      addr => p_board_addr, 
      addr2 => p_board_addr2, 
      din => p_board_din, 
      we2 => '0', 
      din2 => X"00", 
      dout => p_board_dout, 
      dout2 => p_board_dout2);

  p_board_addr <= 
    r_r_e_g_0 when thisState = b11s1 else
    r_r_e_g_0 when thisState = b12s1 else
    ni6377_r_e_g_1 when thisState = b20s0 else
    ni6385_r_e_g_1 when thisState = b20s1 else
    ni6393_r_e_g_1 when thisState = b20s2 else
    ni6401_r_e_g_1 when thisState = b20s3 else
    ni6409_r_e_g_1 when thisState = b20s4 else
    ni6417_r_e_g_1 when thisState = b20s5 else
    ni6425_r_e_g_1 when thisState = b20s6 else
    ni6433_r_e_g_1 when thisState = b20s7 else
    ni6441_r_e_g_1 when thisState = b20s8 else
    ni6449_r_e_g_1 when thisState = b20s9 else
    ni6457_r_e_g_1 when thisState = b20s10 else
    ni6465_r_e_g_1 when thisState = b20s11 else
    ni6473_r_e_g_1 when thisState = b20s12 else
    ni6481_r_e_g_1 when thisState = b20s13 else
    ni6489_r_e_g_1 when thisState = b20s14 else
    ni6497_r_e_g_1 when thisState = b20s15 else
    ni6505_r_e_g_1 when thisState = b20s16 else
    ni6513_r_e_g_1 when thisState = b20s17 else
    ni6521_r_e_g_1 when thisState = b20s18 else
    ni6529_r_e_g_1 when thisState = b20s19 else
    r_r_e_g_1 when thisState = b83s1 else
    ni6794_r_e_g_1 when thisState = b83s2 else
    r_r_e_g_2 when thisState = b83s3 else
    r_r_e_g_0 when thisState = b83s4 else
    ni6806_r_e_g_1 when thisState = b83s5 else
    r_r_e_g_2 when thisState = b83s6 else
    r_r_e_g_0 when thisState = b83s7 else
    ni6818_r_e_g_1 when thisState = b83s8 else
    r_r_e_g_2 when thisState = b83s9 else
    r_r_e_g_0 when thisState = b83s10 else
    ni6830_r_e_g_1 when thisState = b83s11 else
    r_r_e_g_2 when thisState = b83s12 else
    r_r_e_g_0 when thisState = b83s13 else
    s_b85_1.f_r_e_g_0 when thisState = b85s0 and s_b85_stage(2) = '1' else
    r_r_e_g_1 when thisState = b88s1 else
    ni6870_r_e_g_1 when thisState = b88s2 else
    r_r_e_g_2 when thisState = b88s3 else
    r_r_e_g_0 when thisState = b88s4 else
    ni6882_r_e_g_1 when thisState = b88s5 else
    r_r_e_g_2 when thisState = b88s6 else
    r_r_e_g_0 when thisState = b88s7 else
    ni6894_r_e_g_1 when thisState = b88s8 else
    r_r_e_g_2 when thisState = b88s9 else
    r_r_e_g_0 when thisState = b88s10 else
    ni6906_r_e_g_1 when thisState = b88s11 else
    r_r_e_g_2 when thisState = b88s12 else
    r_r_e_g_0 when thisState = b88s13 else
    s_b90_1.f_r_e_g_0 when thisState = b90s0 and s_b90_stage(2) = '1' else
    r_r_e_g_1 when thisState = b93s1 else
    ni6946_r_e_g_1 when thisState = b93s2 else
    r_r_e_g_2 when thisState = b93s3 else
    r_r_e_g_0 when thisState = b93s4 else
    ni6958_r_e_g_1 when thisState = b93s5 else
    r_r_e_g_2 when thisState = b93s6 else
    r_r_e_g_0 when thisState = b93s7 else
    ni6970_r_e_g_1 when thisState = b93s8 else
    r_r_e_g_2 when thisState = b93s9 else
    r_r_e_g_0 when thisState = b93s10 else
    ni6982_r_e_g_1 when thisState = b93s11 else
    r_r_e_g_2 when thisState = b93s12 else
    r_r_e_g_0 when thisState = b93s13 else
    s_b95_1.f_r_e_g_0 when thisState = b95s0 and s_b95_stage(2) = '1' else
    r_r_e_g_0 when thisState = b98s1 else
    ni7017_r_e_g_1 when thisState = b98s2 else
    r_r_e_g_2 when thisState = b98s3 else
    r_r_e_g_0 when thisState = b98s4 else
    ni7027_r_e_g_1 when thisState = b98s5 else
    r_r_e_g_2 when thisState = b98s6 else
    r_r_e_g_0 when thisState = b98s7 else
    ni7037_r_e_g_1 when thisState = b98s8 else
    r_r_e_g_2 when thisState = b98s9 else
    r_r_e_g_0 when thisState = b98s10 else
    ni7047_r_e_g_1 when thisState = b98s11 else
    r_r_e_g_2 when thisState = b98s12 else
    r_r_e_g_0 when thisState = b98s13 else
    r_r_e_g_0 when thisState = b100s1 else
    ni7071_r_e_g_1 when thisState = b100s2 else
    r_r_e_g_2 when thisState = b100s3 else
    r_r_e_g_0 when thisState = b100s4 else
    ni7081_r_e_g_1 when thisState = b100s5 else
    r_r_e_g_2 when thisState = b100s6 else
    r_r_e_g_0 when thisState = b100s7 else
    ni7091_r_e_g_1 when thisState = b100s8 else
    r_r_e_g_2 when thisState = b100s9 else
    r_r_e_g_0 when thisState = b100s10 else
    ni7101_r_e_g_1 when thisState = b100s11 else
    r_r_e_g_2 when thisState = b100s12 else
    r_r_e_g_0 when thisState = b100s13 else
    r_r_e_g_0 when thisState = b112s1 else
    r_r_e_g_0 when thisState = b113s1 else
    (others => 'X');
  p_board_re <= 
    newState when thisState = b20s1 else
    newState when thisState = b20s2 else
    newState when thisState = b20s3 else
    newState when thisState = b20s4 else
    newState when thisState = b20s5 else
    newState when thisState = b20s6 else
    newState when thisState = b20s7 else
    newState when thisState = b20s8 else
    newState when thisState = b20s9 else
    newState when thisState = b20s10 else
    newState when thisState = b20s11 else
    newState when thisState = b20s12 else
    newState when thisState = b20s13 else
    newState when thisState = b20s14 else
    newState when thisState = b20s15 else
    newState when thisState = b20s16 else
    newState when thisState = b20s17 else
    newState when thisState = b20s18 else
    newState when thisState = b20s19 else
    newState when thisState = b20s20 else
    newState when thisState = b83s3 else
    newState when thisState = b83s6 else
    newState when thisState = b83s9 else
    newState when thisState = b83s12 else
    newState when thisState = b88s3 else
    newState when thisState = b88s6 else
    newState when thisState = b88s9 else
    newState when thisState = b88s12 else
    newState when thisState = b93s3 else
    newState when thisState = b93s6 else
    newState when thisState = b93s9 else
    newState when thisState = b93s12 else
    newState when thisState = b98s3 else
    newState when thisState = b98s6 else
    newState when thisState = b98s9 else
    newState when thisState = b98s12 else
    newState when thisState = b100s3 else
    newState when thisState = b100s6 else
    newState when thisState = b100s9 else
    newState when thisState = b100s12 else
    '0';
  p_board_re2 <= 
    newState when thisState = b19s1 else
    newState when thisState = b20s1 else
    newState when thisState = b20s2 else
    newState when thisState = b20s3 else
    newState when thisState = b20s4 else
    newState when thisState = b20s5 else
    newState when thisState = b20s6 else
    newState when thisState = b20s7 else
    newState when thisState = b20s8 else
    newState when thisState = b20s9 else
    newState when thisState = b20s10 else
    newState when thisState = b20s11 else
    newState when thisState = b20s12 else
    newState when thisState = b20s13 else
    newState when thisState = b20s14 else
    newState when thisState = b20s15 else
    newState when thisState = b20s16 else
    newState when thisState = b20s17 else
    newState when thisState = b20s18 else
    newState when thisState = b20s19 else
    newState when thisState = b20s20 else
    newState when thisState = b83s1 else
    newState when thisState = b83s3 else
    newState when thisState = b83s6 else
    newState when thisState = b83s9 else
    newState when thisState = b83s12 else
    newState when thisState = b88s1 else
    newState when thisState = b88s3 else
    newState when thisState = b88s6 else
    newState when thisState = b88s9 else
    newState when thisState = b88s12 else
    newState when thisState = b93s1 else
    newState when thisState = b93s3 else
    newState when thisState = b93s6 else
    newState when thisState = b93s9 else
    newState when thisState = b93s12 else
    newState when thisState = b98s3 else
    newState when thisState = b98s6 else
    newState when thisState = b98s9 else
    newState when thisState = b98s12 else
    newState when thisState = b100s3 else
    newState when thisState = b100s6 else
    newState when thisState = b100s9 else
    newState when thisState = b100s12 else
    '0';
  p_board_addr2 <= 
    ni6366_r_e_g_0 when thisState = b19s0 else
    ni6373_r_e_g_0 when thisState = b20s0 else
    ni6381_r_e_g_0 when thisState = b20s1 else
    ni6389_r_e_g_0 when thisState = b20s2 else
    ni6397_r_e_g_0 when thisState = b20s3 else
    ni6405_r_e_g_0 when thisState = b20s4 else
    ni6413_r_e_g_0 when thisState = b20s5 else
    ni6421_r_e_g_0 when thisState = b20s6 else
    ni6429_r_e_g_0 when thisState = b20s7 else
    ni6437_r_e_g_0 when thisState = b20s8 else
    ni6445_r_e_g_0 when thisState = b20s9 else
    ni6453_r_e_g_0 when thisState = b20s10 else
    ni6461_r_e_g_0 when thisState = b20s11 else
    ni6469_r_e_g_0 when thisState = b20s12 else
    ni6477_r_e_g_0 when thisState = b20s13 else
    ni6485_r_e_g_0 when thisState = b20s14 else
    ni6493_r_e_g_0 when thisState = b20s15 else
    ni6501_r_e_g_0 when thisState = b20s16 else
    ni6509_r_e_g_0 when thisState = b20s17 else
    ni6517_r_e_g_0 when thisState = b20s18 else
    ni6525_r_e_g_0 when thisState = b20s19 else
    ni6784_r_e_g_0 when thisState = b83s0 else
    ni6792_r_e_g_0 when thisState = b83s2 else
    ni6804_r_e_g_0 when thisState = b83s5 else
    ni6816_r_e_g_0 when thisState = b83s8 else
    ni6828_r_e_g_0 when thisState = b83s11 else
    ni6860_r_e_g_0 when thisState = b88s0 else
    ni6868_r_e_g_0 when thisState = b88s2 else
    ni6880_r_e_g_0 when thisState = b88s5 else
    ni6892_r_e_g_0 when thisState = b88s8 else
    ni6904_r_e_g_0 when thisState = b88s11 else
    ni6936_r_e_g_0 when thisState = b93s0 else
    ni6944_r_e_g_0 when thisState = b93s2 else
    ni6956_r_e_g_0 when thisState = b93s5 else
    ni6968_r_e_g_0 when thisState = b93s8 else
    ni6980_r_e_g_0 when thisState = b93s11 else
    ni7015_r_e_g_0 when thisState = b98s2 else
    ni7025_r_e_g_0 when thisState = b98s5 else
    ni7035_r_e_g_0 when thisState = b98s8 else
    ni7045_r_e_g_0 when thisState = b98s11 else
    ni7069_r_e_g_0 when thisState = b100s2 else
    ni7079_r_e_g_0 when thisState = b100s5 else
    ni7089_r_e_g_0 when thisState = b100s8 else
    ni7099_r_e_g_0 when thisState = b100s11 else
    (others => 'X');
  p_board_we <= 
    '1' when thisState = b11s1 else
    '1' when thisState = b12s1 else
    '1' when thisState = b83s1 else
    '1' when thisState = b83s3 else
    '1' when thisState = b83s4 else
    '1' when thisState = b83s6 else
    '1' when thisState = b83s7 else
    '1' when thisState = b83s9 else
    '1' when thisState = b83s10 else
    '1' when thisState = b83s12 else
    '1' when thisState = b83s13 else
    '1' when thisState = b85s0 and s_b85_stage(2) = '1' else
    '1' when thisState = b88s1 else
    '1' when thisState = b88s3 else
    '1' when thisState = b88s4 else
    '1' when thisState = b88s6 else
    '1' when thisState = b88s7 else
    '1' when thisState = b88s9 else
    '1' when thisState = b88s10 else
    '1' when thisState = b88s12 else
    '1' when thisState = b88s13 else
    '1' when thisState = b90s0 and s_b90_stage(2) = '1' else
    '1' when thisState = b93s1 else
    '1' when thisState = b93s3 else
    '1' when thisState = b93s4 else
    '1' when thisState = b93s6 else
    '1' when thisState = b93s7 else
    '1' when thisState = b93s9 else
    '1' when thisState = b93s10 else
    '1' when thisState = b93s12 else
    '1' when thisState = b93s13 else
    '1' when thisState = b95s0 and s_b95_stage(2) = '1' else
    '1' when thisState = b98s1 else
    '1' when thisState = b98s3 else
    '1' when thisState = b98s4 else
    '1' when thisState = b98s6 else
    '1' when thisState = b98s7 else
    '1' when thisState = b98s9 else
    '1' when thisState = b98s10 else
    '1' when thisState = b98s12 else
    '1' when thisState = b98s13 else
    '1' when thisState = b100s1 else
    '1' when thisState = b100s3 else
    '1' when thisState = b100s4 else
    '1' when thisState = b100s6 else
    '1' when thisState = b100s7 else
    '1' when thisState = b100s9 else
    '1' when thisState = b100s10 else
    '1' when thisState = b100s12 else
    '1' when thisState = b100s13 else
    '1' when thisState = b112s1 else
    '1' when thisState = b113s1 else
    '0';
  p_board_din <= 
    ni97_board when thisState = b11s1 else
    ni113_board when thisState = b12s1 else
    ni3434_board when thisState = b83s1 else
    ni3482_board when thisState = b83s3 else
    ni3498_board when thisState = b83s4 else
    ni3593_board when thisState = b83s6 else
    ni3609_board when thisState = b83s7 else
    ni3704_board when thisState = b83s9 else
    ni3720_board when thisState = b83s10 else
    ni3815_board when thisState = b83s12 else
    ni3831_board when thisState = b83s13 else
    s_b85_1.f_r_e_g_3 when thisState = b85s0 and s_b85_stage(2) = '1' else
    ni4067_board when thisState = b88s1 else
    ni4115_board when thisState = b88s3 else
    ni4131_board when thisState = b88s4 else
    ni4226_board when thisState = b88s6 else
    ni4242_board when thisState = b88s7 else
    ni4337_board when thisState = b88s9 else
    ni4353_board when thisState = b88s10 else
    ni4448_board when thisState = b88s12 else
    ni4464_board when thisState = b88s13 else
    s_b90_1.f_r_e_g_3 when thisState = b90s0 and s_b90_stage(2) = '1' else
    ni4694_board when thisState = b93s1 else
    ni4742_board when thisState = b93s3 else
    ni4758_board when thisState = b93s4 else
    ni4853_board when thisState = b93s6 else
    ni4869_board when thisState = b93s7 else
    ni4964_board when thisState = b93s9 else
    ni4980_board when thisState = b93s10 else
    ni5075_board when thisState = b93s12 else
    ni5091_board when thisState = b93s13 else
    s_b95_1.f_r_e_g_3 when thisState = b95s0 and s_b95_stage(2) = '1' else
    ni5292_board when thisState = b98s1 else
    ni5340_board when thisState = b98s3 else
    ni5356_board when thisState = b98s4 else
    ni5405_board when thisState = b98s6 else
    ni5421_board when thisState = b98s7 else
    ni5470_board when thisState = b98s9 else
    ni5486_board when thisState = b98s10 else
    ni5535_board when thisState = b98s12 else
    ni5551_board when thisState = b98s13 else
    ni5651_board when thisState = b100s1 else
    ni5699_board when thisState = b100s3 else
    ni5715_board when thisState = b100s4 else
    ni5764_board when thisState = b100s6 else
    ni5780_board when thisState = b100s7 else
    ni5829_board when thisState = b100s9 else
    ni5845_board when thisState = b100s10 else
    ni5894_board when thisState = b100s12 else
    ni5910_board when thisState = b100s13 else
    ni6022_board when thisState = b112s1 else
    ni6038_board when thisState = b113s1 else
    (others => 'X');
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (p_board_re = '1') then
        r_board <= p_board_dout;
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (p_board_re2 = '1') then
        r2_board <= p_board_dout2;
      end if;
    end if;
  end process;

  p_board_imm <= 
    p_board_dout when newState = '1' else
    r_board;
  p_board_imm2 <= 
    p_board_dout2 when newState = '1' else
    r2_board;
-- "x_bak_s" memory signals
  ram_4: eval_func_x_bak_s_RAM
    port map (
      rst => reset, 
      clk => clk, 
      we => p_x_bak_s_we, 
      w_addr => p_x_bak_s_waddr, 
      r_addr => p_x_bak_s_raddr, 
      din => p_x_bak_s_din, 
      dout => p_x_bak_s_dout);

  p_x_bak_s_waddr <= 
    r_count_bak_s(5 downto 0) when thisState = b93s0 else
    r_count_bak_s(5 downto 0) when thisState = b93s2 else
    r_count_bak_s(5 downto 0) when thisState = b93s4 else
    r_count_bak_s(5 downto 0) when thisState = b93s5 else
    r_count_bak_s(5 downto 0) when thisState = b93s7 else
    r_count_bak_s(5 downto 0) when thisState = b93s8 else
    r_count_bak_s(5 downto 0) when thisState = b93s10 else
    r_count_bak_s(5 downto 0) when thisState = b93s11 else
    r_count_bak_s(5 downto 0) when thisState = b93s13 else
    (others => 'X');
  p_x_bak_s_raddr <= ni6666083_count_bak_s(5 downto 0);
  p_x_bak_s_re2 <= 
    newState when thisState = b95s0 and s_b95_stage(1) = '1' else
    '0';
  p_x_bak_s_we <= 
    '1' when thisState = b93s0 else
    '1' when thisState = b93s2 else
    '1' when thisState = b93s4 else
    '1' when thisState = b93s5 else
    '1' when thisState = b93s7 else
    '1' when thisState = b93s8 else
    '1' when thisState = b93s10 else
    '1' when thisState = b93s11 else
    '1' when thisState = b93s13 else
    '0';
  p_x_bak_s_din <= 
    r_xoff when thisState = b93s0 else
    r_x when thisState = b93s2 else
    r_x1 when thisState = b93s4 else
    r_x when thisState = b93s5 else
    r_x1 when thisState = b93s7 else
    r_x when thisState = b93s8 else
    r_x1 when thisState = b93s10 else
    r_x when thisState = b93s11 else
    r_x1 when thisState = b93s13 else
    (others => 'X');
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (p_x_bak_s_re2 = '1') then
        r_x_bak_s <= p_x_bak_s_dout;
      end if;
    end if;
  end process;

  p_x_bak_s_imm2 <= 
    p_x_bak_s_dout when newState = '1' else
    r_x_bak_s;
-- "y_bak_s" memory signals
  ram_5: eval_func_y_bak_s_RAM
    port map (
      rst => reset, 
      clk => clk, 
      we => p_y_bak_s_we, 
      w_addr => p_y_bak_s_waddr, 
      r_addr => p_y_bak_s_raddr, 
      din => p_y_bak_s_din, 
      dout => p_y_bak_s_dout);

  p_y_bak_s_waddr <= 
    r_count_bak_s(5 downto 0) when thisState = b93s0 else
    r_count_bak_s(5 downto 0) when thisState = b93s2 else
    r_count_bak_s(5 downto 0) when thisState = b93s4 else
    r_count_bak_s(5 downto 0) when thisState = b93s5 else
    r_count_bak_s(5 downto 0) when thisState = b93s7 else
    r_count_bak_s(5 downto 0) when thisState = b93s8 else
    r_count_bak_s(5 downto 0) when thisState = b93s10 else
    r_count_bak_s(5 downto 0) when thisState = b93s11 else
    r_count_bak_s(5 downto 0) when thisState = b93s13 else
    (others => 'X');
  p_y_bak_s_raddr <= ni6666083_count_bak_s(5 downto 0);
  p_y_bak_s_re2 <= 
    newState when thisState = b95s0 and s_b95_stage(1) = '1' else
    '0';
  p_y_bak_s_we <= 
    '1' when thisState = b93s0 else
    '1' when thisState = b93s2 else
    '1' when thisState = b93s4 else
    '1' when thisState = b93s5 else
    '1' when thisState = b93s7 else
    '1' when thisState = b93s8 else
    '1' when thisState = b93s10 else
    '1' when thisState = b93s11 else
    '1' when thisState = b93s13 else
    '0';
  p_y_bak_s_din <= 
    r_yoff when thisState = b93s0 else
    r_y when thisState = b93s2 else
    r_y1 when thisState = b93s4 else
    r_y when thisState = b93s5 else
    r_y1 when thisState = b93s7 else
    r_y when thisState = b93s8 else
    r_y1 when thisState = b93s10 else
    r_y when thisState = b93s11 else
    r_y1 when thisState = b93s13 else
    (others => 'X');
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (p_y_bak_s_re2 = '1') then
        r_y_bak_s <= p_y_bak_s_dout;
      end if;
    end if;
  end process;

  p_y_bak_s_imm2 <= 
    p_y_bak_s_dout when newState = '1' else
    r_y_bak_s;
-- "board_bak_s" memory signals
  ram_6: eval_func_board_bak_s_RAM
    port map (
      rst => reset, 
      clk => clk, 
      we => p_board_bak_s_we, 
      w_addr => p_board_bak_s_waddr, 
      r_addr => p_board_bak_s_raddr, 
      din => p_board_bak_s_din, 
      dout => p_board_bak_s_dout);

  p_board_bak_s_waddr <= 
    r_count_bak_s(5 downto 0) when thisState = b93s1 else
    r_count_bak_s(5 downto 0) when thisState = b93s3 else
    r_count_bak_s(5 downto 0) when thisState = b93s4 else
    r_count_bak_s(5 downto 0) when thisState = b93s6 else
    r_count_bak_s(5 downto 0) when thisState = b93s7 else
    r_count_bak_s(5 downto 0) when thisState = b93s9 else
    r_count_bak_s(5 downto 0) when thisState = b93s10 else
    r_count_bak_s(5 downto 0) when thisState = b93s12 else
    r_count_bak_s(5 downto 0) when thisState = b93s13 else
    (others => 'X');
  p_board_bak_s_raddr <= ni6666083_count_bak_s(5 downto 0);
  p_board_bak_s_re2 <= 
    newState when thisState = b95s0 and s_b95_stage(1) = '1' else
    '0';
  p_board_bak_s_we <= 
    '1' when thisState = b93s1 else
    '1' when thisState = b93s3 else
    '1' when thisState = b93s4 else
    '1' when thisState = b93s6 else
    '1' when thisState = b93s7 else
    '1' when thisState = b93s9 else
    '1' when thisState = b93s10 else
    '1' when thisState = b93s12 else
    '1' when thisState = b93s13 else
    '0';
  p_board_bak_s_din <= 
    ni4682_board when thisState = b93s1 else
    ni6943_board_t when thisState = b93s3 else
    r_board_t1 when thisState = b93s4 else
    ni6955_board_t when thisState = b93s6 else
    r_board_t1 when thisState = b93s7 else
    ni6967_board_t when thisState = b93s9 else
    r_board_t1 when thisState = b93s10 else
    ni6979_board_t when thisState = b93s12 else
    r_board_t1 when thisState = b93s13 else
    (others => 'X');
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (p_board_bak_s_re2 = '1') then
        r_board_bak_s <= p_board_bak_s_dout;
      end if;
    end if;
  end process;

  p_board_bak_s_imm2 <= 
    p_board_bak_s_dout when newState = '1' else
    r_board_bak_s;
-- "x_bak_op" memory signals
  ram_7: eval_func_x_bak_op_RAM
    port map (
      rst => reset, 
      clk => clk, 
      we => p_x_bak_op_we, 
      w_addr => p_x_bak_op_waddr, 
      r_addr => p_x_bak_op_raddr, 
      din => p_x_bak_op_din, 
      dout => p_x_bak_op_dout);

  p_x_bak_op_waddr <= 
    r_count_bak_op(5 downto 0) when thisState = b88s0 else
    r_count_bak_op(5 downto 0) when thisState = b88s2 else
    r_count_bak_op(5 downto 0) when thisState = b88s4 else
    r_count_bak_op(5 downto 0) when thisState = b88s5 else
    r_count_bak_op(5 downto 0) when thisState = b88s7 else
    r_count_bak_op(5 downto 0) when thisState = b88s8 else
    r_count_bak_op(5 downto 0) when thisState = b88s10 else
    r_count_bak_op(5 downto 0) when thisState = b88s11 else
    r_count_bak_op(5 downto 0) when thisState = b88s13 else
    (others => 'X');
  p_x_bak_op_raddr <= ni6666080_count_bak_op(5 downto 0);
  p_x_bak_op_re2 <= 
    newState when thisState = b90s0 and s_b90_stage(1) = '1' else
    '0';
  p_x_bak_op_we <= 
    '1' when thisState = b88s0 else
    '1' when thisState = b88s2 else
    '1' when thisState = b88s4 else
    '1' when thisState = b88s5 else
    '1' when thisState = b88s7 else
    '1' when thisState = b88s8 else
    '1' when thisState = b88s10 else
    '1' when thisState = b88s11 else
    '1' when thisState = b88s13 else
    '0';
  p_x_bak_op_din <= 
    r_xoff when thisState = b88s0 else
    r_x when thisState = b88s2 else
    r_x1 when thisState = b88s4 else
    r_x when thisState = b88s5 else
    r_x1 when thisState = b88s7 else
    r_x when thisState = b88s8 else
    r_x1 when thisState = b88s10 else
    r_x when thisState = b88s11 else
    r_x1 when thisState = b88s13 else
    (others => 'X');
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (p_x_bak_op_re2 = '1') then
        r_x_bak_op <= p_x_bak_op_dout;
      end if;
    end if;
  end process;

  p_x_bak_op_imm2 <= 
    p_x_bak_op_dout when newState = '1' else
    r_x_bak_op;
-- "y_bak_op" memory signals
  ram_8: eval_func_y_bak_op_RAM
    port map (
      rst => reset, 
      clk => clk, 
      we => p_y_bak_op_we, 
      w_addr => p_y_bak_op_waddr, 
      r_addr => p_y_bak_op_raddr, 
      din => p_y_bak_op_din, 
      dout => p_y_bak_op_dout);

  p_y_bak_op_waddr <= 
    r_count_bak_op(5 downto 0) when thisState = b88s0 else
    r_count_bak_op(5 downto 0) when thisState = b88s2 else
    r_count_bak_op(5 downto 0) when thisState = b88s4 else
    r_count_bak_op(5 downto 0) when thisState = b88s5 else
    r_count_bak_op(5 downto 0) when thisState = b88s7 else
    r_count_bak_op(5 downto 0) when thisState = b88s8 else
    r_count_bak_op(5 downto 0) when thisState = b88s10 else
    r_count_bak_op(5 downto 0) when thisState = b88s11 else
    r_count_bak_op(5 downto 0) when thisState = b88s13 else
    (others => 'X');
  p_y_bak_op_raddr <= ni6666080_count_bak_op(5 downto 0);
  p_y_bak_op_re2 <= 
    newState when thisState = b90s0 and s_b90_stage(1) = '1' else
    '0';
  p_y_bak_op_we <= 
    '1' when thisState = b88s0 else
    '1' when thisState = b88s2 else
    '1' when thisState = b88s4 else
    '1' when thisState = b88s5 else
    '1' when thisState = b88s7 else
    '1' when thisState = b88s8 else
    '1' when thisState = b88s10 else
    '1' when thisState = b88s11 else
    '1' when thisState = b88s13 else
    '0';
  p_y_bak_op_din <= 
    r_yoff when thisState = b88s0 else
    r_y when thisState = b88s2 else
    r_y1 when thisState = b88s4 else
    r_y when thisState = b88s5 else
    r_y1 when thisState = b88s7 else
    r_y when thisState = b88s8 else
    r_y1 when thisState = b88s10 else
    r_y when thisState = b88s11 else
    r_y1 when thisState = b88s13 else
    (others => 'X');
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (p_y_bak_op_re2 = '1') then
        r_y_bak_op <= p_y_bak_op_dout;
      end if;
    end if;
  end process;

  p_y_bak_op_imm2 <= 
    p_y_bak_op_dout when newState = '1' else
    r_y_bak_op;
-- "board_bak_op" memory signals
  ram_9: eval_func_board_bak_op_RAM
    port map (
      rst => reset, 
      clk => clk, 
      we => p_board_bak_op_we, 
      w_addr => p_board_bak_op_waddr, 
      r_addr => p_board_bak_op_raddr, 
      din => p_board_bak_op_din, 
      dout => p_board_bak_op_dout);

  p_board_bak_op_waddr <= 
    r_count_bak_op(5 downto 0) when thisState = b88s1 else
    r_count_bak_op(5 downto 0) when thisState = b88s3 else
    r_count_bak_op(5 downto 0) when thisState = b88s4 else
    r_count_bak_op(5 downto 0) when thisState = b88s6 else
    r_count_bak_op(5 downto 0) when thisState = b88s7 else
    r_count_bak_op(5 downto 0) when thisState = b88s9 else
    r_count_bak_op(5 downto 0) when thisState = b88s10 else
    r_count_bak_op(5 downto 0) when thisState = b88s12 else
    r_count_bak_op(5 downto 0) when thisState = b88s13 else
    (others => 'X');
  p_board_bak_op_raddr <= ni6666080_count_bak_op(5 downto 0);
  p_board_bak_op_re2 <= 
    newState when thisState = b90s0 and s_b90_stage(1) = '1' else
    '0';
  p_board_bak_op_we <= 
    '1' when thisState = b88s1 else
    '1' when thisState = b88s3 else
    '1' when thisState = b88s4 else
    '1' when thisState = b88s6 else
    '1' when thisState = b88s7 else
    '1' when thisState = b88s9 else
    '1' when thisState = b88s10 else
    '1' when thisState = b88s12 else
    '1' when thisState = b88s13 else
    '0';
  p_board_bak_op_din <= 
    ni4055_board when thisState = b88s1 else
    ni6867_board_t when thisState = b88s3 else
    r_board_t1 when thisState = b88s4 else
    ni6879_board_t when thisState = b88s6 else
    r_board_t1 when thisState = b88s7 else
    ni6891_board_t when thisState = b88s9 else
    r_board_t1 when thisState = b88s10 else
    ni6903_board_t when thisState = b88s12 else
    r_board_t1 when thisState = b88s13 else
    (others => 'X');
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (p_board_bak_op_re2 = '1') then
        r_board_bak_op <= p_board_bak_op_dout;
      end if;
    end if;
  end process;

  p_board_bak_op_imm2 <= 
    p_board_bak_op_dout when newState = '1' else
    r_board_bak_op;
-- "x_bak_s2" memory signals
  ram_10: eval_func_x_bak_s2_RAM
    port map (
      rst => reset, 
      clk => clk, 
      we => p_x_bak_s2_we, 
      w_addr => p_x_bak_s2_waddr, 
      r_addr => p_x_bak_s2_raddr, 
      din => p_x_bak_s2_din, 
      dout => p_x_bak_s2_dout);

  p_x_bak_s2_waddr <= 
    r_count_bak_s2(5 downto 0) when thisState = b83s0 else
    r_count_bak_s2(5 downto 0) when thisState = b83s2 else
    r_count_bak_s2(5 downto 0) when thisState = b83s4 else
    r_count_bak_s2(5 downto 0) when thisState = b83s5 else
    r_count_bak_s2(5 downto 0) when thisState = b83s7 else
    r_count_bak_s2(5 downto 0) when thisState = b83s8 else
    r_count_bak_s2(5 downto 0) when thisState = b83s10 else
    r_count_bak_s2(5 downto 0) when thisState = b83s11 else
    r_count_bak_s2(5 downto 0) when thisState = b83s13 else
    (others => 'X');
  p_x_bak_s2_raddr <= ni6666077_count_bak_s2(5 downto 0);
  p_x_bak_s2_re2 <= 
    newState when thisState = b85s0 and s_b85_stage(1) = '1' else
    '0';
  p_x_bak_s2_we <= 
    '1' when thisState = b83s0 else
    '1' when thisState = b83s2 else
    '1' when thisState = b83s4 else
    '1' when thisState = b83s5 else
    '1' when thisState = b83s7 else
    '1' when thisState = b83s8 else
    '1' when thisState = b83s10 else
    '1' when thisState = b83s11 else
    '1' when thisState = b83s13 else
    '0';
  p_x_bak_s2_din <= 
    r_xoff when thisState = b83s0 else
    r_x when thisState = b83s2 else
    r_x1 when thisState = b83s4 else
    r_x when thisState = b83s5 else
    r_x1 when thisState = b83s7 else
    r_x when thisState = b83s8 else
    r_x1 when thisState = b83s10 else
    r_x when thisState = b83s11 else
    r_x1 when thisState = b83s13 else
    (others => 'X');
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (p_x_bak_s2_re2 = '1') then
        r_x_bak_s2 <= p_x_bak_s2_dout;
      end if;
    end if;
  end process;

  p_x_bak_s2_imm2 <= 
    p_x_bak_s2_dout when newState = '1' else
    r_x_bak_s2;
-- "y_bak_s2" memory signals
  ram_11: eval_func_y_bak_s2_RAM
    port map (
      rst => reset, 
      clk => clk, 
      we => p_y_bak_s2_we, 
      w_addr => p_y_bak_s2_waddr, 
      r_addr => p_y_bak_s2_raddr, 
      din => p_y_bak_s2_din, 
      dout => p_y_bak_s2_dout);

  p_y_bak_s2_waddr <= 
    r_count_bak_s2(5 downto 0) when thisState = b83s0 else
    r_count_bak_s2(5 downto 0) when thisState = b83s2 else
    r_count_bak_s2(5 downto 0) when thisState = b83s4 else
    r_count_bak_s2(5 downto 0) when thisState = b83s5 else
    r_count_bak_s2(5 downto 0) when thisState = b83s7 else
    r_count_bak_s2(5 downto 0) when thisState = b83s8 else
    r_count_bak_s2(5 downto 0) when thisState = b83s10 else
    r_count_bak_s2(5 downto 0) when thisState = b83s11 else
    r_count_bak_s2(5 downto 0) when thisState = b83s13 else
    (others => 'X');
  p_y_bak_s2_raddr <= ni6666077_count_bak_s2(5 downto 0);
  p_y_bak_s2_re2 <= 
    newState when thisState = b85s0 and s_b85_stage(1) = '1' else
    '0';
  p_y_bak_s2_we <= 
    '1' when thisState = b83s0 else
    '1' when thisState = b83s2 else
    '1' when thisState = b83s4 else
    '1' when thisState = b83s5 else
    '1' when thisState = b83s7 else
    '1' when thisState = b83s8 else
    '1' when thisState = b83s10 else
    '1' when thisState = b83s11 else
    '1' when thisState = b83s13 else
    '0';
  p_y_bak_s2_din <= 
    r_yoff when thisState = b83s0 else
    r_y when thisState = b83s2 else
    r_y1 when thisState = b83s4 else
    r_y when thisState = b83s5 else
    r_y1 when thisState = b83s7 else
    r_y when thisState = b83s8 else
    r_y1 when thisState = b83s10 else
    r_y when thisState = b83s11 else
    r_y1 when thisState = b83s13 else
    (others => 'X');
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (p_y_bak_s2_re2 = '1') then
        r_y_bak_s2 <= p_y_bak_s2_dout;
      end if;
    end if;
  end process;

  p_y_bak_s2_imm2 <= 
    p_y_bak_s2_dout when newState = '1' else
    r_y_bak_s2;
-- "board_bak_s2" memory signals
  ram_12: eval_func_board_bak_s2_RAM
    port map (
      rst => reset, 
      clk => clk, 
      we => p_board_bak_s2_we, 
      w_addr => p_board_bak_s2_waddr, 
      r_addr => p_board_bak_s2_raddr, 
      din => p_board_bak_s2_din, 
      dout => p_board_bak_s2_dout);

  p_board_bak_s2_waddr <= 
    r_count_bak_s2(5 downto 0) when thisState = b83s1 else
    r_count_bak_s2(5 downto 0) when thisState = b83s3 else
    r_count_bak_s2(5 downto 0) when thisState = b83s4 else
    r_count_bak_s2(5 downto 0) when thisState = b83s6 else
    r_count_bak_s2(5 downto 0) when thisState = b83s7 else
    r_count_bak_s2(5 downto 0) when thisState = b83s9 else
    r_count_bak_s2(5 downto 0) when thisState = b83s10 else
    r_count_bak_s2(5 downto 0) when thisState = b83s12 else
    r_count_bak_s2(5 downto 0) when thisState = b83s13 else
    (others => 'X');
  p_board_bak_s2_raddr <= ni6666077_count_bak_s2(5 downto 0);
  p_board_bak_s2_re2 <= 
    newState when thisState = b85s0 and s_b85_stage(1) = '1' else
    '0';
  p_board_bak_s2_we <= 
    '1' when thisState = b83s1 else
    '1' when thisState = b83s3 else
    '1' when thisState = b83s4 else
    '1' when thisState = b83s6 else
    '1' when thisState = b83s7 else
    '1' when thisState = b83s9 else
    '1' when thisState = b83s10 else
    '1' when thisState = b83s12 else
    '1' when thisState = b83s13 else
    '0';
  p_board_bak_s2_din <= 
    ni3422_board when thisState = b83s1 else
    ni6791_board_t when thisState = b83s3 else
    r_board_t1 when thisState = b83s4 else
    ni6803_board_t when thisState = b83s6 else
    r_board_t1 when thisState = b83s7 else
    ni6815_board_t when thisState = b83s9 else
    r_board_t1 when thisState = b83s10 else
    ni6827_board_t when thisState = b83s12 else
    r_board_t1 when thisState = b83s13 else
    (others => 'X');
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (p_board_bak_s2_re2 = '1') then
        r_board_bak_s2 <= p_board_bak_s2_dout;
      end if;
    end if;
  end process;

  p_board_bak_s2_imm2 <= 
    p_board_bak_s2_dout when newState = '1' else
    r_board_bak_s2;
end rtl;
